{"id": "1002557456", "service_name": "dothub", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["gate"], "actions_params": ["which gate?", "which gate"]}
{"id": "1003607964", "service_name": "bdrthermeagroup", "triggers_nn": ["temperature", "monitor change", "heating mode", "error", "fire", "set temperature", "thermostat", "mode", "threshold"], "triggers_params": ["date & time at which the temperature changed", "date with time", "fire when the measured temperature", "add date and time", "fire when the set temperature", "the new setpoint temperature", "which mode should trigger an action?", "threshold type", "which temperature?", "mode", "temperature"], "queries_nn": ["query", "threshold", "instance", "list", "change", "set temperature", "thermostat", "temperature"], "queries_params": ["date & time at which the temperature changed", "date with time", "fire when the measured temperature", "the new setpoint temperature", "threshold type", "which temperature?", "temperature"], "actions_nn": ["heating mode", "temperature", "thermostat"], "actions_params": ["which temperature should the thermostat be set to?", "mode", "temperature"]}
{"id": "1004582012", "service_name": "maker_webhooks", "triggers_nn": ["maker service", "web request", "event"], "triggers_params": ["event name", "event"], "queries_nn": ["time", "maker service", "url", "web request", "list", "event", "status code", "request"], "queries_params": ["body", "url", "method", "event", "content type", "event name"], "actions_nn": ["web request", "url"], "actions_params": ["body", "url", "method", "content type", "additional headers"]}
{"id": "1006616689", "service_name": "blueconnect", "triggers_nn": ["water measurement", "greather", "ph setpoint", "ph", "measurement", "orp", "swimming pool", "temperature setpoint", "pool water", "hour", "salinity", "swimming pool target value", "orp setpoint", "temperature"], "triggers_params": ["swimming pool id", "swimming pool"], "queries_nn": ["time", "water measurement", "ph", "swimming pool water", "list", "orp", "swimming pool", "alert", "pool water", "salinity", "swimming pool target value", "orp setpoint", "temperature"], "queries_params": ["swimming pool id", "swimming pool"], "actions_nn": [], "actions_params": []}
{"id": "1007026151", "service_name": "bang_olufsens_beo_link_gateway", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["beolink gateway scene"], "actions_params": ["select a scene", "bo button"]}
{"id": "1008080383", "service_name": "netatmo_security", "triggers_nn": ["motion", "netatmo", "someone", "tag battery", "issue", "camera", "closing", "vibration", "opening", "smoke alarm", "animal outside", "smoke", "tag", "person", "netatmo welcome", "netatmo presence", "alarm", "vehicle"], "triggers_params": ["which camera?", "which device ?", "ifttt param", "which home?", "which person?"], "queries_nn": ["motion", "home", "netatmo", "instance", "someone", "list", "tag battery", "issue", "camera", "event", "vibration", "smoke alarm", "tag", "time", "person", "netatmo welcome", "netatmo presence", "vehicle"], "queries_params": ["which camera?", "which device ?", "ifttt param", "which home?", "which person?"], "actions_nn": ["house", "everybody", "person"], "actions_params": ["ifttt param", "which home?", "which person?"]}
{"id": "1010821268", "service_name": "m2m_services", "triggers_nn": ["alarm event", "system", "alarm system"], "triggers_params": ["your communicator", "serial number"], "queries_nn": ["list", "alarm system"], "queries_params": ["your communicator", "serial number"], "actions_nn": ["alarm system"], "actions_params": ["your communicator", "serial number", "device pin"]}
{"id": "1015305304", "service_name": "scoutalarm", "triggers_nn": ["motion", "access sensor", "alarm", "door panel", "mode", "motion sensor"], "triggers_params": ["which mode?", "mode id", "which motion sensor?", "which door panel?", "device id", "which access sensor?"], "queries_nn": ["time", "motion", "door panel", "list", "scout system", "motion sensor", "state", "access sensor", "alarm", "mode"], "queries_params": ["which mode?", "mode id", "which motion sensor?", "which door panel?", "device id", "which access sensor?"], "actions_nn": ["choice", "hub chirp", "home", "location", "arm", "scout door panel", "siren", "vacation home", "mode", "fob", "scout hub"], "actions_params": ["which mode?", "mode id", "which key fob?", "rfid id", "which location?", "location id"]}
{"id": "1015826395", "service_name": "akari_ai", "triggers_nn": ["event"], "triggers_params": ["type"], "queries_nn": ["device list", "user"], "queries_params": ["device's name", "name"], "actions_nn": [], "actions_params": []}
{"id": "1016696540", "service_name": "whisker", "triggers_nn": ["month", "datum", "week", "event", "litter robot", "litter robot insight"], "triggers_params": ["event type", "insight type", "litter robot", "which litter-robot?"], "queries_nn": ["event", "list", "litter robot"], "queries_params": ["event type", "litter robot", "which litter-robot?"], "actions_nn": ["sleep mode", "action", "litter robot", "sleep schedule"], "actions_params": ["action type", "sleep time", "litter robot", "which litter-robot?"]}
{"id": "1024361943", "service_name": "nomos_system", "triggers_nn": ["motion", "rain indicator", "value", "brightness level", "device", "switch", "wind speed", "humidity level", "state change", "battery level", "frost alarm", "luminescence level", "wind alarm", "volume level", "device player", "temperature", "device brightness level", "contact sensor", "device volume level", "fire alarm", "co2 level", "scene", "threshold"], "triggers_params": ["which scene?", "which device?", "treshold", "cid", "player state", "playerstate", "threshold"], "queries_nn": ["device volume level", "device brightness level", "device wind speed", "device luminescence level", "device humidity", "device co2 level", "device temperature"], "queries_params": ["component", "which device?"], "actions_nn": ["brightness", "playlist", "point", "device", "thermostat device", "heating set point", "shutter device", "angle", "position", "level", "lighting device", "favorite list", "temperature", "light", "angle positioning", "set volume", "volume", "scene", "positioning", "media player device", "dimming", "color"], "actions_params": ["level/brightness", "command", "which scene?", "color", "which device?", "which command?", "setpoint", "cid", "listname", "scene", "angle", "position", "volume", "which playlist?", "color value or name", "which favorites list?", "level", "temperature"]}
{"id": "1025340536", "service_name": "aura_air", "triggers_nn": ["aura air device", "sensor", "value"], "triggers_params": ["limit time", "sensor", "value", "min max val", "device", "time between two events", "maxvalue", "minimum or maximum criteria"], "queries_nn": ["device", "mode"], "queries_params": ["the id of te device", "device name", "device mode", "the device name", "device id", "the current mode of the device"], "actions_nn": ["aura air device", "mode"], "actions_params": ["mode", "device"]}
{"id": "1027449951", "service_name": "lexi", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["lexi group", "scene", "lexi device", "group", "device"], "actions_params": ["brightness", "scene list", "temperature", "temp", "select group on which to apply scene", "scenelist", "outputid", "select device on which to apply scene", "select group", "device list", "group", "devicelist", "group list", "color"]}
{"id": "1030797155", "service_name": "Pixoo_64", "triggers_nn": ["pixoo", "start", "alarm", "stop", "schedule time", "clock"], "triggers_params": ["the name of device.", "device name", "date and time event was created.", "alarm id", "the name of time schedule", "schedule name", "the id of memorial", "memorial id", "start at"], "queries_nn": ["device name"], "queries_params": ["device name"], "actions_nn": ["custom channel", "pixoo", "cloud channel", "message", "device", "timer", "display", "action", "gif", "amazon music", "screen", "play information", "clock"], "actions_params": ["userlist id", "gif url", "gifname", "clockid", "text", "minutes", "userlistid", "clock id"]}
{"id": "103217569", "service_name": "haven_iaq", "triggers_nn": ["size", "voc", "compound", "micron", "pm2", "particulate matter", "threshold", "rh", "humidity", "temperature"], "triggers_params": ["rising", "which cam?", "device id", "threshold value", "above or below threshold? ", "threshold"], "queries_nn": ["event type", "list"], "queries_params": [], "actions_nn": [], "actions_params": []}
{"id": "1036553388", "service_name": "convo", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["account", "post"], "actions_params": ["body", "title", "attachment", "display picture", "title of the post", "recipients", "display name", "body of the post", "template attachment"]}
{"id": "1042774211", "service_name": "hc_cleaning_robot", "triggers_nn": ["roxxter"], "triggers_params": ["ha id", "which roxxter?"], "queries_nn": [], "queries_params": [], "actions_nn": ["roxxter home", "setting", "cleaning program", "roxxter", "program", "mode", "map"], "actions_params": ["which roxxter?", "should a running program be canceled?", "cancel running program", "ha id", "cleaning mode"]}
{"id": "1045279815", "service_name": "domovea", "triggers_nn": ["brightness", "luminosity", "value", "security system", "co2", "device", "wind speed", "thermostat", "humidity", "smoke alarm", "intrusion", "shades", "temperature", "ppm", "scene", "room temperature", "percentage"], "triggers_params": ["temperature value", "humidity percentage value", "what humidity percentage?", "what temperature?", "which thermostat?", "which co2 sensor?", "which smoke alarm?", "which shades?", "which luminosity sensor?", "which light?", "which scene?", "brightness value", "which device?", "what luminosity value?", "what ppm value?", "device id", "what indoor temperature?", "what brightness value?", "scene id", "which weather station?", "what wind speed ?", "which security system?", "luminosity value", "wind speed value", "which humidity sensor?", "ppm value", "what outdoor temperature?"], "queries_nn": ["time", "brightness", "value", "celcius", "co2", "list", "ppm", "device", "alert", "security system", "shades", "temperature"], "queries_params": ["which weather station?", "which security system?", "temperature value", "which light?", "brightness value", "what temperature?", "which device?", "what ppm value?", "device id", "which co2 sensor?", "which shades?", "what brightness value?", "ppm value", "what outdoor temperature?"], "actions_nn": ["water", "shade", "value", "device", "thermostat temperature setpoint", "mode", "scene", "position", "thermostat", "intensity", "tune", "percentage"], "actions_params": ["scene id", "temperature value", "which scene?", "thermostat mode", "what temperature setpoint?", "which device?", "which thermostat?", "what position percentage?", "device id", "intensity percentage value", "what intensity?", "position percentage value", "which shades?", "what thermostat mode?"]}
{"id": "104610909", "service_name": "musixmatch", "triggers_nn": ["track", "song", "musixmatch", "lyric"], "triggers_params": ["created at", "artist name", "album name", "date and time event was created.", "track name", "share url", "the lyrics share url.", "the name of the artist.", "the title of the song.", "the name of the song's album.", "the url of the album cover art.", "album coverart"], "queries_nn": ["time", "lyric", "musixmatch", "track", "song", "list"], "queries_params": ["created at", "artist name", "album name", "date and time event was created.", "track name", "share url", "the lyrics share url.", "the name of the artist.", "the title of the song.", "the name of the song's album.", "the url of the album cover art.", "album coverart"], "actions_nn": ["result", "musixmatch", "track", "search", "favorite"], "actions_params": ["artist name", "search query"]}
{"id": "1050783949", "service_name": "grouplotse", "triggers_nn": ["group decision", "action"], "triggers_params": ["choose your grouplotse and rule", "rule"], "queries_nn": [], "queries_params": [], "actions_nn": ["grouplotse", "message"], "actions_params": ["devicemessage", "message text", "choose your interface", "device"]}
{"id": "1055351440", "service_name": "somfy_tahoma_north_america", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["tahoma scene", "launch"], "actions_params": ["action group", "which scenario?"]}
{"id": "1055884022", "service_name": "strava", "triggers_nn": ["photo", "route", "event", "club", "segment", "strava", "activity"], "triggers_params": ["the name of the route.", "which club?", "date and time event was created.", "which activity?", "distance", "segment distance", "segment name", "the url to the map image of the route.", "the total distance of the route in meters.", "route map image url", "the url to the route on strava.", "route url", "created at", "which club", "the url to the segment on strava.", "the type of activity the route was created for.", "the total distance of the segment in meters.", "activity type", "route name", "the type of activity for the segment.", "the name of the starred segment.", "segment url"], "queries_nn": ["time", "photo", "club", "activity", "list", "activity stats", "route", "event", "athlete", "segment", "strava"], "queries_params": ["date and time event was created.", "which club?", "which activity?", "the total elapsed time during recent (last 4 weeks) rides.", "ytd run elapsed time", "segment distance", "ytd run elevation gain", "the year to date ride elapsed time (seconds).", "the year to date swim moving time (seconds).", "the all time swim distance (meters).", "recent swim elapsed time", "the all time ride elevation gain (meters).", "created at", "the year to date ride distance (meters).", "recent ride moving time", "the all time swim elapsed time (seconds).", "the all time swim count.", "all run moving time", "ytd swim moving time", "the total distance of the segment in meters.", "the highest climb ridden by the athlete.", "activity type", "recent run distance", "the year to date run elapsed time (seconds).", "route name", "ytd swim elapsed time", "all ride distance", "ytd ride elapsed time", "the name of the route.", "biggest climb elevaton gain", "the year to date swim distance (meters).", "recent ride distance", "the all time run count.", "recent ride count", "the total number of achievements during recent (last 4 weeks) runs.", "the longest distance ridden by the athlete.", "all swim moving time", "all run distance", "the total distance of the route in meters.", "the url to the route on strava.", "recent run count", "biggest ride distance", "the total elapsed time (seconds) during recent (last 4 weeks) swims.", "the year to date run distance (meters).", "ytd run moving time", "ytd ride count", "the total number of recent (last 4 weeks) swims.", "the total distance traveled during recent (last 4 weeks) runs (meters).", "all ride elapsed time", "all run elevation gain", "ytd ride elevation gain", "all swim elapsed time", "recent run elapsed time", "the year to date swim elapsed time (seconds).", "the total elevation gain (meters) during recent (last 4 weeks) swims.", "recent swim distance", "ytd swim distance", "the type of activity for the segment.", "the all time ride distance (meters).", "the number of recent (last 4 weeks) rides for the athlete.", "recent ride elapsed time", "all run count", "the year to date ride elevation gain (meters).", "the total number of recent (last 4 weeks) runs.", "all ride count", "recent run elevation gain", "the total elevation gain for recent (last 4 weeks) rides.", "recent swim count", "the all time ride moving time (seconds).", "all ride elevation gain", "the all time ride elapsed time (seconds).", "the url to the map image of the route.", "route map image url", "the total distance travelled during recent (last 4 weeks) rides.", "route url", "the total elevation gain (meters) during recent (last 4 weeks) runs.", "ytd run distance", "ytd ride distance", "the all time swim moving time (seconds).", "which club", "the total number of achievements during recent (last 4 weeks) rides.", "the all time run elevation gain (meters).", "the all time run distance (meters).", "all run elapsed time", "recent run achievement count", "the all time run elapsed time (seconds).", "recent ride elevation gain", "recent swim elevation gain", "segment url", "the all time ride count.", "the name of the starred segment.", "the year to date swim count.", "the year to date run elevation gain (meters).", "the total moving time (seconds) during recent (last 4 weeks) runs.", "the year to date run count.", "distance", "segment name", "recent swim moving time", "recent swim achievement count", "the year to date run moving time (seconds).", "all ride moving time", "the all time run moving time (seconds).", "recent run moving time", "all swim distance", "the total number of achievements during recent (last 4 weeks) swims.", "ytd ride moving time", "the all time swim elevation gain (meters).", "the year to date swim elevation gain (meters).", "the year to date ride count.", "recent ride achievement count", "all swim elevation gain", "all swim count", "ytd swim elevation gain", "the total elapsed time (seconds) for recent (last 4 weeks) runs.", "the total moving time (seconds) during recent (last 4 weeks) swims.", "the url to the segment on strava.", "ytd swim count", "the type of activity the route was created for.", "the year to date ride moving time (seconds).", "ytd run count", "the total moving time during recent (last 4 weeks) rides.", "the total distance (meters) traveled during recent (last 4 weeks) swims."], "actions_nn": ["strava", "activity", "weight"], "actions_params": ["elapsed time", "activity name", "distance", "name", "activity type", "type", "is this activity a commute?", "keep private?", "description", "new weight", "commute", "keep private", "weight unit", "weight unit?"]}
{"id": "106247799", "service_name": "ios_calendar", "triggers_nn": ["phrase", "event", "calendar", "keyword"], "triggers_params": ["organizer", "title", "location", "notes", "calendarname", "the name of the event's calendar.", "keyword or phrase", "the organizer of the event, if any.", "the date the event ends.", "the location of the event, if any.", "title of the calendar event.", "a comma-separated list of people invited to the event.", "the date the event was added to the calendar.", "invitees", "the date the event starts.", "datecreated", "query", "url", "enddate", "the url associated with the event, if any.", "startdate", "calendar name", "the notes associated with the event, if any."], "queries_nn": [], "queries_params": [], "actions_nn": ["event", "action", "calendar"], "actions_params": ["duration in minutes", "title", "add url", "duration", "url", "start date", "location", "alert timing", "alert", "notes", "calendar name", "event title"]}
{"id": "1064598806", "service_name": "ezviz", "triggers_nn": ["alarm event"], "triggers_params": ["which alarm type?", "type", "which device?", "serial"], "queries_nn": ["alarm event", "list"], "queries_params": ["which alarm type?", "type", "which device?", "serial"], "actions_nn": ["turn privacy mode", "sleep mode", "alarm notification"], "actions_params": ["which mode?", "which device?", "mode", "serial"]}
{"id": "1066482945", "service_name": "wemo_slowcooker", "triggers_nn": ["cooker", "cook timer", "mode change"], "triggers_params": ["subtype", "macaddress", "which cooking mode?", "which device?"], "queries_nn": [], "queries_params": [], "actions_nn": ["cooker", "time period", "cooking mode"], "actions_params": ["what cooking mode?", "subtype", "subtype1", "which device?", "which cooking mode?", "cook time (in minutes)", "macaddress"]}
{"id": "1068907078", "service_name": "aimore", "triggers_nn": ["turn", "device"], "triggers_params": ["select device", "please select your device"], "queries_nn": ["device"], "queries_params": ["select device", "please select your device"], "actions_nn": ["device"], "actions_params": ["select device"]}
{"id": "1069313777", "service_name": "nikohomecontrol", "triggers_nn": ["routine", "motor", "device"], "triggers_params": ["which routine will be the trigger?", "device", "routine", "motor", "which motor will be the trigger?"], "queries_nn": ["motor", "list"], "queries_params": ["motor", "which motor will be the trigger?"], "actions_nn": ["routine", "device brightness", "turn device", "value", "motor device position", "motor device"], "actions_params": ["position value", "which routine will be activated?", "brightness", "brightness value", "device", "dimmer", "routine", "motor", "position"]}
{"id": "1078208759", "service_name": "dart", "triggers_nn": ["dart rider alert"], "triggers_params": ["filter by keyword (recommended)", "query"], "queries_nn": ["dart rider alert", "list"], "queries_params": ["filter by keyword (recommended)", "query"], "actions_nn": [], "actions_params": []}
{"id": "1080092097", "service_name": "wink_shortcuts", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["shortcut"], "actions_params": ["scene id", "which shortcut?"]}
{"id": "1084354506", "service_name": "lightwaverf_events", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["event"], "actions_params": ["which event", "which event?"]}
{"id": "1087137465", "service_name": "dribbble_job_board", "triggers_nn": ["job"], "triggers_params": ["query", "what kind of job opportunity are you looking for?"], "queries_nn": [], "queries_params": [], "actions_nn": [], "actions_params": []}
{"id": "1088715593", "service_name": "spotcam", "triggers_nn": ["sound", "system", "face", "motion event", "spotcam solo", "fence", "someone", "event", "spotcam ring battery cover", "baby", "temperature event", "pet", "humidity event", "object", "illumination event", "battery event", "person", "spotcam ring video doorbell", "vehicle"], "triggers_params": ["spotcam serial number", "sn"], "queries_nn": ["motion event", "fence", "list", "battery event", "person", "event", "spotcam ring battery cover", "spotcam solo", "vehicle", "spotcam ring video doorbell"], "queries_params": ["spotcam serial number", "sn"], "actions_nn": ["alert function", "spotcam hd eva", "night vision mode", "point", "snapshot", "user", "email", "siren", "spotcam", "spotcam sense series", "spotcam account email address"], "actions_params": ["which preset point would you like to move?", "preset of sn", "spotcam serial number", "sustain", "sn"]}
{"id": "1089090894", "service_name": "android_device", "triggers_nn": ["app", "wifi network", "notification", "android device", "device", "android device disconnect"], "triggers_params": ["devicename", "query", "appname", "the time the network change occurred.", "receivedat", "app name", "notificationmessage", "connectedtoordisconnectedfrom", "occurredat", "filter by notification keyword", "whether you connected to or disconnected from the network.", "ssid", "the time the bluetooth device disconnected.", "the ssid of the wifi network.", "the name of the bluetooth device.", "the time the bluetooth device connected.", "network name", "notificationtitle"], "queries_nn": [], "queries_params": [], "actions_nn": ["navigation", "image url", "wallpaper", "android device", "song", "destination", "turn guidance", "music", "bluetooth", "launch google", "ringtone", "turn", "ringtone volume"], "actions_params": ["enter a song title", "image url", "query", "navigation method", "photo url", "vibrate", "navigation type", "volume", "enter a destination"]}
{"id": "1090371714", "service_name": "wemo_coffeemaker", "triggers_nn": ["time", "place carafe", "water filter", "coffeemaker", "water mode", "cleaning cycle", "refill", "mode"], "triggers_params": ["what time?", "subtype", "macaddress", "which device?"], "queries_nn": ["time", "mode", "water filter", "coffeemaker", "list", "cleaning cycle"], "queries_params": ["what time?", "subtype", "macaddress", "which device?"], "actions_nn": ["brew cycle", "coffeemaker"], "actions_params": ["macaddress", "which device?"]}
{"id": "1091101406", "service_name": "intesishome", "triggers_nn": ["value", "message", "a", "c unit", "temperature"], "triggers_params": ["which device", "temperature value", "which device?", "temperature units", "temperature unit"], "queries_nn": ["time", "value", "message", "a", "c unit", "list", "temperature"], "queries_params": ["which device", "temperature value", "which device?", "temperature units", "temperature unit"], "actions_nn": ["intesishome a", "timer", "scene", "c", "c off"], "actions_params": ["which device", "setpoint temperature value", "which scene?", "setpoint temperature units", "which device?", "which scene", "which timer", "which timer?"]}
{"id": "1098219000", "service_name": "wiser_air", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["auto mode", "home", "heat", "air thermostat", "mode", "temperature"], "actions_params": ["which mode?", "which device?", "device", "which system mode?", "mode", "unit", "which temperature?", "temperature unit", "temperature"]}
{"id": "1098759378", "service_name": "lightform_cloud", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["projection", "brightness", "index", "device", "projector", "advance", "lf device", "reboot", "slide", "testcard", "slide parameter value", "project"], "actions_params": ["what is your device's serial number?", "brightness", "value", "name", "index", "which slide is the parameter on?", "type", "what type of parameter is this?", "which parameter should we update?", "which slide should we go to?", "how bright?", "what should we set the parameter to?", "slide name", "device serial number"]}
{"id": "1100221022", "service_name": "DawnHouse", "triggers_nn": ["bed alarm clock"], "triggers_params": ["select smart bed alarm clock", "select clock"], "queries_nn": ["status", "device"], "queries_params": ["current state", "the current state of the device, e.g. &quot;flat&quot;, &quot;tv&quot;, etc."], "actions_nn": ["position", "g position", "bed"], "actions_params": []}
{"id": "1100957182", "service_name": "augusthome", "triggers_nn": ["motion", "lock", "doorbell", "someone", "person"], "triggers_params": ["which doorbell", "which person", "which lock?", "which lock", "which doorbell?", "which person?"], "queries_nn": ["lock", "event", "list", "person"], "queries_params": ["which person?", "which lock", "which person", "which lock?"], "actions_nn": [], "actions_params": []}
{"id": "11011265", "service_name": "alexa_doorbell", "triggers_nn": [], "triggers_params": [], "queries_nn": ["doorbell"], "queries_params": ["doorbell key", "which doorbell would you like to find out about?"], "actions_nn": ["alexa doorbell", "ijpuk.com website"], "actions_params": ["doorbell key", "which doorbell would you like to trigger", "do you want to switch it on or off", "which doorbell would you like to turn on or off", "state"]}
{"id": "1101960818", "service_name": "onenote", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["action", "image", "section", "page", "notebook", "link"], "actions_params": ["body", "title", "image url", "url", "section", "notebook", "description", "link url"]}
{"id": "110319665", "service_name": "verizon_cloud", "triggers_nn": ["photo", "contact", "folder", "album", "file"], "triggers_params": ["created at", "which album?", "date and time event was created.", "the name of the contact.", "name", "folder path", "email", "the phone number of the contact.", "the email address of the contact.", "phone", "which playlist"], "queries_nn": ["time", "photo", "contact", "folder", "album", "file", "list"], "queries_params": ["created at", "which album?", "date and time event was created.", "the name of the contact.", "name", "folder path", "email", "the phone number of the contact.", "the email address of the contact.", "phone", "which playlist"], "actions_nn": ["upload", "folder", "verizon cloud account", "album", "file", "verizon cloud"], "actions_params": ["album name", "file url", "folder path", "file name", "playlist name"]}
{"id": "1105079617", "service_name": "ballotpedia", "triggers_nn": ["ballotpedia", "news"], "triggers_params": ["filter by keyword(s) (optional)", "query"], "queries_nn": ["ballotpedia", "list", "news"], "queries_params": ["filter by keyword(s)", "query"], "actions_nn": [], "actions_params": []}
{"id": "110725446", "service_name": "app_store", "triggers_nn": ["drop", "app", "developer name", "price", "search", "version", "keyword"], "triggers_params": ["search for", "app name or url", "enter an app's name or url", "search query"], "queries_nn": ["time", "app", "drop", "developer name", "release", "price", "collection", "version", "list", "event", "search", "keyword"], "queries_params": ["search for", "which collection?", "collection", "app name or url", "search query", "enter an app's name or url"], "actions_nn": [], "actions_params": []}
{"id": "1107438557", "service_name": "i_zone", "triggers_nn": ["izone system", "idrate", "c system supply air temperature rise", "temperature", "ac unit temperature rise", "fault", "controller", "zone", "ilight switch battery", "ac unit temperature", "idrate station", "ilight", "izone system supply air temperature", "a", "temperature rise", "threshold"], "triggers_params": ["temperature threshold", "which light?", "which device?", "id", "which zone?", "threshold"], "queries_nn": ["ac unit temperature rise", "izone system", "fault", "idrate station", "list", "ilight", "idrate", "izone system supply air temperature", "threshold"], "queries_params": ["temperature threshold", "which light?", "which device?", "id", "threshold"], "actions_nn": ["izone system", "degree celcius", "program", "colour", "isave", "c setpoint temperature", "effect", "idrate", "zone setpoint temperature", "time", "c sleep timer", "ilight", "favourite", "c setpoint", "c system", "a", "idrate station", "izone air condition system", "izone ac system", "brightness", "izone a", "fan speed", "izone favourite", "mode", "setpoint temperature", "period", "zone", "weather mode", "idrate system", "station", "number", "percentage"], "actions_params": ["weather", "temp", "which program?", "ratio", "how long?", "degrees", "timer", "effect", "which zone?", "what temperature?", "which speed?", "which brightness?", "which option?", "which device", "which light?", "which forecast weather?", "brightness", "option", "which device?", "which run time ration percentage?", "id", "which color?", "which station?", "which effect?", "mode", "which mode?", "speed", "how many degrees?", "which favourite?", "color"]}
{"id": "1108205771", "service_name": "do_button", "triggers_nn": ["button"], "triggers_params": ["shareurl", "locationmapimageurl", "longitude", "the image of the map of the location of the button press.", "occurredat", "the link to the map of the location of the button press.", "the date and time you pressed the button.", "the latitude of the location of the button press.", "latitude", "locationmapurl", "the link to the share page for the button press.", "the longitude of the location of the button press."], "queries_nn": [], "queries_params": [], "actions_nn": [], "actions_params": []}
{"id": "1113078104", "service_name": "switchbot", "triggers_nn": ["trigger condition", "motion", "humidity change", "\u30b5\u30fc\u30d3\u30b9\u3092\u30c8\u30ea\u30ac\u30fc\u306b\u3057\u307e\u3059", "\u3053\u306e\u30c8\u30ea\u30ac\u30fc\u306f\u30ed\u30c3\u30af\u306e\u72b6\u614b\u304c\u5909\u66f4\u3057\u305f\u6642\u306b\u5b9f\u884c\u3059\u308b", "\u30d7\u30e9\u30b0\u30df\u30cb\u306e\u72b6\u614b\u3092\u30a2\u30af\u30b7\u30e7\u30f3\u5b9f\u884c\u6761\u4ef6\u3068\u3057\u3066\u8a2d\u5b9a\u3067\u304d\u307e\u3059", "switchbot\u958b\u9589\u30bb\u30f3\u30b5\u30fc\u304c\u30b5\u30fc\u30d3\u30b9\u3092\u30c8\u30ea\u30ac\u30fc\u3057\u307e\u3059", "window", "\u6e29\u5ea6", "switchbot\u4eba\u611f\u30bb\u30f3\u30b5\u30fc\u304c\u30b5\u30fc\u30d3\u30b9\u3092\u30c8\u30ea\u30ac\u30fc\u3057\u307e\u3059", "motion sensor", "robot vacuum cleaner", "\u30e1\u30fc\u30bf\u30fc", "behaviour", "plug mini", "switchbot motion sensor", "temperature", "status", "\u3053\u306e\u30c8\u30ea\u30ac\u30fc\u306f\u30ed\u30dc\u30c3\u30c8\u306e\u72b6\u614b\u304c\u5909\u66f4\u3057\u305f\u6642\u306b\u5b9f\u884c\u3057\u307e\u3059", "\u304c", "thermometer", "door", "contact sensor", "switchbot\u6e29\u6e7f\u5ea6\u8a08", "\u6e7f\u5ea6\u306e\u5909\u5316\u3092\u691c\u51fa\u3055\u308c\u305f\u6642", "\u52d5\u4f53\u691c\u77e5\u306e\u7d50\u679c\u306b\u3088\u3063\u3066", "hygrometer", "meter", "switchbot lock", "service", "\u958b\u9589\u72b6\u614b\u306e\u691c\u77e5\u7d50\u679c\u306b\u3088\u3063\u3066"], "triggers_params": ["lock status changed", "motion detection", "select a device", "\u958b\u9589\u3068\u52d5\u4f53\u3092\u691c\u77e5\u3059\u308b", "sweeper condition", "temperature value", "humidity condition", "choose a robot", "contact and motion detection", "power value", "choose a device", "\u96fb\u529b\u5024", "\u52d5\u4f53\u304c\u691c\u77e5\u3055\u308c\u306a\u3044\u6642\u9593\u3092\u8a2d\u5b9a", "\u6e29\u5ea6\u503c", "\u30ed\u30dc\u30c3\u30c8\u3092\u9078\u629e", "ambient brightness", "\u6e29\u5ea6\u6761\u4ef6", "\u30c7\u30d0\u30a4\u30b9\u3092\u9078\u629e\u3059\u308b", "\u30ed\u30dc\u30c3\u30c8\u72b6\u614b\u5909\u66f4", "\u52d5\u4f53\u691c\u77e5", "nobody min", "is move", "temperature condition", "\u30c7\u30d0\u30a4\u30b9\u3092\u9078\u629e", "humidity value", "plug condition", "brightness", "set the time of no motion detected ", "open state", "\u30ed\u30c3\u30af\u72b6\u614b\u5909\u66f4", "robot status changed", "\u96fb\u6e90\u306e\u6761\u4ef6", "set the time of no motion detected", "temperature unit", "\u6e7f\u5ea6\u6761\u4ef6", "\u6e7f\u5ea6\u503c", "\u7167\u5ea6", "\u6e29\u5ea6\u5358\u4f4d\u3092\u9078\u629e", "lock status"], "queries_nn": [], "queries_params": [], "actions_nn": ["robot", "\u30ed\u30dc\u30c3\u30c8\u306f\u5438\u5f15\u529b\u306e\u30e2\u30fc\u30c9\u3092\u5207\u308a\u66ff\u3048\u307e\u3059", "switchbot\u30ab\u30fc\u30c6\u30f3\u3092\u5236\u5fa1\u3057\u307e\u3059", "\u672c\u30da\u30fc\u30b8\u3067\u30c6\u30fc\u30d7\u30e9\u30a4\u30c8\u306e\u30ab\u30e9\u30fc\u3092\u8a2d\u5b9a\u3067\u304d\u307e\u3059", "ir", "page", "switch", "on", "\u30ed\u30dc\u30c3\u30c8\u306f\u6e05\u6383", "\u30ed\u30dc\u30c3\u30c8\u306f\u6e05\u6383\u3092\u958b\u59cb\u3057\u307e\u3059", "plug", "color bulb", "\u3053\u306e\u30a2\u30af\u30b7\u30e7\u30f3\u306fswitchbot\u30b9\u30de\u30fc\u30c8\u6247\u98a8\u6a5f\u3092\u64cd\u4f5c\u3067\u304d\u307e\u3059", "\u672c\u30da\u30fc\u30b8\u3067\u30c6\u30fc\u30d7\u30e9\u30a4\u30c8\u306e\u72b6\u614b\u3092\u8a2d\u5b9a\u3067\u304d\u307e\u3059", "type", "signal", "bot", "\u672c\u30da\u30fc\u30b8\u3067switchbot\u30a2\u30d7\u30ea\u306b\u4fdd\u5b58\u3055\u308c\u305f\u30d7\u30ea\u30bb\u30c3\u30c8\u3092\u8a2d\u5b9a\u3067\u304d\u307e\u3059", "scene", "fan", "\u518d\u5145\u96fb\u3092\u4e00\u6642\u505c\u6b62\u3057\u307e\u3059", "other", "brightness", "fan speed", "color temperature", "switchbot app", "air conditioner", "state", "tv", "\u30d7\u30e9\u30b0\u30df\u30cb\u306e\u5b9f\u884c\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u8a2d\u5b9a\u3067\u304d\u307e\u3059", "plug mini", "appliance", "\u672c\u30da\u30fc\u30b8\u3067\u96fb\u7403\u306e\u72b6\u614b\u3092\u8a2d\u5b9a\u3067\u304d\u307e\u3059", "mode", "hub", "temperature", "switchbot", "feature", "\u672c\u30da\u30fc\u30b8\u3067\u96fb\u7403\u306e\u660e\u308b\u3055\u3092\u8a2d\u5b9a\u3067\u304d\u307e\u3059", "preset", "switchbot\u30b9\u30de\u30fc\u30c8\u52a0\u6e7f\u5668\u3092\u5236\u5fa1\u3057\u307e\u3059", "strip light", "\u672c\u30da\u30fc\u30b8\u3067\u96fb\u7403\u306e\u30ab\u30e9\u30fc\u3092\u8a2d\u5b9a\u3067\u304d\u307e\u3059", "\u30ed\u30dc\u30c3\u30c8\u306f\u5145\u96fb\u306b\u5e30\u9084\u3057\u307e\u3059", "humidifier", "\u3053\u306e\u30a2\u30af\u30b7\u30e7\u30f3\u306f", "action", "switchbot curtain", "\u30a2\u30d7\u30ea\u3067\u4f5c\u6210\u3057\u305f\u30b7\u30fc\u30f3\u3092\u5b9f\u884c\u3057\u307e\u3059", "color"], "actions_params": ["choose a plug mini", "\u6247\u98a8\u6a5f\u3092\u9078\u629e", "choose a robot", "\u30c6\u30fc\u30d7\u30e9\u30a4\u30c8\u3092\u9078\u629e", "turn on off", "\u30e2\u30fc\u30c9\u3092\u9078\u629e", "fade rate", "choose a index", "choose a fan", "\u30ab\u30e9\u30fc\u3092\u9078\u629e", "\u9045\u5ef6\u6642\u9593", "set brightness", "choose a plug", "choose a device", "\u30d5\u30a7\u30fc\u30c9", "wind mode", "\u30ed\u30dc\u30c3\u30c8\u3092\u9078\u629e", "\u52a0\u6e7f\u5668\u3092\u9078\u629e\u3059\u308b", "\u30aa\u30f3/\u30aa\u30d5\u306b\u3059\u308b", "wind speed level", "\u98a8\u91cf", "\u30d7\u30ea\u30bb\u30c3\u30c8\u306e\u756a\u53f7\u3092\u9078\u629e", "\u96fb\u7403\u3092\u9078\u629e", "choose mode", "choose an a/c", "choose a mode", "fan shake angle", "\u30e2\u30fc\u30c9\u3092\u9078\u629e\u3059\u308b", "\u96fb\u6e90\u3092\u9078\u629e", "choose a strip light", "\u904b\u8ee2\u30fb\u505c\u6b62", "scene list", "fan speed", "choose an action", "set color temperature ", "delay time", "\u8272\u6e29\u5ea6\u3092\u8a2d\u5b9a", "position", "\u30e2\u30fc\u30c9", "\u30aa\u30f3/\u30aa\u30d5", "mode", "\u660e\u308b\u3055\u3092\u8a2d\u5b9a", "temperature", "scene name", "turn on/off", "device action", "\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u9078\u629e", "choose a remote", "set color", "set time", "oscillation angle", "choose a humidifier", "set brightness ", "\u30b7\u30fc\u30f3\u30ea\u30b9\u30c8", "action", "set temperature", "chose a remote", "choose color ", "choose a color bulb", "chose a device", "choose a tv", "choose preset number ", "choose a remote button", "choose a curtain", "\u30ab\u30fc\u30c6\u30f3\u3092\u9078\u629e", "\u9996\u632f\u308a\u89d2\u5ea6"]}
{"id": "1116269984", "service_name": "link_smart_home", "triggers_nn": ["aroma diffuser", "light", "outlet"], "triggers_params": ["device id", "which device?", "turned on or off?", "value"], "queries_nn": ["instance", "list", "outlet state"], "queries_params": ["device id", "which device?", "turned on or off?", "value"], "actions_nn": ["aroma diffuser", "brightness", "light", "color temperature", "outlet"], "actions_params": ["set brightness to", "value", "which device?", "device id", "set color temperature to", "turns on or off?"]}
{"id": "1116874090", "service_name": "hc_coffee_machine", "triggers_nn": ["coffee machine", "water tank", "child lock", "bean container"], "triggers_params": ["which coffee machine?", "ha id"], "queries_nn": ["time", "history", "coffee machine", "water tank", "list"], "queries_params": ["which coffee machine?", "ha id"], "actions_nn": ["coffee milk mix program", "milk program", "setting", "coffee world program", "coffee machine", "coffee machine program", "coffee program"], "actions_params": ["size", "strength", "bean amount", "fill quantity", "program", "milk amount", "which coffee machine?", "ha id"]}
{"id": "1119279281", "service_name": "asana", "triggers_nn": ["asana", "workspace", "task", "project", "tag"], "triggers_params": ["project name", "tag name or url", "project name or url:", "which workspace", "which workspace?", "tag name", "which workspace is the project in?"], "queries_nn": ["time", "asana", "workspace", "task", "list", "project"], "queries_params": ["project name", "project name or url:", "which workspace", "which workspace?", "which workspace is the project in?"], "actions_nn": ["task", "project", "workspace"], "actions_params": ["add a tag?", "assignee", "attach a file", "project name", "due on", "attach a file?", "notes", "which workspace?", "which workspace", "team name", "in which project?", "task name", "project description", "tag name"]}
{"id": "1120605339", "service_name": "vont_home", "triggers_nn": ["device"], "triggers_params": ["action", "device name"], "queries_nn": ["status", "user device"], "queries_params": ["online status of the device.", "online status", "device name of the user.", "device name"], "actions_nn": ["brightness", "choosing", "light", "device", "color tempreture"], "actions_params": ["deviceid", "brightness", "device name", "warm white", "turned on/off", "actionvalue"]}
{"id": "1120608976", "service_name": "view_prod", "triggers_nn": ["temperature", "hvac mode", "variation", "wind speed", "treshold", "condition", "power", "state", "off", "changing", "room temperature", "setpoint temperature", "rain amount", "threshold"], "triggers_params": ["threshold", "device", "condition"], "queries_nn": [], "queries_params": [], "actions_nn": ["brightness", "light", "temperature setpoint", "climate mode", "roller shutter", "position", "scenario", "color"], "actions_params": ["device", "state"]}
{"id": "1125261598", "service_name": "eight", "triggers_nn": ["app", "night mode", "event", "alarm", "day mode", "button"], "triggers_params": ["which event", "which event?", "which mode?"], "queries_nn": ["app", "night mode", "event", "alarm", "day mode", "button", "list"], "queries_params": ["which event", "which event?", "which mode?"], "actions_nn": ["side", "vibration", "alarm", "pod pro", "bed warming", "bed", "temperature"], "actions_params": ["what level?", "which side", "which side?", "what level"]}
{"id": "1130582453", "service_name": "tumblr", "triggers_nn": ["video post", "photo post", "post", "tumblelog", "user", "quote post", "blog", "link post", "tag"], "triggers_params": ["the post title", "created at", "the name of the tumblelog that published the post", "the post id of the liked post", "the url to the liked post", "date and time event was created.", "url", "post title", "tumblelog", "the post url", "the id of the post that has been created", "post id", "the tumblelog name of the liked post", "tag"], "queries_nn": ["post", "list", "tumblelog"], "queries_params": ["tumblelog"], "actions_nn": ["text post", "video post", "tumblr", "quote post", "photo post", "post", "link post"], "actions_params": ["body", "publish", "title", "url", "video caption", "photo caption", "tumblelog", "publish state", "audio url", "quote", "photo url", "source", "caption", "audio caption", "tags", "description", "video url", "link url"]}
{"id": "1136048642", "service_name": "SamsungRobotVacuum", "triggers_nn": ["cleaning", "vacuum"], "triggers_params": ["deviceid", "which device?"], "queries_nn": ["cleaning", "list", "vacuum"], "queries_params": ["deviceid", "which device?"], "actions_nn": ["end vacuum cleaning", "vacuum cleaning"], "actions_params": ["deviceid", "which device?"]}
{"id": "1136730881", "service_name": "smartliving_osum", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["set level", "light", "door", "value", "device", "switch", "curtain", "scene", "operation"], "actions_params": ["device list", "levels", "devices"]}
{"id": "1137372763", "service_name": "caleo", "triggers_nn": ["website", "temperature rise", "temperature", "application", "caleos", "humidity", "account", "mode", "threshold"], "triggers_params": ["temperature threshold", "humidity threshold", "scale", "degrees in", "thermostat", "humidity", "new mode", "mode", "temperature"], "queries_nn": ["threshold", "list", "temperature"], "queries_params": ["temperature threshold", "scale", "degrees in", "thermostat", "temperature"], "actions_nn": ["status", "thermostat", "caleo", "mode", "temperature"], "actions_params": ["select a mode", "scale", "which thermostat?", "degrees in", "desired temperature setpoint", "desired light level", "thermostat", "new mode", "level", "temperature"]}
{"id": "1138554133", "service_name": "podio", "triggers_nn": ["podio", "app", "item"], "triggers_params": ["app"], "queries_nn": ["list", "app item"], "queries_params": ["app"], "actions_nn": ["app item"], "actions_params": ["fields json", "app", "fieldsjson"]}
{"id": "1139908748", "service_name": "grants", "triggers_nn": ["grant opportunity", "grants.gov"], "triggers_params": ["filter by keyword (optional)", "query"], "queries_nn": ["time", "grant opportunity", "list", "grants.gov"], "queries_params": ["filter by keyword", "query"], "actions_nn": [], "actions_params": []}
{"id": "1140403198", "service_name": "littlebits", "triggers_nn": ["cloudbit", "littlebit module", "input signal", "input"], "triggers_params": ["device id", "which cloudbit?"], "queries_nn": ["cloudbit", "list", "input"], "queries_params": ["device id", "which cloudbit?"], "actions_nn": ["cloudbit", "time", "length", "seconds", "level", "output"], "actions_params": ["duration", "duration ms", "level (0-100%)", "percent", "device id", "which cloudbit?"]}
{"id": "1148373811", "service_name": "todoist", "triggers_nn": ["time", "fire", "task", "label", "todoist", "todoist section"], "triggers_params": ["section id", "label id", "project id", "section to watch", "label to watch", "project to watch"], "queries_nn": ["time", "list", "task", "label", "todoist"], "queries_params": ["label id", "label to watch", "project to watch", "project id"], "actions_nn": ["section", "task", "project"], "actions_params": ["task description", "project and section", "due date", "priority", "note", "task's due date", "task content", "project id"]}
{"id": "115571454", "service_name": "epa", "triggers_nn": ["protection agency", "update"], "triggers_params": ["filter by keyword (optional)", "query"], "queries_nn": ["protection agency", "update", "list"], "queries_params": ["filter by keyword", "query"], "actions_nn": [], "actions_params": []}
{"id": "1157238620", "service_name": "hubitat", "triggers_nn": ["motion", "water", "temperature", "device", "mode change", "presence", "temperature rise", "threshold"], "triggers_params": ["temperature threshold", "which mode?", "value", "which device?", "device", "mode"], "queries_nn": ["time", "habitat device", "temperature rise", "device", "list", "event", "mode", "threshold"], "queries_params": ["temperature threshold", "which mode?", "value", "which device?", "device", "mode"], "actions_nn": ["strobe", "light", "elevation system", "device", "switch", "mode", "siren", "unlock", "change hubitat", "level"], "actions_params": ["which mode?", "which device?", "device", "mode", "what level?", "rate", "level", "what rate?"]}
{"id": "1158179406", "service_name": "irobot", "triggers_nn": ["job", "bin", "robot", "room", "roomba"], "triggers_params": ["robot name", "room info", "which robot and room?"], "queries_nn": ["time", "job", "bin", "robot", "status", "roomba", "list"], "queries_params": ["robot name", "what is the name of your robot?"], "actions_nn": ["robot", "home", "room"], "actions_params": ["robot name", "room info", "which room would you like to clean?"]}
{"id": "1160500726", "service_name": "ubibot", "triggers_nn": ["moisture level rise", "lux", "value", "level rise", "temperature level rise", "pt100 probe temperature reading", "co2", "motion sensor", "soil probe moisture reading", "ws1 vibration sensor reading", "ds18b20 temperature probe", "reading", "battery", "field reading", "result", "voltage", "power supply", "probe reading", "gs1 device", "carbon dioxide", "usb", "motion", "vibration index", "device", "probe temperature reading", "fire", "ws1", "humidity sensor reading", "humidity", "status", "temperature sensor reading", "power", "probe humidity reading", "pro", "sensor reading", "temperature rise"], "triggers_params": ["value", "target field", "motion status", "condition", "channel field", "channel id", "power status", "temperature unit"], "queries_nn": ["query", "value", "lux", "vibration index", "sensor datum", "device", "list", "ubibot", "soil probe moisture level rise", "ws1 vibration sensor reading", "sensor reading", "level"], "queries_params": ["temperature unit", "value", "channel id", "condition"], "actions_nn": ["action command", "plug", "ubibot"], "actions_params": ["set state", "channel id", "switch"]}
{"id": "1161020803", "service_name": "uplinkremote", "triggers_nn": ["alarm panel", "alarm", "alert"], "triggers_params": ["serial number", "device name"], "queries_nn": ["alarm panel", "list"], "queries_params": ["serial number", "device name"], "actions_nn": ["security system"], "actions_params": ["serial number", "device name"]}
{"id": "1161389928", "service_name": "apilio", "triggers_nn": ["event", "apilio", "ifttt", "notification"], "triggers_params": ["created at", "logicblock name", "logicblock result", "notification title", "the title of the notification.", "notification text", "this is the url sent with the notification. calling it will approve or dismiss actions.", "the name of the logicblock that triggered the notification.", "ifttt action identifier", "the actions that apilio proposes to run.", "the result of the logicblock evaluation.", "standby time", "time (in minutes) that apilio will wait for you to respond to the notification", "date and time when the notification was sent.", "this is the text of the notification.", "actionable url", "what is the name of the apilio event?", "proposed actions"], "queries_nn": ["string variable", "variable", "value"], "queries_params": ["variable identifier", "variable name"], "actions_nn": ["logicblock", "apilio", "variable", "value", "string variable", "evaluation"], "actions_params": ["operand", "mathematical operation", "which apilio numeric variable do you want to update?", "new value for this string variable", "variable value", "operator", "numeric operation input", "logicblock identifier", "variable identifier", "which apilio logicblock do you want to evaluate?", "which apilio variable do you want to update to false?", "which apilio variable do you want to update to true?", "which apilio string variable do you want to update?", "which apilio numeric variable do you want to use?", "which apilio variable do you want to toggle?", "new value for this numeric variable", "which apilio string variable do you want to clear?"]}
{"id": "116235759", "service_name": "putio", "triggers_nn": ["put.io app", "transfer", "media playback", "mp4 conversion", "put.io"], "triggers_params": ["what type of transfer?", "date and time event was created.", "app name", "mp4 can be viewed from this link.", "file type", "view url", "id of the application.", "file id", "type", "name of the client.", "mp4 can be downloaded from this link.", "name of the put.io application.", "created at", "client name", "id of the file that is stopped.", "type of the file that is stopped.", "download url", "name", "id of the client.", "id of the put.io application.", "app id", "name of the file that is stopped.", "type of the file being played.", "id of the converted file.", "name of the file.", "file name", "id of the file being played.", "name of the file being played.", "client id"], "queries_nn": ["put.io app", "transfer", "list", "media playback", "user", "event", "file", "put.io"], "queries_params": ["what type of transfer?", "date and time event was created.", "app name", "file type", "file id", "type", "name of the client.", "name of the put.io application.", "created at", "client name", "parent folder", "id of the client.", "id of the put.io application.", "app id", "type of the file being played.", "file name", "parent id", "id of the file being played.", "name of the file being played.", "client id"], "actions_nn": ["put.io", "transfer", "url"], "actions_params": ["folder id", "what url?", "which folder id?", "url"]}
{"id": "116376915", "service_name": "hager_iot", "triggers_nn": ["rain indicator", "value", "brightness level", "day", "device", "wind speed", "switch", "humidity level", "state change", "battery level", "luminescence level", "volume level", "temperature", "device player", "device brightness level", "weather station", "device volume level", "co2 level", "alarm", "night", "threshold"], "triggers_params": ["what threshold?", "which device?", "cid", "what player state?", "playerstate", "threshold"], "queries_nn": ["value", "brightness level", "instance", "device", "list", "switch", "wind speed", "event", "state change", "battery", "device player", "time", "device brightness level", "weather station", "device volume level", "co2 level", "alarm", "night"], "queries_params": ["what threshold?", "which device?", "cid", "what player state?", "playerstate", "threshold"], "actions_nn": ["item", "playlist", "device", "thermostat setpoint", "favorite", "lighting device", "media player device", "shutter", "light", "set volume", "volume", "knx scene", "scene", "blind position", "level", "dimming", "color"], "actions_params": ["cid", "color value or name", "which favorite item?", "knxscene", "which knx scene?", "setpoint", "volume", "scene", "which scene?", "which device?", "which command?", "position", "which playlist?", "what position?", "command", "what volume?", "what setpoint?", "what light level?", "listname", "level", "color"]}
{"id": "1164350505", "service_name": "ios_health", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["iphone", "calorie", "pound", "kilogram", "workout", "action log", "health app", "action log body mass", "action"], "actions_params": ["distance", "units", "weight", "calories burned", "asleep at", "number of units", "date and time workout started", "duration", "occurred at", "date and time consumed", "workout type", "energy", "start date", "number of calories", "food description", "date and time sleep ended", "distance units", "date and time sleep started", "date and time weighed", "duration of sleep", "sleep duration", "activity type", "duration of workout", "date sleep ended"]}
{"id": "11654147", "service_name": "wemo_airpurifier", "triggers_nn": ["fan mode", "air purifier", "auto", "filter life", "air quality", "filter life percentage"], "triggers_params": ["subtype", "subtype1", "which filter type?", "which device?", "what fan mode?", "what air quality range?", "what filter life threshold (percentage)?", "macaddress"], "queries_nn": ["air purifier", "filter life", "air quality", "list", "filter life percentage"], "queries_params": ["subtype", "subtype1", "which filter type?", "which device?", "what air quality range?", "what filter life threshold (percentage)?", "macaddress"], "actions_nn": ["air purifier", "level", "mode", "auto"], "actions_params": ["what mode?", "subtype", "macaddress", "which device?"]}
{"id": "1172726678", "service_name": "amazon_alexa", "triggers_nn": ["item", "game", "amazon", "shopping list", "song", "list", "team", "timer", "music", "alexa trigger", "alarm", "sport score", "phrase", "alexa"], "triggers_params": ["date and time your alarm goes off.", "triggertime", "songname", "date and time item was added.", "artistname", "the name of the opponent in the next game.", "gamedatetime", "a comma separated list of all to do items.", "todolist", "datetimeasked", "the text of the edited to do item.", "date and time when the to do item was deleted.", "text", "opposingteamname", "what phrase?", "browsedtime", "the text of the edited shopping list item.", "a comma separated list of to do items.", "date and time the alarm was last set.", "the text of the added to do item.", "deletedtime", "the name of the opposing team.", "date and time item was deleted.", "the text of the completed shopping list item.", "the name of the team that is asked for.", "date and time item was edited.", "askedteamscore", "the score for the team that is asked for.", "the date and time of the next game.", "date and time the timer was last set.", "the text of the deleted shopping list item.", "createdtime", "albumname", "opposingteamscore", "the text of the item added on the shopping list.", "the text of the completed to do item.", "date and time item was completed.", "the date and time when the score was asked.", "completedtime", "album name of the song played.", "utterance", "the date and time of the game being played.", "a comma separted list of all items in the shopping list.", "date and time the timer goes off.", "askedteamname", "the score for the opposing team.", "date and time user asked what's on their list.", "date and time the song was played.", "date and time user asked what's on the list.", "the name of the team that was asked.", "a comma separated list of all items in the shopping list.", "name of the song played.", "playedtime", "shoppingitemslist", "the text of the deleted to do item.", "all the items in the shopping list.", "date and time next game information was asked.", "lastupdateddate", "updatedtime", "date and time item was added to to do list.", "date and time shopping list item was marked as completed.", "artist of the song played."], "queries_nn": ["item", "game", "shopping list", "list", "sport team", "timer", "music", "deletion", "sport score", "alexa", "time", "addition", "amazon", "song", "alexa trigger", "edit", "completion", "alarm", "phrase"], "queries_params": ["date and time your alarm goes off.", "triggertime", "songname", "date and time item was added.", "artistname", "the name of the opponent in the next game.", "gamedatetime", "a comma separated list of all to do items.", "todolist", "datetimeasked", "the text of the edited to do item.", "date and time when the to do item was deleted.", "text", "opposingteamname", "what phrase?", "browsedtime", "the text of the edited shopping list item.", "a comma separated list of to do items.", "date and time the alarm was last set.", "the text of the added to do item.", "deletedtime", "the name of the opposing team.", "date and time item was deleted.", "the text of the completed shopping list item.", "albumname", "date and time item was edited.", "the date and time of the next game.", "utterance", "date and time the timer was last set.", "the name of the team that is asked for.", "the text of the deleted shopping list item.", "createdtime", "askedteamscore", "the score for the team that is asked for.", "the text of the item added on the shopping list.", "the text of the completed to do item.", "date and time item was completed.", "opposingteamscore", "completedtime", "album name of the song played.", "the date and time when the score was asked.", "the date and time of the game being played.", "a comma separted list of all items in the shopping list.", "date and time the timer goes off.", "askedteamname", "the score for the opposing team.", "date and time user asked what's on their list.", "date and time the song was played.", "date and time user asked what's on the list.", "the name of the team that was asked.", "a comma separated list of all items in the shopping list.", "name of the song played.", "playedtime", "shoppingitemslist", "the text of the deleted to do item.", "lastupdateddate", "all the items in the shopping list.", "date and time next game information was asked.", "updatedtime", "date and time item was added to to do list.", "date and time shopping list item was marked as completed.", "artist of the song played."], "actions_nn": [], "actions_params": []}
{"id": "117934578", "service_name": "airnow", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": [], "actions_params": []}
{"id": "1180392614", "service_name": "skyroam", "triggers_nn": ["user solis app", "app user", "button", "m4", "solis", "skyroam service", "serivce", "soli"], "triggers_params": ["created at", "the sn of the device that you connected to", "date and time event was created.", "location", "the location of the user", "sn"], "queries_nn": [], "queries_params": [], "actions_nn": ["account", "daypass", "customer"], "actions_params": ["sn"]}
{"id": "1181040103", "service_name": "digitalstrom", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["example", "wish", "der k\u00fcche einschalten", "language"], "actions_params": ["t2ds text", "what is your wish?"]}
{"id": "118262512", "service_name": "u_tec_ultraloq", "triggers_nn": ["lock", "person"], "triggers_params": ["device user id", "who", "who?", "which lock?", "device id", "which lock", "whick lock?"], "queries_nn": ["lock", "list", "person"], "queries_params": ["device user id", "who?", "device id", "which lock?"], "actions_nn": ["action", "door"], "actions_params": ["device id", "which lock", "which lock?"]}
{"id": "1183942647", "service_name": "aypro", "triggers_nn": ["doorbell ring", "choice", "smartbridge", "call", "intercom", "sos button", "scope a6 touch panel", "custom", "alarm", "security mode", "scene run"], "triggers_params": ["created at", "recieved time", "date and time event was created.", "device type", "trig time.", "level name", "scene", "sceneid", "security mode", "level", "the label of the security level."], "queries_nn": ["scene", "device"], "queries_params": [], "actions_nn": ["scope touch panel ambiance", "ambiance", "animation", "custom", "scene", "security alarm mode", "scope touchpanel", "color"], "actions_params": ["custom color", "color slot", "scene", "sceneid", "animation", "color"]}
{"id": "1186420017", "service_name": "notifymyecho", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["alexa", "notification"], "actions_params": ["what title do you want for your notification?", "what is your notification message?", "title", "notification"]}
{"id": "1188069672", "service_name": "ge_appliances_washer", "triggers_nn": ["minute", "wash cycle", "end", "ge washer", "cycle"], "triggers_params": ["which appliance?", "applianceid"], "queries_nn": ["minute", "wash cycle", "event", "ge washer", "cycle", "list", "alert"], "queries_params": ["which appliance?", "applianceid"], "actions_nn": [], "actions_params": []}
{"id": "1191188558", "service_name": "blink_eu", "triggers_nn": ["motion", "blink camera"], "triggers_params": ["camera", "which camera?"], "queries_nn": ["motion", "blink camera", "list"], "queries_params": ["camera", "which camera?"], "actions_nn": ["blink system"], "actions_params": ["which system?", "network"]}
{"id": "1192573238", "service_name": "microsoft_todo", "triggers_nn": ["task", "list"], "triggers_params": ["task list id", "which task list?"], "queries_nn": ["task list", "task", "list"], "queries_params": ["task list id", "which task list?"], "actions_nn": ["task list", "task"], "actions_params": ["body", "task title", "does the task have an importance level?", "which task list?", "title", "task body", "task list id", "importance"]}
{"id": "1193630110", "service_name": "wemo_light_switch", "triggers_nn": ["press", "wemo light switch", "seconds"], "triggers_params": ["which light switch?", "macaddress"], "queries_nn": ["seconds", "press", "wemo light switch", "list instance", "list"], "queries_params": ["which light switch?", "macaddress"], "actions_nn": ["wemo light", "wemo light switch"], "actions_params": ["which light switch?", "macaddress"]}
{"id": "1201183828", "service_name": "monzo", "triggers_nn": ["photo", "receipt", "attachment", "monzo card", "transaction", "blog post", "amount", "money", "merchant"], "triggers_params": ["merchant country code", "what amount?", "the three-letter iso country code of the merchant for this transaction.", "the entry's title.", "account currency symbol", "notes", "the date and time of the transaction.", "a unique id for this transaction.", "the name of the merchant where you spent the money.", "merchant logo", "transaction id", "merchant name", "entrytitle", "transaction time", "entrypublished", "category", "local currency code", "over amount", "the category you assigned this transaction to.", "the transaction's notes when the transaction was made.", "emoji", "amount in local currency", "local currency symbol", "entryimageurl", "amount in account currency", "account currency code", "this will differ to your account's main currency code if you were abroad.", "the address of the merchant for this transaction.", "date entry was created.", "entryauthor", "under amount", "entryurl", "url for the first image in the entry. if the entry doesn't have an image this will point to a placeholder image.", "this will differ to your account's main currency symbol if you were abroad.", "the entry's url.", "the amount you spent in the local currency.", "the entry's content, may contain html.", "entrycontent", "merchant address", "the logo image url of the merchant for this transaction.", "the currency code of your account's main currency.", "the emoji of the transaction.", "the entry's author name.", "which merchant?", "which category?"], "queries_nn": ["photo", "receipt", "monzo", "attachment", "monzo card", "list", "blog post", "transaction", "money", "merchant", "card purchase"], "queries_params": ["merchant country code", "the three-letter iso country code of the merchant for this transaction.", "the entry's title.", "account currency symbol", "notes", "the date and time of the transaction.", "a unique id for this transaction.", "the name of the merchant where you spent the money.", "merchant logo", "transaction id", "merchant name", "entrytitle", "transaction time", "entrypublished", "category", "local currency code", "the category you assigned this transaction to.", "the transaction's notes when the transaction was made.", "emoji", "amount in local currency", "local currency symbol", "entryimageurl", "amount in account currency", "account currency code", "this will differ to your account's main currency code if you were abroad.", "the address of the merchant for this transaction.", "date entry was created.", "entryauthor", "entryurl", "url for the first image in the entry. if the entry doesn't have an image this will point to a placeholder image.", "this will differ to your account's main currency symbol if you were abroad.", "the entry's url.", "the amount you spent in the local currency.", "the entry's content, may contain html.", "entrycontent", "merchant address", "the logo image url of the merchant for this transaction.", "the currency code of your account's main currency.", "the emoji of the transaction.", "the entry's author name.", "which merchant?", "which category?"], "actions_nn": ["money", "choice", "account", "pot"], "actions_params": ["amount", "pot"]}
{"id": "1202536461", "service_name": "nVent_Nuheat", "triggers_nn": ["set threshold", "temperature rise", "temperature", "thermostat"], "triggers_params": ["what temperature threshold?", "what scale?", "scale", "which thermostat?", "thermostat", "temperature"], "queries_nn": ["list", "thermostat"], "queries_params": ["which thermostat?", "thermostat"], "actions_nn": ["thermostat temperature", "thermostat", "thermostat group mode", "thermostat mode", "schedule mode", "setpoint temperature"], "actions_params": ["set the group to?", "what setpoint temperature?", "delta", "what scale?", "which schedule mode?", "scale", "duration", "which thermostat?", "group mode", "what thermostat group?", "how many degrees?", "thermostat", "what duration?", "group", "setpoint temperature", "mode", "what thermostat mode?"]}
{"id": "1205521217", "service_name": "livesmart", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["rule", "trigger point", "user"], "actions_params": ["rule name", "rule status"]}
{"id": "1205930553", "service_name": "telegram", "triggers_nn": ["text message", "photo", "telegram", "message", "admin", "source group", "ifttt command", "user", "@ifttt bot", "phrase", "channel"], "triggers_params": ["created at", "author username", "the author's name, when available.", "photo caption.", "key phrase", "which group?", "the author's username, when available.", "filter", "photo url", "source group", "caption", "author name", "date and time the photo was sent.", "chat id", "which channel?", "reply text", "the url of the image posted.", "what to send as a reply?"], "queries_nn": ["text message", "photo", "telegram", "message", "admin", "source group", "list", "ifttt command", "user", "@ifttt bot", "phrase", "channel"], "queries_params": ["created at", "key phrase", "the author's name, when available.", "author username", "photo caption.", "which group?", "the author's username, when available.", "filter", "photo url", "source group", "caption", "date and time the photo was sent.", "chat id", "author name", "which channel?", "reply text", "the url of the image posted.", "what to send as a reply?"], "actions_nn": ["text message", "photo", "mp3", "video", "telegram chat"], "actions_params": ["performer", "include web page preview?", "title", "message text", "audio url", "photo url", "caption", "chat id", "include web page preview", "text", "target chat", "video url"]}
{"id": "1213278272", "service_name": "magichue", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["choice", "strobe", "brightness", "light", "change", "mode", "scene", "level", "color"], "actions_params": ["keep after blink", "which lights?", "brightness", "which scene?", "brightness level", "speed", "which function?", "which function", "change new status after blink?", "which lights", "number of blinks", "color"]}
{"id": "1213993114", "service_name": "awair", "triggers_nn": ["motion", "seconds", "co", "awair device", "motion event", "humidity", "temperature", "time", "concentration", "voc", "compound", "dust concentration", "carbon dioxide", "level", "awair", "threshold"], "triggers_params": ["which humidity threshold?", "above or below?", "which co2 threshold?", "index", "device", "which dust level threshold?", "high or low", "which voc threshold?", "which awair?", "which temperature threshold?"], "queries_nn": ["time", "co", "concentration", "seconds", "awair device", "compound", "voc", "temperature", "instance", "dust concentration", "list", "humidity", "carbon dioxide", "level", "threshold"], "queries_params": ["above or below?", "which humidity threshold?", "which co2 threshold?", "index", "device", "which dust level threshold?", "high or low", "which voc threshold?", "which awair?", "which temperature threshold?"], "actions_nn": ["display mode", "command", "awair glow", "led", "device", "switch"], "actions_params": ["glow switch status", "display mode ", "switch status", "device", "display mode"]}
{"id": "1218085729", "service_name": "homelyenergy", "triggers_nn": ["heating"], "triggers_params": ["heatingonoff", "date", "heating status changed"], "queries_nn": [], "queries_params": [], "actions_nn": [], "actions_params": []}
{"id": "121891128", "service_name": "hc_cook_processor", "triggers_nn": ["cookit", "step"], "triggers_params": ["which cookit?", "ha id"], "queries_nn": [], "queries_params": [], "actions_nn": [], "actions_params": []}
{"id": "1222501955", "service_name": "somfy_connexoon_asia_oceania", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["launch", "connexoon scenario"], "actions_params": ["action group", "which scenario?"]}
{"id": "12286841", "service_name": "bea", "triggers_nn": ["analysis", "bureau"], "triggers_params": ["filter by keyword (optional)", "query"], "queries_nn": ["analysis", "bureau", "list"], "queries_params": ["filter by keyword", "query"], "actions_nn": [], "actions_params": []}
{"id": "1228832368", "service_name": "roomme", "triggers_nn": ["room", "user"], "triggers_params": ["which user?", "when", "duration", "for how long?", "on which day?", "at what time?", "what time", "which room", "user name", "who entered the room", "which room?"], "queries_nn": ["list", "room", "user"], "queries_params": ["which user?", "when", "duration", "for how long?", "on which day?", "at what time?", "what time", "which room", "user name", "which room?"], "actions_nn": ["home", "room", "occupancy report", "detail", "family member"], "actions_params": ["email address", "phone number", "to which email address?", "to which phone number?"]}
{"id": "1232703868", "service_name": "airtouch", "triggers_nn": ["air conditioning home temperature rise", "zone", "air conditioning fan speed", "zone temperature", "temperature control", "air conditioning", "air conditioning home temperature", "percentage control", "air conditioning mode", "zone temperature rise", "threshold"], "triggers_params": ["what's the temperature?", "group index", "ac index", "which zone?", "which air conditioning?", " which air conditioning?", "temperature"], "queries_nn": ["air conditioning", "air conditioning fan speed", "zone", "zone temperature rise", "list", "air conditioning mode", "threshold"], "queries_params": ["what's the temperature?", "group index", "ac index", "which zone?", "which air conditioning?", "temperature"], "actions_nn": ["sleep mode", "fan speed", "value", "zone set point temperature", "zone damper opening percentage", "point temperature", "mode", "increase", "zone damper opening", "zone", "percentage", "degree", "air conditioning", "%", "percentage control", "percentage control zone", "temperature control"], "actions_params": ["auto open", "group index", "what mode?", "value", "temperature set to", "increase or decrease?", "fanspeed", "temperature or percentage control?", "power on off", "what fan speed?", "setpoint", "percentage set to", "increace or decreace?", "ac index", "which zone?", "turn on or turn off?", "which air conditioning?", "mode"]}
{"id": "1237272443", "service_name": "narro", "triggers_nn": ["reading", "article", "narro feed"], "triggers_params": ["created at", "the url to the article or reading on narro.", "the length, in seconds, of the narro reading.", "title", "the extracted description of the article or text.", "source url", "article url", "audio url", "the title for this article or reading on narro.", "the url to the source article.", "description", "date and time reading was created.", "the url to the audio file of this reading.", "audio length"], "queries_nn": ["time", "article", "reading", "list", "narro feed"], "queries_params": ["created at", "the url to the article or reading on narro.", "the length, in seconds, of the narro reading.", "title", "the extracted description of the article or text.", "source url", "article url", "audio url", "the title for this article or reading on narro.", "the url to the source article.", "description", "date and time reading was created.", "the url to the audio file of this reading.", "audio length"], "actions_nn": ["text submission", "narro feed", "article", "url"], "actions_params": ["what text?", "title", "url", "what is the title?", "what url?", "text"]}
{"id": "123859650", "service_name": "trello", "triggers_nn": ["list", "board", "card"], "triggers_params": ["board", "list name", "which board?"], "queries_nn": [], "queries_params": [], "actions_nn": ["board", "list", "card"], "actions_params": ["pos", "which board?", "title", "members", "assign members", "url", "attachment url", "labels", "list name", "description", "position", "board", "apply labels"]}
{"id": "1240189002", "service_name": "ifttt", "triggers_nn": ["time", "ifttt", "ifttt blog post something", "day", "applet", "action", "service", "trigger", "update"], "triggers_params": ["the description of the service.", "the update's url.", "time", "entrytitle", "logo url", "entrypublished", "service", "created at", "which service?", "a url to the service's logo.", "name", "entryurl", "url", "entrycontent", "the update's content, may contain html.", "date post was created.", "the update's title.", "description", "date and time the service was published.", "url to the service on ifttt.", "the name of the new service."], "queries_nn": ["time", "ifttt", "ifttt blog post something", "applet", "list", "action", "service", "trigger", "update"], "queries_params": ["the description of the service.", "the update's url.", "logo url", "entrytitle", "entrypublished", "service", "created at", "which service?", "a url to the service's logo.", "name", "entryurl", "url", "entrycontent", "the update's content, may contain html.", "date post was created.", "the update's title.", "description", "date and time the service was published.", "url to the service on ifttt.", "the name of the new service."], "actions_nn": [], "actions_params": []}
{"id": "1241609762", "service_name": "disec_tronic", "triggers_nn": ["lock"], "triggers_params": ["which device?", "id"], "queries_nn": ["device", "device status", "list", "user"], "queries_params": ["device address", "the name of the device", "the firmware version of the device", "alias", "guest cloud enabled", "guest active", "st version", "device", "type", "device type", "mac address", "guest status", "online reachability status of a device", "remote operation status", "ble version", "the hardcoded firmware version of the device", "cloud connection status"], "actions_nn": ["device"], "actions_params": ["which device?", "id"]}
{"id": "1241765614", "service_name": "tochie_speaker", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["tochie", "text", "tochie app", "message", "speech", "playback"], "actions_params": ["voice message", "play chime", "speaker", "device id", "text", "chime", "message id"]}
{"id": "1243176024", "service_name": "smanos", "triggers_nn": ["home", "family", "house", "alarm", "smanos system", "anyone", "one", "mode"], "triggers_params": ["which device?", "which system"], "queries_nn": ["time", "home", "family", "list", "house", "alarm", "smanos system", "anyone", "one", "mode"], "queries_params": ["which device?", "which system"], "actions_nn": ["house", "smanos system", "family", "one", "mode", "anyone"], "actions_params": ["which device?", "which system"]}
{"id": "1243974284", "service_name": "atmoph", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["show clock", "display today", "window", "search query", "event", "calendar", "show weather forecast", "display calendar", "view", "clock", "weather forecast"], "actions_params": ["query", "search query"]}
{"id": "1244636984", "service_name": "lightwaverf_heating", "triggers_nn": ["set target", "temperature rise", "thermostat device", "temperature"], "triggers_params": ["what temperature", "which thermostat"], "queries_nn": [], "queries_params": [], "actions_nn": ["trv", "position", "thermostat", "temperature", "switch", "radiator valve"], "actions_params": ["which trv", "what position?", "which thermostat/trv?", "which switch?", "which switch", "what temperature", "what temperature?", "which thermostat", "which trv?", "what position"]}
{"id": "1244807858", "service_name": "ComEd", "triggers_nn": ["energy", "time market rate", "carbon intensity change", "price change", "peak time savings hour", "carbon", "carbon time", "stage", "event", "carbon footprint", "pricing plan", "account", "trigger", "pricing program", "service territory"], "triggers_params": ["when to trigger?", "during which event stage do you want this to trigger?", "which season", "how often do you want this to trigger?", "which carbon threshold", "how often to trigger", "carbon", "trigger type", "which price threshold", "which price threshold do you want this to trigger?", "stage", "which carbon level do you want this to trigger?", "which season do you want this to trigger?", "season"], "queries_nn": [], "queries_params": [], "actions_nn": [], "actions_params": []}
{"id": "1245432759", "service_name": "somfy_thermostat", "triggers_nn": ["temperature", "thermostat", "battery", "heating mode", "temperature rise", "threshold"], "triggers_params": ["temperature threshold", "which mode?", "heating mode", "which thermostat?", "thermostat"], "queries_nn": ["temperature rise", "thermostat", "heating mode", "list", "threshold"], "queries_params": ["temperature threshold", "which mode?", "heating mode", "which thermostat?", "thermostat"], "actions_nn": ["duration", "mode", "temperature", "thermostat"], "actions_params": ["which mode?", "duration", "set heating mode", "which thermostat?", "thermostat", "temperature"]}
{"id": "1246326737", "service_name": "tado_heating", "triggers_nn": ["value", "threshold", "home mode", "user", "room temperature", "\u00b0 switch", "humidity", "mode", "room temperature rise"], "triggers_params": ["temperature threshold", "humidity threshold", "zone", "unit", "humidity", "temperature unit", "which room?", "temperature"], "queries_nn": ["time", "value", "list", "room temperature", "user", "event", "tado", "humidity", "threshold"], "queries_params": ["temperature threshold", "humidity threshold", "zone", "unit", "humidity", "temperature unit", "which room?", "temperature"], "actions_nn": ["schedule", "return control", "location", "user", "heating", "setting", "room temperature", "tado \u00b0"], "actions_params": ["zone", "what temperature?", "termination condition", "duration?", "which room?", "temperature"]}
{"id": "1247117709", "service_name": "dooya_connector", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["turn", "position", "scene", "switch"], "actions_params": ["onoff", "which switch", "which scene?", "which blind?", "which scene", "turn on/turn off", "enter a tilt value (-90~90)", "enter a lift percentage value (0~100)", "enter percent", "enter a percentage value (0~100)", "which one?", "which blinds", "enter degree"]}
{"id": "1247247096", "service_name": "daskeyboardq", "triggers_nn": ["iot device", "action", "zone", "combination"], "triggers_params": ["pid", "which action?", "which device?", "action", "iot zone", "which zone?"], "queries_nn": ["combination", "action", "iot device", "instance", "zone", "list"], "queries_params": ["pid", "which action?", "which device?", "action", "iot zone", "which zone?"], "actions_nn": ["information", "signal"], "actions_params": ["name", "message", "zone", "device", "effect", "color"]}
{"id": "1251268624", "service_name": "product_hunt", "triggers_nn": ["collection", "product hunt", "upvote", "product"], "triggers_params": ["product topic", "product hunt url", "date and time event was created.", "the name of the product that was commented on.", "the comment made about the product.", "the name of the product upvoted.", "the url to the product's thumbnail image.", "the url to the product on product hunt.", "product thumbnail", "the url to the product.", "brief description of the product.", "comment", "product tagline", "the title of the collection.", "created at", "product name", "collection title", "product url", "the url to the collection on product hunt.", "collection name", "the topic of the product.", "the name of the featured collection.", "collection url"], "queries_nn": ["time", "upvote", "collection", "product hunt", "list", "product"], "queries_params": ["product topic", "product hunt url", "date and time event was created.", "the name of the product that was commented on.", "the comment made about the product.", "the name of the product upvoted.", "the url to the product's thumbnail image.", "the url to the product on product hunt.", "category", "product thumbnail", "the url to the product.", "brief description of the product.", "comment", "product tagline", "the title of the collection.", "the category of the product on product hunt", "created at", "product name", "collection title", "product url", "the url to the collection on product hunt.", "collection name", "the topic of the product.", "the name of the featured collection.", "collection url"], "actions_nn": [], "actions_params": []}
{"id": "1257101357", "service_name": "attm2x", "triggers_nn": ["location", "m2x trigger", "datapoint", "device"], "triggers_params": ["which stream?", "device id", "which device?", "stream name"], "queries_nn": ["time", "list", "location", "m2x trigger", "datapoint", "device"], "queries_params": ["which stream?", "device id", "which device?", "stream name"], "actions_nn": ["datapoint", "location", "command", "device"], "actions_params": ["longitude", "command data", "stream name", "value", "when was this value registered?", "name", "which device?", "which value?", "device id", "which stream?", "timestamp", "latitude", "elevation", "which location?", "command name"]}
{"id": "1258560312", "service_name": "electricitymap", "triggers_nn": ["electricity", "climate impact", "country electricity"], "triggers_params": ["country", "location", "zone key"], "queries_nn": [], "queries_params": [], "actions_nn": [], "actions_params": []}
{"id": "1259075256", "service_name": "medium", "triggers_nn": ["post", "medium"], "triggers_params": ["post url", "the url to the post on medium.", "date and time post was recommended", "published at", "post title", "bookmarked at", "recommended at", "date and time post was published.", "date and time post was bookmarked.", "the title of the post on medium."], "queries_nn": ["recent", "post", "list", "medium"], "queries_params": ["post url", "date and time post was recommended", "the url to the post on medium.", "post title", "published at", "bookmarked at", "recommended at", "date and time post was published.", "date and time post was bookmarked.", "the title of the post on medium."], "actions_nn": [], "actions_params": []}
{"id": "1260472226", "service_name": "XHouseIOT", "triggers_nn": ["xhouse garage", "wifi", "xhouse rf", "xhouse wifi", "switch", "gate", "light switch", "control", "xhouse wifi rf reciver", "mini", "trigger", "xhouse gsm"], "triggers_params": ["route", "deviceid", "operate", "which device"], "queries_nn": [], "queries_params": [], "actions_nn": ["wifi", "rf", "wifi rf reciver", "switch", "gsm", "gate", "light switch", "control", "mini", "trigger", "garage"], "actions_params": ["route", "deviceid", "operate", "which device"]}
{"id": "1261757008", "service_name": "fl_1000_leak_detector", "triggers_nn": ["pipe", "controller", "freeze setpoint", "leak"], "triggers_params": ["controller", "which controller?"], "queries_nn": [], "queries_params": [], "actions_nn": ["trip", "controller", "leak alarm", "alarm state", "schedule mode", "leak detector", "valve"], "actions_params": ["controller", "mode?", "state", "which controller?", "sched mode", "valve state?"]}
{"id": "1264737218", "service_name": "usda", "triggers_nn": ["askfsis", "food safety", "q", "inspection service", "recall", "usda", "entry", "news release"], "triggers_params": ["filter by keyword (optional)", "query"], "queries_nn": ["askfsis", "food safety", "q", "list", "inspection service", "recall", "usda", "entry", "news release"], "queries_params": ["filter by keyword", "query"], "actions_nn": [], "actions_params": []}
{"id": "1264764503", "service_name": "rain_machine", "triggers_nn": ["weather", "program", "device", "effect", "watering zone", "snooze", "rain sensor", "mode", "watering program", "rain", "zone", "device disconnect", "weather update", "24h", "sprinkler", "software update", "reboot", "access service", "leak", "firmware update"], "triggers_params": ["sprinkler", "zone number", "programs"], "queries_nn": ["time", "rain", "list", "device", "software update", "rain sensor", "access service", "watering program"], "queries_params": ["sprinkler", "programs"], "actions_nn": ["time", "schedule", "minute", "period", "weather datum", "program", "watering event", "zone", "watering", "stop time", "event", "beta firmware", "start time", "watering program"], "actions_params": ["max temp", "which program?", "programs", "wind speed (m/s)", "pressure (kpa)", "wind speed", "for how long?", "start time", "end date", "zone number", "time", "how many days?", "duration", "min temp", "maximum relative humidity (%)", "sprinkler", "min humidity", "days", "start date", "pressure", "which device?", "minimum temperature (celsius)", "rain (mm)", "temperature (celsius)", "minimum relative humidity (%)", "temperature", "maximum temperature (celsius)", "rain", "which zone number?", "max humidity", "what program?"]}
{"id": "1269841146", "service_name": "porkfolio", "triggers_nn": ["money", "amount", "balance", "porkfolio"], "triggers_params": ["porkfolio-id", "target balance", "balance", "which device?"], "queries_nn": ["amount", "porkfolio", "balance", "list"], "queries_params": ["porkfolio-id", "target balance", "balance", "which device?"], "actions_nn": [], "actions_params": []}
{"id": "1273154077", "service_name": "qnap", "triggers_nn": ["system event", "qnap device", "file", "folder"], "triggers_params": ["folder path", "subfolder path", "device id", "option shared folder", "file type", "event type", "select device"], "queries_nn": ["time", "qnap device", "folder", "system event", "file", "list"], "queries_params": ["folder path", "subfolder path", "device id", "option shared folder", "file type", "event type", "select device"], "actions_nn": ["qnap device", "path", "playlist", "stop", "device", "text file", "shutdown", "music station operation", "set", "sleep mode action field", "user profile picture", "music station playlist", "na", "surveillance station", "surveillance station v5", "url", "song", "folder path", "agent v1", "change", "user", "filename", "action", "reboot", "camera recording", "file"], "actions_params": ["playlist", "function", "music station control", "file url", "device and camera", "option playlist", "power option", "option camera id", "maximum file size", "device", "device id", "surveillance station control", "image url", "audio interface", "maximum file size (mb)", "folder path", "file name", "content", "subfolder path", "option shared folder", "device power control"]}
{"id": "1280096310", "service_name": "LDS_AiDot", "triggers_nn": ["event", "scene", "door sensor", "water leak sensor", "motion sensor"], "triggers_params": ["status", "scene list", "motion sensor list", "events", "code", "ip camera list", "water leak sensor list", "door sensor list", "objectid"], "queries_nn": [], "queries_params": [], "actions_nn": ["light", "brightness level", "switch status", "color temperature", "device", "action", "scene", "color"], "actions_params": ["rgbw", "cct", "onoff", "brightness", "scene list", "color temperature", "device", "objectid", "dimming", "color"]}
{"id": "1282485892", "service_name": "automateshades", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["destination position", "scene", "room", "shade", "rollease acmeda app"], "actions_params": ["deviceid", "room", "movement position ", "device", "movement position", "roomid", "scene", "sceneid", "tilt position"]}
{"id": "1289247011", "service_name": "bocco", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["bocco", "message"], "actions_params": ["message", "room", "lang"]}
{"id": "1302808811", "service_name": "sesame", "triggers_nn": ["sesame"], "triggers_params": ["which sesame?", "sesame name"], "queries_nn": ["event", "list", "sesame"], "queries_params": ["which sesame?", "sesame name"], "actions_nn": ["lock", "sesame"], "actions_params": ["which sesame?", "sesame name"]}
{"id": "1303211205", "service_name": "fansync", "triggers_nn": ["light", "fan", "event", "user"], "triggers_params": ["which fan do you want to make effect?", "which light do you want to make effect?", "device"], "queries_nn": [], "queries_params": [], "actions_nn": ["light", "fan", "device", "percentage parameter"], "actions_params": ["brightness", "which device?", "device", "do action to which light?", "do action to which fan?", "to what level?", "on off", "on or off?", "percentage"]}
{"id": "1303522923", "service_name": "ecobee", "triggers_nn": ["room sensor", "home", "value", "ecobee schedule", "hold event", "ecobee light switch", "ecobee thermostat", "comfort profile", "vacation", "event", "ecobee thermostat sens", "humidity", "utility demand response event", "temperature"], "triggers_params": ["indoor humidity threshold", "thermostat name", "name", "indoor temperature threshold", "for which light switch?", "thermostat", "outdoor temperature threshold", "outdoor humidity threshold"], "queries_nn": ["room sensor", "home", "value", "ecobee schedule", "list", "vacation", "event", "humidity", "utility demand response event", "temperature", "history", "query", "hold event", "applet", "ecobee thermostat", "comfort profile", "note", "ecobee thermostat sens"], "queries_params": ["indoor humidity threshold", "thermostat name", "indoor temperature threshold", "thermostat", "outdoor temperature threshold", "outdoor humidity threshold"], "actions_nn": ["climate transition", "demand response event", "program", "event", "setting", "hour", "thermostat", "end date", "temperature", "time", "vacation event", "light", "comfort profile", "setpoint", "number", "action", "hold"], "actions_params": ["desired temperature", "hold hours", "thermostat name", "name", "vacation days", "comfort profile", "number of hours", "for which light switch?", "thermostat", "number of days"]}
{"id": "1306518601", "service_name": "zohocliq_in", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["action post", "message", "chat"], "actions_params": ["title", "card theme", "web url", "external link", "select a chat", "id", "theme", "thumbnail url", "text"]}
{"id": "1309819681", "service_name": "tecla", "triggers_nn": ["tecla", "tecla app remote", "button", "switch action", "e."], "triggers_params": ["which button?", "which switch action?", "id"], "queries_nn": ["button", "list", "tecla app remote"], "queries_params": ["which button?", "id"], "actions_nn": [], "actions_params": []}
{"id": "1313013220", "service_name": "pew_research", "triggers_nn": ["item", "pew research feed"], "triggers_params": ["what keyword do you want to track? ", "query"], "queries_nn": ["pew research feed", "item", "list"], "queries_params": ["what keyword do you want to track? ", "query"], "actions_nn": [], "actions_params": []}
{"id": "1315355981", "service_name": "uscert", "triggers_nn": ["computer emergency readiness team", "alert"], "triggers_params": ["filter by keyword (optional)", "query"], "queries_nn": ["computer emergency readiness team", "list", "alert"], "queries_params": ["filter by keyword", "query"], "actions_nn": [], "actions_params": []}
{"id": "1319982599", "service_name": "indeed", "triggers_nn": ["job"], "triggers_params": ["query", "what kind of job opportunity are you looking for?"], "queries_nn": [], "queries_params": [], "actions_nn": [], "actions_params": []}
{"id": "1322033008", "service_name": "android_messages", "triggers_nn": ["sm", "android device", "search", "phone number"], "triggers_params": ["the number to which the message was sent", "phone number", "query", "contactname", "occurredat", "keyword or simple phrase", "the time the message was received.", "the number that sent the message", "tonumber", "text", "the contact name associated with the message.", "the text of the message", "fromnumber"], "queries_nn": [], "queries_params": [], "actions_nn": ["sm", "android device", "phone number"], "actions_params": ["message", "phone number", "text"]}
{"id": "1326481974", "service_name": "zoom_phone", "triggers_nn": ["call log", "recording", "call", "user voicemail", "user"], "triggers_params": ["voicemail status", "which status should the voicemail have?", "which status should the recording have?", "trigger for all calls or only missed calls?", "recording status", "call status"], "queries_nn": ["call log", "recording", "voicemail", "user"], "queries_params": ["which status should the recording be?", "which status should the voicemail be?", "voicemail status", "which status should the call be?", "recording status", "call status"], "actions_nn": [], "actions_params": []}
{"id": "1329116480", "service_name": "android_photos", "triggers_nn": ["android device", "photo", "screenshot", "area"], "triggers_params": ["a public url to the photo that anyone can visit.", "takendate", "location", "the time the photo was taken.", "temporarypublicphotourl", "publicphotourl", "a public url to the photo that anyone can visit for 30 days.", "locate an area"], "queries_nn": [], "queries_params": [], "actions_nn": [], "actions_params": []}
{"id": "1332953477", "service_name": "genius_hub", "triggers_nn": ["occupancy", "system", "zone heating", "zone", "zone temperature", "device", "battery", "threshold"], "triggers_params": ["temp threshold", "the time of the trigger.", "the device type", "the id of the device with the low battery", "zone", "device", "device id", "the zone the device is assigned to.", "date", "temperature"], "queries_nn": ["occupancy", "system", "zone", "zone temperature", "list", "device", "battery", "threshold"], "queries_params": ["temp threshold", "the time of the trigger.", "the device type", "the id of the device with the low battery", "zone", "device", "device id", "the zone the device is assigned to.", "date", "temperature"], "actions_nn": ["zone", "duration", "temperature"], "actions_params": ["duration", "temp", "zone", "on or off?", "temperature"]}
{"id": "1334040199", "service_name": "lovebox", "triggers_nn": ["message"], "triggers_params": ["box"], "queries_nn": [], "queries_params": [], "actions_nn": ["message", "lovebox"], "actions_params": ["image", "box", "text color", "text"]}
{"id": "1346515482", "service_name": "futurehome", "triggers_nn": ["motion", "brightness", "home", "futurehome shortcut", "value", "site change mode", "window", "someone", "device", "smoke sensor sens", "humidity", "temperature", "sensor", "futurehome smarthub", "power consumption", "connection", "room", "door", "flood sensor", "temperature sensor", "lock", "humidity sensor", "moisture"], "triggers_params": ["brightness", "has been closed for (min)", "room", "trigger delay", "shortcut", "which mode?", "which device?", "device", "power", "site", "which shortcut?", "which site?", "left open for (min)", "humidity", "mode", "which room?", "temperature"], "queries_nn": ["sensor", "brightness", "home", "futurehome smarthub", "door", "value", "window", "temperature sensor", "device", "list", "mode change", "lock", "smoke sensor sens", "temperature"], "queries_params": ["which mode?", "has been closed for (min)", "trigger delay", "room", "brightness", "which device?", "device", "site", "which site?", "mode", "which room?", "temperature"], "actions_nn": ["brightness", "shortcut", "light", "room", "futurehome device", "colour", "rgb light", "lock", "site", "unlock", "%", "mode", "temperature"], "actions_params": ["which mode?", "shortcut", "room", "color", "which device?", "device", "which lock?", "lock", "which shortcut?", "dim value", "mode", "which room?", "temperature"]}
{"id": "1347542715", "service_name": "myfox_homecontrol", "triggers_nn": ["intrusion", "myfox security system", "household risk"], "triggers_params": ["site id", "site identifier"], "queries_nn": ["time", "event", "intrusion", "myfox security system", "list", "alert"], "queries_params": ["site id", "site identifier"], "actions_nn": ["myfox security system", "scenario"], "actions_params": ["site id", "scenario identifier", "scenario id", "site identifier"]}
{"id": "1347686192", "service_name": "pagerduty", "triggers_nn": ["incident", "fire", "user"], "triggers_params": ["created at", "status", "the current status of the incident.", "urgency", "date and time the incident was created.", "summary", "url", "service summary", "a short-form, server-generated string that provides succinct, important information about an object suitable for primary labeling of an entity in a client. in many cases, this will be identical to name, though it is not intended to be an identifier.", "id", "service id", "a url at which the incident is uniquely displayed in the web app.", "unique id of the incident.", "a unique id of the affected service.", "the number of the incident. this is unique across your account.", "incident number", "the current urgency of the incident."], "queries_nn": ["incident", "list"], "queries_params": ["created at", "status", "the current status of the incident.", "urgency", "url", "summary", "service summary", "a short-form, server-generated string that provides succinct, important information about an object suitable for primary labeling of an entity in a client. in many cases, this will be identical to name, though it is not intended to be an identifier.", "id", "service id", "a url at which the incident is uniquely displayed in the web app.", "unique id of the incident.", "a unique id of the affected service.", "the number of the incident. this is unique across your account.", "incident number", "date and time when the incident was created.", "the current urgency of the incident."], "actions_nn": ["status", "incident", "pagerduty"], "actions_params": ["status", "details", "urgency", "title", "incident key", "incident id", "service"]}
{"id": "1352860597", "service_name": "reddit", "triggers_nn": ["subreddit", "post", "reddit", "comment", "search query"], "triggers_params": ["title", "imageurl", "content of this post, may be text or external link.", "url to the post's image if one exists.", "name of the subreddit where this item was posted.", "search for", "contenthtml", "commenthtml", "date this post was posted.", "comment", "date and time this comment was posted.", "subreddit", "author", "content of this post in html.", "commenturl", "username of this post's author.", "content of this comment in html.", "query", "url to this comment on reddit.", "title of this post.", "content", "posturl", "content of this comment.", "url to this post on reddit.", "postedat"], "queries_nn": [], "queries_params": [], "actions_nn": ["text post", "reddit", "link"], "actions_params": ["title", "subreddit", "text", "link", "link url"]}
{"id": "1354786276", "service_name": "invoxia_tracker", "triggers_nn": ["zone alert", "button", "alert", "location datum", "%", "% remains", "tracker", "battery", "journey"], "triggers_params": ["which zone?", "zone", "which tracker?", "tracker"], "queries_nn": [], "queries_params": [], "actions_nn": [], "actions_params": []}
{"id": "1358877763", "service_name": "coinbase", "triggers_nn": ["buy", "wallet", "sell"], "triggers_params": ["which wallet?", "wallet id"], "queries_nn": ["sell price", "buy price", "account", "cryptocurrency", "list", "user"], "queries_params": ["fiattype", "cryptocurrencytype", "the type of the account", "balance", "currency code", "the currency type of the wallet", "cryptocurrency type", "fiat type", "wallet type", "the balance of the wallet", "the user-defined name of the account", "the id of the account", "currency type", "wallet name", "primary wallet", "is this the primary account?", "the code of the currency in the wallet", "wallet id"], "actions_nn": [], "actions_params": []}
{"id": "136153493", "service_name": "ge_appliances_cooking", "triggers_nn": ["oven timer", "oven", "cooking timer"], "triggers_params": ["which appliance?", "applianceid"], "queries_nn": ["oven timer", "oven", "cooking timer", "list"], "queries_params": ["which appliance?", "applianceid"], "actions_nn": ["oven", "sabbath mode"], "actions_params": ["status", "set sabbath mode", "which appliance?", "applianceid"]}
{"id": "1361828620", "service_name": "Mapei_Mapeheat", "triggers_nn": ["set threshold", "temperature rise", "temperature", "thermostat"], "triggers_params": ["what temperature threshold?", "what scale?", "scale", "which thermostat?", "thermostat", "temperature"], "queries_nn": ["thermostat information"], "queries_params": ["connection state", "state"], "actions_nn": ["thermostat temperature", "thermostat", "thermostat group mode", "thermostat mode", "schedule mode", "setpoint temperature"], "actions_params": ["which thermostat group?", "set the group to?", "what setpoint temperature?", "delta", "what scale?", "duration", "scale", "which schedule mode?", "which thermostat?", "group mode", "mode", "how many degrees?", "thermostat", "what duration?", "group", "setpoint temperature", "what thermostat mode?"]}
{"id": "1366024000", "service_name": "indegoconnect", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["indego", "dock"], "actions_params": []}
{"id": "1366142203", "service_name": "usagov", "triggers_nn": ["usa.gov", "update"], "triggers_params": ["filter by keyword (optional)", "query"], "queries_nn": ["usa.gov", "update", "list"], "queries_params": ["filter by keyword", "query"], "actions_nn": [], "actions_params": []}
{"id": "1366816826", "service_name": "hc_fridge", "triggers_nn": ["freezer door", "refrigerator door", "freezer temperature"], "triggers_params": ["which fridge?", "ha id"], "queries_nn": ["freezer temperature", "freezer door", "refrigerator door", "list"], "queries_params": ["which fridge?", "ha id"], "actions_nn": ["holiday mode", "refrigerator", "eco mode", "freezer temperature", "power", "rest mode", "sabbath mode", "refrigerator temperature", "appliance", "vacation mode", "mode", "freezer"], "actions_params": ["which fridge?", "ha id", "temperature"]}
{"id": "1380041935", "service_name": "slack", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["channel", "message", "slack"], "actions_params": ["title", "image url", "title url", "message", "thumbnail url", "which channel?", "channel"]}
{"id": "1381313233", "service_name": "abode", "triggers_nn": ["garage door", "home", "door", "standby", "switch", "lock", "abode system mode", "abode alarm"], "triggers_params": ["created at", "name of device whose alarm is triggered.", "select power switch", "date and time event was created.", "type of alarm triggered.", "device name", "alarm type", "select door", "select switch", "select mode", "select lock", "select garage door"], "queries_nn": ["garage door", "home", "door", "standby", "list", "switch", "lock", "abode system mode", "abode alarm"], "queries_params": ["created at", "name of device whose alarm is triggered.", "select power switch", "date and time event was created.", "type of alarm triggered.", "device name", "alarm type", "select door", "select switch", "select mode", "select lock", "select garage door"], "actions_nn": ["garage door", "system mode", "switch", "abode", "lock", "action", "unlock", "abode system", "percentage"], "actions_params": ["which garage door?", "which mode?", "which switch?", "which dimmer?", "dimmer level", "which lock?", "select switch", "quick action", "select dimmer", "select lock", "select action", "select dimmer level", "mode"]}
{"id": "138428220", "service_name": "cielo_home", "triggers_nn": ["device sens", "action", "threshold", "cielo", "device", "temperature"], "triggers_params": ["temperature threshold", "which device", "select your device", "room temperature"], "queries_nn": [], "queries_params": [], "actions_nn": ["setting", "controller", "cielo", "device", "power"], "actions_params": ["which device", "temperature in degrees", "fan speed", "select your device", "select device and mode", "set temperature", "which device and mode"]}
{"id": "1386160457", "service_name": "vestaboard", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["message", "vestaboard"], "actions_params": ["message content", "vestaboard", "vestaboard board id"]}
{"id": "138716786", "service_name": "openhab", "triggers_nn": ["item", "value", "number item", "state"], "triggers_params": ["status", "item", "value", "above value", "below value", "changes to", "which item?"], "queries_nn": ["item", "value", "list", "state"], "queries_params": ["status", "item", "value", "below value", "changes to", "which item?"], "actions_nn": ["command", "openhab item"], "actions_params": ["which item?", "command to send", "item", "command"]}
{"id": "1391221511", "service_name": "roostermoney", "triggers_nn": ["money", "child", "pot", "rooster card"], "triggers_params": ["destination pot", "child", "pot", "source pot"], "queries_nn": ["list", "money transaction"], "queries_params": ["child", "days", "pot", "pot name"], "actions_nn": ["child", "choice", "amount", "pot"], "actions_params": ["source pot", "child", "destination pot", "note", "amount", "description", "pot"]}
{"id": "1391621525", "service_name": "beeminder", "triggers_nn": ["goal", "derailment", "datapoint", "goal move"], "triggers_params": ["the url to the goal in danger", "comparison", "name of the goal", "datapoint comment", "goal", "the goal that is in danger", "the comment of the datapoint", "goal title", "the numeric value of the datapoint", "the time that this goal is due", "the descriptive title of the goal in danger", "datapoint value", "the date of the datapoint", "the descriptive title of the goal that was updated", "the url of the goal that was updated", "which goal?", "datapoint date", "safe days", "goal url", "deadline"], "queries_nn": ["goal", "list"], "queries_params": ["which goal?", "goal"], "actions_nn": ["beeminder goal", "credit card", "amount", "datapoint"], "actions_params": ["datapoint comment", "goal", "amount", "datapoint value", "goal to send data to"]}
{"id": "1396293310", "service_name": "google_calendar", "triggers_nn": ["time", "minute", "google calendar", "starting time", "event", "phrase", "set number", "search", "keyword"], "triggers_params": ["query", "keyword or phrase", "offset", "which calendar?", "calendar", "time before event starts"], "queries_nn": ["event attendee", "starting time", "day", "someone", "list", "event", "list time window", "keyword", "time", "minute", "google calendar", "list event", "search event", "date range", "number", "phrase", "calendar", "search"], "queries_params": ["end", "title", "query", "events", "start date", "keyword or phrase", "start", "offset", "which calendar?", "description", "calendar", "event", "date", "time before event starts", "end date"], "actions_nn": ["google calendar", "event"], "actions_params": ["quick add", "title", "location", "quick add text", "which calendar?", "all day?", "description", "calendar", "start time", "all day", "end time", "attendees"]}
{"id": "1398910938", "service_name": "chacon_dio", "triggers_nn": ["chacon", "target", "status", "dio plug", "dio thermostat change", "dio shutter", "state", "dio thermostat mode change", "position", "dio thermostat", "temperature"], "triggers_params": ["status", "device id plug", "device id shutter", "which state ?", "type of status ?", "which device ?", "type of condition ?", "which mode ?", "type of action ?", "condition", "which open position ?", "state", "device id thermostat", "action", "position", "which temperature target ?", "mode", "temperature"], "queries_nn": ["chacon", "status", "dio plug", "switch state", "dio shutter", "percent", "celsius", "position", "dio thermostat", "mode", "temperature"], "queries_params": ["which device ?", "device id plug", "device id thermostat", "device id shutter"], "actions_nn": ["chacon", "dio plug", "dio plug switch state", "state", "dio shutter position", "set", "dio thermostat", "mode", "temperature"], "actions_params": ["device id plug", "which temperature ?", "device id shutter", "which state ?", "which device ?", "which mode ?", "state", "which open position ?", "device id thermostat", "position", "mode", "temperature"]}
{"id": "1402866598", "service_name": "wwf", "triggers_nn": ["world wildlife fund", "story"], "triggers_params": ["filter by keyword (optional)", "query"], "queries_nn": ["list", "world wildlife fund", "story"], "queries_params": ["filter by keyword", "query"], "actions_nn": [], "actions_params": []}
{"id": "1407372845", "service_name": "agile_octopus", "triggers_nn": ["fire something", "time setting", "length", "day", "electricity price", "electricity price stay", "hour", "trigger", "time", "set duration", "period", "carbon intensity", "electricity", "electricity export price", "something", "minute block", "kwh", "hour period", "set amount", "set threshold"], "triggers_params": ["export threshold", "when to trigger carbon intensity", "at what carbon intensity should this activate?", "when to trigger?", "intensity threshold", "number of 30-minute periods matching threshold", "carbon intensity filter", "happens before", "amount of energy consumed", "carbon intensity threshold", "at what price should this activate?", "happens after", "amount of energy exported", "price threshold", "when to trigger", "number of periods", "consumed threshold"], "queries_nn": ["fire something", "time setting", "energy price threshold change", "day", "list", "electricity price", "alert", "hour", "set duration", "period", "carbon intensity", "duration", "electricity export price", "query", "electricity", "energy price", "kwh", "hour period", "set amount", "set threshold"], "queries_params": ["export threshold", "at what carbon intensity should this activate?", "when to trigger carbon intensity", "when to trigger?", "intensity threshold", "number of 30-minute periods matching threshold", "carbon intensity filter", "happens before", "carbon intensity threshold", "at what price should this activate?", "happens after", "amount of energy exported", "price threshold", "when to trigger", "number of periods"], "actions_nn": [], "actions_params": []}
{"id": "1407874705", "service_name": "fcu_tod", "triggers_nn": ["time", "day peak rate"], "triggers_params": ["how many hours before peak rates end should this be triggered?", "how many hours after peak rates end should this be triggered?", "this event should trigger when peak rates:", "how many hours before peak rates start should this be triggered?", "event", "during which season?", "hours after", "hours before", "season", "how many hours after peak rates start should this be triggered?"], "queries_nn": ["time", "day peak rate", "list"], "queries_params": ["how many hours after peak rates end should this be triggered?", "this event should trigger when peak rates:", "how many hours before peak rates start should this be triggered?", "event", "during which season?", "hours after", "hours before", "season"], "actions_nn": [], "actions_params": []}
{"id": "1408856061", "service_name": "fing", "triggers_nn": ["upload channel", "fingbox", "internet ip change", "fing account", "one", "someone", "device", "download", "user", "trigger", "user group", "network", "internet speed drop"], "triggers_params": ["which user?", "average of", "device name", "which user group?", "user group name", "event type", "what event?", "time window", "which device?", "fingbox name", "drop threshold", "event after", "user name", "start time", "event before", "end time", "which fingbox?", "threshold"], "queries_nn": ["instance", "location", "someone", "list", "device", "isp", "event", "internet outage event", "internet speed", "one", "time", "upload channel", "fingbox", "download", "user", "user group", "network"], "queries_params": ["which user?", "average of", "time window", "which user group?", "user group name", "device name", "event type", "what event?", "which device?", "fingbox name", "drop threshold", "event after", "user name", "start time", "event before", "end time", "which fingbox?", "threshold"], "actions_nn": ["category", "effect", "fingbox", "access", "internet", "user"], "actions_params": ["which user?", "duration", "which effect?", "fingbox name", "for how long?", "which color?", "user name", "led effect", "which fingbox?", "led color"]}
{"id": "141232387", "service_name": "turntouch", "triggers_nn": ["turn touch remote", "button"], "triggers_params": ["remote button"], "queries_nn": [], "queries_params": [], "actions_nn": [], "actions_params": []}
{"id": "1416054673", "service_name": "ergosmartbed", "triggers_nn": ["bed alarm clock"], "triggers_params": ["select smart bed alarm clock", "select clock"], "queries_nn": [], "queries_params": [], "actions_nn": ["bed run", "position", "bed raise", "tv mode", "g mode", "bed", "user"], "actions_params": ["user preset"]}
{"id": "141682927", "service_name": "SAFEBYHUB6", "triggers_nn": ["status update", "hub6"], "triggers_params": ["status", "partition", "which status?", "which home?"], "queries_nn": ["hub6 status", "list"], "queries_params": ["status", "partition", "which status?", "which home?"], "actions_nn": ["safebyhub6", "home"], "actions_params": ["partition", "which action?", "which home?", "partition action"]}
{"id": "1417441328", "service_name": "dobiss", "triggers_nn": ["dobiss scenario", "flag", "status"], "triggers_params": ["status", "which flag?", "which scenario?", "scenario", "flag", "on or off?"], "queries_nn": [], "queries_params": [], "actions_nn": ["home", "scenario", "dobiss nxt installation", "flag", "dobiss", "output"], "actions_params": ["which output?", "which flag?", "action", "which scenario?", "scenario", "flag", "on or off?", "output"]}
{"id": "1421161436", "service_name": "sonos", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["queue", "radio station", "track", "url", "set volume", "resume playback", "pause playback", "sonos player", "sonos favorite", "volume", "amount", "group", "stream audio", "sonos"], "actions_params": ["where do you want to set the volume?", "where do you want to skip?", "where do you want to change the volume?", "room", "where do you want to resume?", "volume", "where do you want to unmute?", "include grouped rooms", "what do you want to play?", "name", "favorite", "where do you want to play?", "where do you want to mute?", "image url", "url", "what level do want the volume to be?", "what image do you want to show for this stream?", "include grouped rooms?", "where do you want to pause?", "pause entire household?", "what name do you want to show for this stream?", "what favorite do you want to play?"]}
{"id": "142226432", "service_name": "google_drive", "triggers_nn": ["photo", "file", "video", "google drive folder", "search query"], "triggers_params": ["query", "path", "drive folder path", "search query"], "queries_nn": ["photo", "file", "video", "google drive folder", "list", "search query"], "queries_params": ["query", "path", "drive folder path", "search query"], "actions_nn": ["google", "path", "file", "url"], "actions_params": ["path", "url", "file url", "file name", "filename", "drive folder path"]}
{"id": "1431347720", "service_name": "nuki_opener", "triggers_nn": ["ring", "auto unlock", "door", "opener", "battery state", "someone unknown", "someone", "week", "doorbell"], "triggers_params": ["which door?", "who?", "who", "which door"], "queries_nn": ["auto unlock", "door", "opener", "battery state", "someone", "list", "week", "doorbell", "event"], "queries_params": ["which door?", "who?", "who", "which door"], "actions_nn": ["ring", "doorbell", "door", "opener", "somebody", "mode", "timeframe"], "actions_params": ["which door?", "which door"]}
{"id": "1436264202", "service_name": "easyftp", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["upload", "ftp", "file", "sftp server"], "actions_params": ["overwrite", "connection", "file url", "folder path", "custom file extension", "which ftp, ftps, or sftp server do you want to send the file?", "ftp folder path", "custom file name"]}
{"id": "1440716852", "service_name": "ring", "triggers_nn": ["motion", "doorbell", "ring doorbell", "somebody"], "triggers_params": ["which doorbell?", "doorbell", "which device?"], "queries_nn": ["time", "motion", "doorbell", "list", "time somebody", "ring doorbell"], "queries_params": ["which doorbell?", "doorbell", "which device?"], "actions_nn": [], "actions_params": []}
{"id": "1442633498", "service_name": "bosma", "triggers_nn": ["time", "period", "door", "button", "someone", "person", "lock", "camera", "doorbell", "event", "package", "door sensor", "door lock", "view"], "triggers_params": ["which device?", "endpoint"], "queries_nn": ["lock", "aegis", "list"], "queries_params": ["name", "the name of lock."], "actions_nn": ["lock", "siren", "aegis", "bosma device", "family", "security mode", "mode"], "actions_params": ["which aegis smart lock do you want to lock?", "family", "which family do you want to control?", "device", "lock", "which aegis smart lock do you want to unlock?", "which security mode do you want to switch to?", "mode", "which device do you want to alert?"]}
{"id": "1448489555", "service_name": "hacker_news", "triggers_nn": ["hacker news story", "job", "show hacker news story", "hacker news", "comment", "story", "user"], "triggers_params": ["title", "date and time event was created.", "matching search term", "username", "the user who posted the job.", "score", "if the job posting is a self post, this ingredient will contain that text.", "text", "the user who posted the story.", "the url to the job on hacker news.", "external url", "the url to the story on hacker news.", "comments count", "the number of points that the post has.", "the title of the job posting.", "if the story links to an external website, this ingredient will contain that url.", "created at", "if the job posting links to an external website, this ingredient will contain that url.", "which username?", "the title of the story.", "url", "the number of comments.", "if the story is a self post, this ingredient will contain that text.", "search"], "queries_nn": ["time", "job", "show hacker news story", "list", "story", "hacker news story", "user", "comment", "hacker news"], "queries_params": ["title", "matching search term", "date and time event was created.", "username", "the user who posted the job.", "score", "if the job posting is a self post, this ingredient will contain that text.", "text", "the user who posted the story.", "the url to the job on hacker news.", "external url", "the url to the story on hacker news.", "comments count", "the number of points that the post has.", "the title of the job posting.", "if the story links to an external website, this ingredient will contain that url.", "created at", "if the job posting links to an external website, this ingredient will contain that url.", "which username?", "the title of the story.", "url", "the number of comments.", "if the story is a self post, this ingredient will contain that text.", "search"], "actions_nn": [], "actions_params": []}
{"id": "1459308820", "service_name": "vesyncSwitchOnline", "triggers_nn": ["device"], "triggers_params": ["select device", "device"], "queries_nn": ["device", "event", "list"], "queries_params": ["select device", "device"], "actions_nn": ["device"], "actions_params": ["select device", "device"]}
{"id": "14669108", "service_name": "ge_appliances_dishwasher", "triggers_nn": ["pod", "cycle", "filter", "ge dishwasher", "stock", "aid", "ge dishwasher sens", "leak"], "triggers_params": ["which appliance?", "applianceid"], "queries_nn": ["stock", "pod", "list", "filter", "ge dishwasher"], "queries_params": ["which appliance?", "applianceid"], "actions_nn": [], "actions_params": []}
{"id": "1467824866", "service_name": "weatherflow", "triggers_nn": ["brightness", "rain", "value", "pressure", "start", "temperature forecast", "wind speed", "observation", "time frame", "humidity", "weatherflow tempest station", "uv", "lightning strike", "radiation", "temperature"], "triggers_params": ["what brightness threshold?", "which wind speed trigger field?", "what pressure measurement unit?", "wind speed", "what wind speed threshold?", "which rain unit?", "what temperature threshold?", "which pressure unit?", "units temp", "what humidity threshold?", "units wind", "units rain", "units distance", "uv", "how many forecast days to check?", "which temperature unit?", "solar radiation", "what solar radiation threshold?", "brightness", "what uv threshold?", "pressure", "which device?", "which wind speed unit?", "device id", "which station?", "humidity", "temperature", "temperature threshold", "pressure threshold", "the pressure measurement unit?", "wind trigger field", "forecast days to check", "which pressure threshold?", "which distance unit?", "which wind unit?", "units pressure", "location id"], "queries_nn": ["brightness", "value", "pressure", "list", "observation", "wind speed", "humidity", "start", "radiation", "temperature", "time", "weather station", "rain", "weatherflow", "uv", "lightning strike"], "queries_params": ["what brightness threshold?", "which wind speed trigger field?", "what pressure measurement unit?", "wind speed", "what wind speed threshold?", "which rain unit?", "which pressure unit?", "what temperature threshold?", "units temp", "what humidity threshold?", "units wind", "units rain", "units distance", "uv", "which temperature unit?", "solar radiation", "what solar radiation threshold?", "brightness", "what uv threshold?", "pressure", "which device?", "which wind speed unit?", "device id", "which station?", "humidity", "temperature", "temperature threshold", "pressure threshold", "the pressure measurement unit?", "wind trigger field", "which pressure threshold?", "which distance unit?", "which wind unit?", "units pressure", "location id"], "actions_nn": [], "actions_params": []}
{"id": "1469456516", "service_name": "vimeo", "triggers_nn": ["follower", "feed", "video", "appearance", "search query", "user", "event", "vimeo staff pick channel", "heart", "vimeo"], "triggers_params": ["title", "optional video caption. may contain html.", "the url of live event on vimeo.", "location", "ownername", "video's title.", "the name of new follower", "date and time the video was uploaded.", "staff picks page url.", "video's url.", "video author's name.", "search for", "likedat", "caption", "staffpicksurl", "the time when the live event was created.", "created at", "website", "name", "embedcode", "the description of the live event.", "the html embed code for the video.", "author's profile page url.", "uploadedat", "query", "url", "the follower's location", "the title of the live event.", "the follower's url on vimeo", "description", "date and time you liked the video.", "the first follower's website", "embed code", "ownerurl"], "queries_nn": ["time", "feed", "video", "appearance", "list", "search query", "vimeo staff pick channel", "heart", "search", "vimeo"], "queries_params": ["title", "optional video caption. may contain html.", "ownername", "video's title.", "date and time the video was uploaded.", "staff picks page url.", "video's url.", "term to search", "video author's name.", "search for", "likedat", "caption", "term", "staffpicksurl", "embedcode", "the html embed code for the video.", "author's profile page url.", "uploadedat", "query", "url", "date and time you liked the video.", "ownerurl"], "actions_nn": [], "actions_params": []}
{"id": "1470882533", "service_name": "easycontrol_bosch", "triggers_nn": ["system pressure", "humidity", "room temperature change", "amount", "humidity rise", "notification", "room temperature", "mode", "heating system", "threshold"], "triggers_params": ["system pressure", "deviceid", "which humidity?", "temperature changed by how much?", "which easycontrol?", "zoneid", "indoor humidity", "which pressure?", "changed by", "which temperature?", "which room?", "temperature"], "queries_nn": ["mode", "amount", "room temperature change", "humidity rise", "list", "threshold"], "queries_params": ["deviceid", "which humidity?", "temperature changed by how much?", "which easycontrol?", "indoor humidity", "zoneid", "changed by", "which room?"], "actions_nn": ["holiday mode", "choice", "home mode", "mode", "auto mode.the auto mode", "clock mode", "control", "amount", "room temperature", "level", "temperature"], "actions_params": ["deviceid", "which amount", "increase temperature by how much?", "decrease temperature by how much?", "zoneid", "which easycontrol?", "which temperature?", "which room?", "temperature"]}
{"id": "1472934418", "service_name": "mailchimp", "triggers_nn": ["campaign summary", "email address", "campaign", "mailchimp", "subscriber", "list"], "triggers_params": ["how long after sent", "which list?", "which list", "how long after sent?"], "queries_nn": ["time", "campaign summary", "email address", "campaign", "mailchimp", "subscriber", "list"], "queries_params": ["how long after sent", "which list?", "which list", "how long after sent?"], "actions_nn": ["list", "subscriber", "email address"], "actions_params": ["first name", "which list?", "what email address", "delete member?", "what email address?", "which list", "last name", "delete member"]}
{"id": "1474555378", "service_name": "sensate", "triggers_nn": ["time", "amount", "event", "limit", "sensor datum"], "triggers_params": ["timeout", "trigger time", "limit", "sensor key", "event repeat interval", "timeout interval", "temperature unit"], "queries_nn": ["limit note", "event", "query", "sensor datum", "applet"], "queries_params": ["timeout", "trigger time", "limit", "sensor key", "event repeat interval", "temperature unit"], "actions_nn": [], "actions_params": []}
{"id": "1477608923", "service_name": "LinkMyPet", "triggers_nn": ["pet", "day", "pet activity", "information", "collar", "activity report", "update", "version update"], "triggers_params": ["the moderate hours achieved", "today goal status", "date and time event was created.", "photo url", "goal", "this is the high activity reached by your pet", "information about the change", "activity date", "the battery percentage on the collar", "battery", "this is the full list of triggers", "a more in depth status for reaching the total goal", "gives pet's activity yesterday", "picture of the pet", "the date of the pets activity", "change notes", "the activity goal for the pet in hours", "version number", "today activity", "created at", "triggers", "moderate", "name of the pet", "temperature", "a list of all the triggers", "the temperature reading of the collar", "this returns the version number", "gives pet's activity today", "this is a picture of your pet", "pet name", "yesterday activity", "high"], "queries_nn": ["pet", "activity", "query"], "queries_params": ["offers the pets activity today.", "gives a summary of yesterday's activity", "yesterday activity", "today activity"], "actions_nn": ["dog", "activity"], "actions_params": []}
{"id": "1480649994", "service_name": "powahome", "triggers_nn": ["room", "light", "socket", "percentage", "roller"], "triggers_params": ["which light?", "room uuid", "opening percentage", "mac and channel", "what percentage?", "which roller?", "which socket?", "which room?"], "queries_nn": ["room", "light", "socket", "threshold", "list", "roller"], "queries_params": ["which light?", "room uuid", "opening percentage", "mac and channel", "what percentage?", "which room?"], "actions_nn": ["room", "light", "opening percentage", "switch", "state", "invert", "socket", "roller"], "actions_params": ["which light?", "room uuid", "opening percentage", "mac and channel", "what percentage?", "which roller?", "which socket?", "what is the opening percentage?", "which room?\t", "which room?"]}
{"id": "1481389393", "service_name": "sRemo", "triggers_nn": ["thing"], "triggers_params": ["created at", "date and time event was created."], "queries_nn": ["thing", "list"], "queries_params": ["created at", "date and time event was created."], "actions_nn": ["scloud", "action", "signal", "set number", "sremo", "trigger number", "condition"], "actions_params": ["sremo", "signal number", "condition"]}
{"id": "1482820867", "service_name": "homeseer", "triggers_nn": ["homeseer system", "device"], "triggers_params": ["return value", "select a device"], "queries_nn": ["device", "homeseer system", "list"], "queries_params": ["return value", "select a device"], "actions_nn": ["heat set", "auto", "door", "point", "homeseer system", "homeseer system event", "device", "heat", "unlock", "thermostat", "text command", "set", "operating mode", "lighting device"], "actions_params": ["select a dimmable device", "select heat set-point temperature", "select a dim value", "return value2", "select a device", "text to send", "return value", "select a door lock", "select a thermostat", "select cool set-point temperature", "select a homeseer event"]}
{"id": "1485829292", "service_name": "watts", "triggers_nn": ["finish time", "electricity production", "co2 intensity", "starting time", "duration"], "triggers_params": ["finish time", "starting time", "start hour", "duration", "location", "run duration in hours", "end hour"], "queries_nn": ["electricity production", "co2 intensity", "starting time", "duration", "list", "finishing time"], "queries_params": ["finish time", "starting time", "start hour", "duration", "location", "run duration in hours", "end hour"], "actions_nn": [], "actions_params": []}
{"id": "1486250525", "service_name": "muilab", "triggers_nn": ["display", "mui board", "night mode", "mui"], "triggers_params": ["mui board", "mui"], "queries_nn": ["display", "night mode", "mui board", "mui", "list"], "queries_params": ["mui board", "mui"], "actions_nn": [], "actions_params": []}
{"id": "1492600074", "service_name": "airpatrol", "triggers_nn": ["room temperature", "room humidity"], "triggers_params": ["temperature limit", "humidity limit", "unit", "humidity", "temperature"], "queries_nn": ["event", "room humidity", "room", "humidity", "room temperature", "list", "alert"], "queries_params": ["temperature limit", "humidity limit", "unit", "humidity", "temperature"], "actions_nn": ["mode", "heat", "heat pump", "set temperature"], "actions_params": ["unit", "mode", "temperature"]}
{"id": "1492652534", "service_name": "isecurityplus", "triggers_nn": ["motion", "camera", "moving", "person", "something"], "triggers_params": ["select a camera", "camera"], "queries_nn": ["motion", "camera", "moving", "something", "list", "person"], "queries_params": ["select a camera", "camera"], "actions_nn": ["camera", "motion detection", "isecurity camera", "action", "pan", "tilt"], "actions_params": ["select a camera", "camera", "commands"]}
{"id": "1494379626", "service_name": "ambiclimate", "triggers_nn": ["temperature", "humidity", "device", "air conditioner", "threshold"], "triggers_params": ["temperature threshold", "on or off", "device name", "humidity threshold", "which device?", "power state", "which  device?", "unit", "temperature unit", "threshold"], "queries_nn": ["list", "humidity", "threshold", "device", "temperature"], "queries_params": ["temperature threshold", "device name", "humidity threshold", "which device?", "which  device?", "unit", "temperature unit", "threshold"], "actions_nn": ["room", "comfort mode", "device", "temperature mode", "c", "comfort feedback", "a", "mode"], "actions_params": ["which a/c?", "which mode?", "device name", "value", "feedback", "which device?", "mode", "keep temperature at"]}
{"id": "1496137469", "service_name": "lutron_caseta_wireless", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["lutron dimmer", "light", "switch", "lutron app", "scene", "position", "shades", "level", "lutron shade"], "actions_params": ["which light?", "which scene?", "zone", "set light level", "scene", "which shade?", "position", "shade", "set shade position", "level"]}
{"id": "1496359852", "service_name": "ohmconnect", "triggers_nn": ["ohmhour"], "triggers_params": ["ohm hour end", "date and time #ohmhour will start", "date and time #ohmhour will end.", "date and time #ohmhour will end", "date and time #ohmhour will start.", "ohm hour start"], "queries_nn": ["time", "ohmhour", "list"], "queries_params": ["ohm hour end", "date and time #ohmhour will start", "date and time #ohmhour will end.", "date and time #ohmhour will end", "date and time #ohmhour will start.", "ohm hour start"], "actions_nn": ["device status", "record", "device", "change"], "actions_params": ["device name", "status value", "what is changing?", "status key", "what is the new value?", "type of device", "nickname for the device", "device type"]}
{"id": "1500093018", "service_name": "propublica", "triggers_nn": ["congress", "bill", "law", "legislator", "president sign", "birthday", "search query"], "triggers_params": ["the bill's official code number.", "date of birth in numerical format (iso 8601)", "the title of the bill.", "title", "name and title of the legislator.", "the age of the legislator.", "a url for the source for this information.", "location", "the name of the bill's sponsor.", "birth year", "the day the bill is scheduled for a vote.", "the year the legislator was born.", "party", "the legislator's party affiliation.", "search for", "birthday date", "state and district the legislator represents.", "the chamber of congress (house or senate) the bill is scheduled in.", "date of birth.", "sourceurl", "the legislator's birthday in the current year.", "sponsorname", "the legislator's twitter username.", "numerical birthday date", "the day the bill became law.", "officialurl", "the congress.gov url for the bill.", "code", "the date this action occurred.", "name", "age", "state", "twitter username", "legislativedate", "becamelawon", "query", "chamber", "date"], "queries_nn": ["time", "law", "legislator", "list", "president sign", "search query", "congress", "bill", "birthday"], "queries_params": ["the bill's official code number.", "date of birth in numerical format (iso 8601)", "the title of the bill.", "title", "name and title of the legislator.", "the age of the legislator.", "a url for the source for this information.", "location", "the name of the bill's sponsor.", "birth year", "the day the bill is scheduled for a vote.", "the year the legislator was born.", "party", "search for", "the legislator's party affiliation.", "birthday date", "state and district the legislator represents.", "the chamber of congress (house or senate) the bill is scheduled in.", "date of birth.", "sourceurl", "the legislator's birthday in the current year.", "sponsorname", "the legislator's twitter username.", "numerical birthday date", "the day the bill became law.", "officialurl", "the congress.gov url for the bill.", "code", "the date this action occurred.", "name", "age", "state", "twitter username", "legislativedate", "becamelawon", "query", "chamber", "date"], "actions_nn": [], "actions_params": []}
{"id": "1505438027", "service_name": "adafruit", "triggers_nn": ["time", "datum", "feed"], "triggers_params": ["feed", "operator", "value", "relationship", "feed name"], "queries_nn": ["time", "feed", "datum", "event", "list"], "queries_params": ["feed", "operator", "value", "relationship", "feed name"], "actions_nn": ["datum", "feed", "io account"], "actions_params": ["feed name", "data", "data to save"]}
{"id": "1507467107", "service_name": "google_wifi", "triggers_nn": ["google wifi", "device disconnect", "device"], "triggers_params": ["device name"], "queries_nn": ["device", "google wifi", "device disconnect", "list"], "queries_params": ["device name"], "actions_nn": ["google wifi network", "device", "hour"], "actions_params": ["device name"]}
{"id": "1513355738", "service_name": "somfy_connexoon", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["connexoon mode", "launch"], "actions_params": ["action group", "which mode?"]}
{"id": "1513972887", "service_name": "AlexaActionsByMkzense", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["routine", "action", "alexa device", "mkzense", "service"], "actions_params": ["sensor", "action"]}
{"id": "1519668108", "service_name": "garadget", "triggers_nn": ["garage door", "door event"], "triggers_params": ["door id", "which door?"], "queries_nn": ["garage door", "list"], "queries_params": ["door id", "which door?"], "actions_nn": ["garage door"], "actions_params": ["door id", "which door?"]}
{"id": "1520122636", "service_name": "nimbus_note", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["text note", "folder", "tag"], "actions_params": ["folder", "title", "note body", "tags", "text", "note title"]}
{"id": "1520299352", "service_name": "microsoft_teams", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["channel", "message"], "actions_params": ["what is the content of the message?", "what is the urgency of the message?", "team and channel ids", "what is the subject of the message?", "which channel?", "message subject", "message urgency", "message body"]}
{"id": "1521185749", "service_name": "nuki", "triggers_nn": ["auto unlock", "door", "battery state", "button", "someone", "lock state change", "lock", "week"], "triggers_params": ["which door?", "who?", "who", "which door"], "queries_nn": ["time", "auto unlock", "door", "instance", "button", "someone", "battery state", "list", "warning", "lock", "event", "door sensor"], "queries_params": ["which door?", "who?", "who", "which door"], "actions_nn": ["time", "lock", "command", "unlock", "door", "auto lock"], "actions_params": ["waiting time?", "which door?", "which door", "waiting time"]}
{"id": "1528170054", "service_name": "ti_do", "triggers_nn": ["input port switch", "state"], "triggers_params": ["value", "which state/level?", "input id", "label", "which input?"], "queries_nn": ["input state"], "queries_params": ["value readed", "input label", "input state", "name of input"], "actions_nn": ["device", "output"], "actions_params": ["output id", "on or off", "what output?", "level"]}
{"id": "1530561431", "service_name": "mydlink", "triggers_nn": ["d", "water", "motion event", "link camera", "contact", "event", "leak event", "link", "plug", "time", "link water sensor", "tigger fire", "link device", "person", "t4 alarm", "t3", "vehicle", "sound event"], "triggers_params": ["mydlink no", "which device?"], "queries_nn": ["time", "d", "water", "motion event", "link water sensor", "link camera", "list", "link device", "sound event"], "queries_params": ["mydlink no", "which device?"], "actions_nn": ["d", "scene", "link camera", "link", "plug"], "actions_params": ["scene name", "mydlink no", "which scene?", "which device?"]}
{"id": "1536759741", "service_name": "somfy_tahoma_bee", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["tahoma bee scene", "launch"], "actions_params": ["action group", "which scenario?"]}
{"id": "1540230754", "service_name": "airtable", "triggers_nn": ["table", "record"], "triggers_params": ["sort field", "view name", "table name", "which base?", "table id or name", "base id"], "queries_nn": ["time", "table", "record", "list"], "queries_params": ["sort field", "view name", "table name", "which base?", "table id or name", "base id"], "actions_nn": ["table", "record", "choosing"], "actions_params": ["base id", "record content", "which base?", "table id or name", "table"]}
{"id": "1558457696", "service_name": "zohocliq", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["action post", "message", "chat"], "actions_params": ["title", "card theme", "web url", "external link", "select a chat", "id", "theme", "thumbnail url", "text"]}
{"id": "1562642326", "service_name": "gideon", "triggers_nn": ["home app", "gideon", "scenario"], "triggers_params": ["scenario name"], "queries_nn": ["home app", "gideon", "list", "scenario"], "queries_params": ["scenario name"], "actions_nn": ["home app", "gideon", "scenario", "launch"], "actions_params": ["scenario name"]}
{"id": "1569132098", "service_name": "honeywell_lyric", "triggers_nn": ["camera event", "motion viewer", "home security device alarm", "home", "system", "home security device", "water leak", "night mode", "mode", "motion camera event"], "triggers_params": ["system", "camera", "select your camera", "select your smart home security device", "select your system"], "queries_nn": ["system", "home security device", "list", "home mode", "mode", "night mode", "honeywell home", "motion viewer", "motion camera event"], "queries_params": ["camera", "select your camera", "select your smart home security device", "system"], "actions_nn": ["home security", "wave light", "home", "system", "honeywell thermostat", "z", "control brightness", "heat", "t9", "thermostat sens", "thermostat", "mode", "setpoint temperature", "temperature", "honeywell thermostat fan", "sensor", "auto", "room", "t10", "outlet", "heating", "thermostat room priority", "night", "fan"], "actions_params": ["select security system", "value", "temperature type", "target temperature", "temperature in", "brightness (optional)", "temperature scale", "which room do you want prioritize?", "which thermostat?", "select system", "which fan state?", "system", "which system?", "state", "which thermostat do you select?", "select arming mode", "fan state", "armtype", "heat or cool temperature", "rooms", "on or off?"]}
{"id": "1574163459", "service_name": "lametric", "triggers_nn": ["time", "timer app", "action button", "device", "countdown", "event", "clock app", "alarm"], "triggers_params": ["which clock app?", "device app", "timer start", "timer", "lametric time app to trigger action", "which timer app?", "alarm"], "queries_nn": ["event", "list", "countdown"], "queries_params": ["timer", "which timer app?"], "actions_nn": ["time", "app", "radio", "device", "indicator app", "stopwatch", "timer", "pause stopwatch", "clock face", "display notification", "set", "time device"], "actions_params": ["which radio app?", "message", "icon or animation", "text", "to which clock app?", "which stopwatch app?", "device app", "icon or animation id", "clock face id", "device to display notification on", "text or value", "clockface id", "which timer app?", "icon", "sound", "device", "priority", "which app to activate?", "app", "indicator app to update", "count for?", "count for"]}
{"id": "1576850012", "service_name": "stockimo", "triggers_nn": ["news photo", "stockimo", "photo", "payment"], "triggers_params": ["public url to the news photo uploaded.", "score", "public url to the photo uploaded.", "public url to the sold photo.", "date time of the activity", "date time", "caption for the photo.", "reason for rejection of photo.", "public url to the rejected photo.", "public photo url", "caption", "amount", "keywords for the photo (each keyword is comma separated).", "public url to the accepted photo.", "rejection reason", "amount of sale in dollars.", "amount paid in dollars.", "rating for the photo.", "tags"], "queries_nn": ["time", "stockimo", "photo", "news photo", "list"], "queries_params": ["rating for the photo.", "reason for rejection of photo.", "public url to the accepted photo.", "public url to the rejected photo.", "public url to the news photo uploaded.", "rejection reason", "date time", "score", "public photo url", "caption", "tags", "amount", "amount of sale in dollars.", "public url to the sold photo.", "public url to the photo uploaded.", "date time of the activity", "keywords for the photo (each keyword is comma separated).", "caption for the photo."], "actions_nn": ["upload", "photograph", "stockimo collection"], "actions_params": ["photo url", "url"]}
{"id": "1580058140", "service_name": "MSmartA1", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["humidity level", "action", "dehumidifier", "%"], "actions_params": ["command", "appliancelist", "which appliance?", "what humidity?", "turn on or off?"]}
{"id": "1589412919", "service_name": "groupme", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["message", "group"], "actions_params": ["group name", "message", "message text", "which group?"]}
{"id": "1590613727", "service_name": "bluelink", "triggers_nn": ["value", "filter warning", "device", "fan mode", "check warning", "thermostat battery", "heat", "humidity", "sensor battery", "pad", "temperature", "room rise", "hold status", "room", "percentage", "system mode change", "warning", "setpoint", "threshold"], "triggers_params": ["humidity percentage", "system mode", "hold status", "select mode", "selected mode", "fan mode", "selected device", "select device", "temperature"], "queries_nn": ["peak hour", "device", "interval", "state"], "queries_params": ["end hour", "selected device", "select device", "start hour"], "actions_nn": ["hold mode", "hold status", "device", "heat setpoint", "fan mode", "setpoint", "room temperature", "mode"], "actions_params": ["hold setting", "system mode", "hold mode", "system setting", "hold status", "desired room temperature", "cool temperature", "cool setpoint", "heat setpoint", "fan setting", "fan mode", "selected device", "select device", "heat temperature"]}
{"id": "1590618050", "service_name": "datadotworld", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["sync process", "data.world dataset", "url", "datum project", "record", "file", "stream"], "actions_params": ["stream", "stream name", "file url", "dataset or data project", "file name", "dataset key", "payload", "record"]}
{"id": "1591951188", "service_name": "mymilan", "triggers_nn": ["curtain status", "light status", "trigger", "siren status", "door sensor status", "door lock status", "motion sensor status"], "triggers_params": ["property", "triggers", "instances", "select action", "select trigger", "select device"], "queries_nn": ["light status", "instance", "siren status", "door sensor status", "list", "door lock status"], "queries_params": ["property", "instances", "select device", "select action"], "actions_nn": ["application", "scene", "state change", "door", "light"], "actions_params": ["property", "select scene", "scenes", "instances", "select action", "select device"]}
{"id": "1594461656", "service_name": "hive_active_plug", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["hive plug", "hive", "duration"], "actions_params": ["which plug?", "plugname", "duration"]}
{"id": "1595599187", "service_name": "trane_home", "triggers_nn": ["motion", "camera", "lock", "door", "trane automation run", "motion sensor"], "triggers_params": ["which camera?", "sensor", "which door?", "which sensor?", "which lock?", "camera", "lock", "door sensor", "nexia automation", "which automation?"], "queries_nn": ["list", "door"], "queries_params": ["which door?", "door sensor"], "actions_nn": ["trane automation", "switch"], "actions_params": ["which switch?", "which dimmer?", "value", "switch", "dimmer", "how bright?", "nexia automation", "which automation?"]}
{"id": "1595735189", "service_name": "SamsungWasher", "triggers_nn": ["laundry cycle", "laundry cycle star", "laundry time", "value"], "triggers_params": ["remaining time?", "deviceid", "which device ?", "which device?", "remainingtime"], "queries_nn": ["laundry cycle", "list"], "queries_params": ["which device ?", "deviceid", "which device?"], "actions_nn": ["laundry cycle"], "actions_params": ["deviceid", "which device?"]}
{"id": "1605254398", "service_name": "honeywell_total_connect_comfort", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["time", "schedule", "honeywell thermostat fan", "auto", "system", "period", "honeywell thermostat", "heating", "thermostat", "fan", "temperature"], "actions_params": ["temperature in", "system", "temperature scale", "hours", "which system?", "heat or cool temperature", "temperature type", "fan state", "target temperature"]}
{"id": "1607152633", "service_name": "trakt", "triggers_nn": ["episode", "movie", "show", "trakt.tv"], "triggers_params": ["the trakt show id.", "episode season", "episode id", "movie id", "date and time when you watched the movie", "show title", "episode title", "the title of the show", "the trakt episode id.", "the title of the episode.", "show id", "the title of the movie.", "the episode's season number.", "watched at", "date and time when you watched the episode.", "the episode's number.", "movie title", "episode number", "the trakt movie id."], "queries_nn": ["movie", "movie recommendation", "query", "year", "information", "show", "show recommendation", "trailer", "genre"], "queries_params": ["movie certification", "how many episodes were aired", "title", "movie genre", "the trakt show id.", "trailer url", "trailer", "showid", "number of episodes", "the show's rating", "the movie's age certification", "movie id", "description of the show.", "the show's genres.", "movie plays", "first aired date", "how many times you've watched this movie", "first aired", "release year of the movie", "url to the show's trailer.", "last time you watched the movie", "the title of the show", "year", "description of the movie.", "rating", "movie trailer", "id", "show id", "the title of the movie.", "current status of the show (returning series, in production, planned, cancelled, ended)", "release year of the show", "status", "movie title", "genres", "description", "last watched at", "the trakt movie id.", "movie year", "movie description", "the movie's genres."], "actions_nn": [], "actions_params": []}
{"id": "1615813415", "service_name": "aquanta", "triggers_nn": ["water heater", "leak", "device", "energy use threshold", "cloud"], "triggers_params": ["which device might go offline?", "device", "which device will detect leaks?", "how much daily energy may be used before an alert?", "which hot water heater should be monitored?", "which device might get online?", "threshold"], "queries_nn": ["device", "list", "cloud"], "queries_params": ["which device might go offline?", "device"], "actions_nn": ["aquanta", "device", "mode", "boost action"], "actions_params": ["end", "how long should away last?", "what device should be put into away?", "when should the boost start?", "how long should boost last?", "device to take out of boost mode", "device", "cancel the away on which device?", "when should the away start?", "which device to boost?", "start"]}
{"id": "1615844510", "service_name": "bbox_miami", "triggers_nn": ["wifi state change", "voice message", "phone number", "volume change", "call", "tv channel", "host", "someone", "host disconnect", "call state", "bbox miami state change", "bbox miami", "host name", "wake up", "hostname value disconnect", "landline phone", "stand", "bbox gateway network"], "triggers_params": ["date and time event was created.", "phone number unanswered", "la nouvelle cha\u00eene en cours de lecture", "disconnected host ip", "host name", "new state", "what host name?", "disconnected host name", "media title", "which state?", "channel", "connected host name", "which channel", "connected host ip", "created at", "phone number", "what call state?", "state", "num\u00e9ro de la cha\u00eene", "volume value filter", "epg channel number", "host ip", "what phone number?"], "queries_nn": ["voice message", "phone number", "call", "instance", "tv channel", "host", "list", "wifi state", "landline phone", "bbox gateway network"], "queries_params": ["created at", "phone number", "date and time event was created.", "phone number unanswered", "state", "disconnected host name", "host ip", "which state?", "channel", "disconnected host ip", "host name", "which channel", "what phone number?"], "actions_nn": ["front", "wifi", "phone number", "choosing", "tv program", "will", "message", "tv channel", "name", "list", "launch", "state", "application", "wifi mac address filter request", "bbox miami", "bbox gateway", "wake", "bbox", "led", "volume", "brooklyn", "action", "reboot", "internet"], "actions_params": ["which line?", "what message?", "etat", "list of mac address to filter", "message", "ligne", "state", "what number?", "which application?", "volume", "which app", "numero", "which channel?", "which state?", "channel", "which state", "what message would you like to send?", "what volume level?"]}
{"id": "1620619676", "service_name": "hue", "triggers_nn": [], "triggers_params": [], "queries_nn": ["bridge", "light"], "queries_params": ["a unique, editable name given to the light.", "the dynamic effect of the light, can either be &quot;none&quot; or &quot;colorloop&quot;.", "a value between 1 and 254 indicating the brightness of the light.", "effect", "running status of the light (on/off)", "cie xy", "the comma separated x and y coordinates of a color in cie color space.", "light id", "colormode", "brightness", "name", "color temperature", "light hue", "saturation of the light. 254 is the most saturated (colored) and 0 is the least saturated (white).", "the mired color temperature of the light. 2012 connected lights are capable of 153 (6500k) to 500 (2000k).", "reachable", "status", "saturation", "describes if the light is available to the bridge at the moment.", "hue of the light. this is a wrapping value between 0 and 65535.", "indicates the color mode in which the light is working. &quot;hs&quot; for hue and saturation, &quot;xy&quot; for xy and &quot;ct&quot; for color temperature."], "actions_nn": ["action", "scene", "color loop effect", "value", "hue light", "image", "color"], "actions_params": ["lights", "which lights?", "brightness", "image url", "which scene?", "scene", "color mode", "color value or name", "color"]}
{"id": "1621810284", "service_name": "smarthon", "triggers_nn": [], "triggers_params": [], "queries_nn": ["thing", "list"], "queries_params": [], "actions_nn": ["iot device", "control command", "value"], "actions_params": ["device id", "command", "value"]}
{"id": "1627814135", "service_name": "harvest", "triggers_nn": ["timer", "harvest", "project"], "triggers_params": ["url for the project.", "notes", "name of the project for which time is being tracked.", "project code.", "date and time when the timer was stopped.", "name of the project.", "timer notes.", "created at", "name of the user that stopped the timer.", "project name", "code", "name", "date and time when the timer was started.", "name of the user that started the timer.", "name of the task for which time is being tracked.", "url", "date and time when the project was created.", "task name", "user name"], "queries_nn": ["timer", "harvest", "list"], "queries_params": ["created at", "name of the user that stopped the timer.", "project name", "notes", "name of the project for which time is being tracked.", "task name", "timer notes.", "date and time when the timer was stopped.", "user name", "name of the task for which time is being tracked."], "actions_nn": ["task", "project"], "actions_params": ["task name", "which project?", "project"]}
{"id": "1631301261", "service_name": "filtrete", "triggers_nn": ["app", "example", "life", "day", "value", "air quality information", "air quality scale level change", "air quality value", "filtrete", "%", "air filter", "filtrete barcode air filter", "air filter change", "percentage"], "triggers_params": ["dimensions", "please choose a value from 1 to 500 as air quality value threshold", "filter life threshold", "location", "the family type of the filter. ", "please enter a value for filter days remaining", "the name of the filter.", "timestamp", "the date and time of when the filter life changed. ", "please choose a value from 0 to 499 as air quality value threshold", "install date", "mpr", "model", "type", "the installation date of the filter. ", "either \"smart air filter\" or  non-smart \"barcode air filter\" ", "the remaining filter life percentage, without the '%' sign.", "threshold", "the model type of the filter. ", "choose a location (us or canada only)", "remaining filter life", "the location of the filter.", "air quality location", "name", "the dimensions of the filter: width x height x depth.", "family name", "please enter a filter life percentage", "the microparticle performance rating (mpr) of the filter. ", "the dimension of the filter: width x height x depth."], "queries_nn": ["app", "life", "day", "value", "list", "filtrete", "%", "air filter", "filtrete barcode air filter", "air filter change", "percentage"], "queries_params": ["dimensions", "filter life threshold", "location", "the family type of the filter. ", "please enter a value for filter days remaining", "the name of the filter.", "timestamp", "the date and time of when the filter life changed. ", "install date", "mpr", "model", "type", "the installation date of the filter. ", "either \"smart air filter\" or  non-smart \"barcode air filter\" ", "the remaining filter life percentage, without the '%' sign.", "the model type of the filter. ", "remaining filter life", "the location of the filter.", "name", "the dimensions of the filter: width x height x depth.", "family name", "please enter a filter life percentage", "the microparticle performance rating (mpr) of the filter. ", "the dimension of the filter: width x height x depth."], "actions_nn": [], "actions_params": []}
{"id": "1634256451", "service_name": "boundary", "triggers_nn": ["alarm"], "triggers_params": ["type of event occurred", "the user who armed the alarm.", "type", "disarmed at", "date and time alarm was disarmed.", "date and time alarm was armed.", "triggered at", "armed at", "user name", "the user who disarmed the alarm.", "date and time alarm was triggered."], "queries_nn": ["status", "boundary alarm hub"], "queries_params": ["status", "this is the alarm's current status."], "actions_nn": ["alarm"], "actions_params": []}
{"id": "1637444126", "service_name": "electrolux", "triggers_nn": ["status", "robot"], "triggers_params": ["robot", "what robot should receive the command?"], "queries_nn": ["status", "robot", "list"], "queries_params": ["robot", "what robot should receive the command?"], "actions_nn": ["robot", "command"], "actions_params": ["what command should be sent?", "robot", "command", "what robot should receive the command?"]}
{"id": "1644072765", "service_name": "lennoxicomfort", "triggers_nn": ["mode", "thermostat", "temperature drop", "temperature rise", "threshold"], "triggers_params": ["temperature threshold", "systems", "which system?", "degrees", "indoor temperature", "degrees in"], "queries_nn": ["mode", "thermostat", "instance", "temperature drop", "list", "threshold", "temperature"], "queries_params": ["temperature threshold", "systems", "which system?", "degrees", "indoor temperature", "degrees in"], "actions_nn": ["home", "auto", "attempt", "degree", "number", "thermostat", "fan", "temperature"], "actions_params": ["temperature threshold", "systems", "which system?", "degrees", "indoor temperature", "degrees in", "which home?", "homes", "temperature threshhold"]}
{"id": "16449743", "service_name": "sfgate", "triggers_nn": ["sfgate homepage", "author mark morford", "article", "giant", "breaking news event", "update"], "triggers_params": ["the entry's url.", "entrytitle", "the entry's title.", "entrycontent", "the entry's content, may contain html.", "entrypublished", "date entry was created.", "entryauthor", "the entry's author name.", "entryurl"], "queries_nn": ["breaking news event", "sfgate homepage", "author mark morford", "article", "giant", "update", "list"], "queries_params": ["the entry's url.", "entrytitle", "the entry's title.", "entrycontent", "the entry's content, may contain html.", "entrypublished", "date entry was created.", "entryauthor", "the entry's author name.", "entryurl"], "actions_nn": [], "actions_params": []}
{"id": "1646223231", "service_name": "instapaper", "triggers_nn": ["item", "folder", "instapaper", "comment", "archive"], "triggers_params": ["title", "the title of the liked item.", "date and time event was created.", "the title of the saved item.", "text", "the url of the article.", "the comment on the highlighted text.", "the title of the archived item.", "the title of the article.", "date and time the item was created.", "the description of the liked item.", "the url of the liked item.", "the text of the highlight.", "the description of the archived item.", "the highlighted text of the comment.", "the url of the archived item.", "comment", "created at", "folder", "the url of the saved item.", "which folder?", "url", "description", "the description of the saved item."], "queries_nn": ["time", "item", "folder", "instapaper", "comment", "archive", "list"], "queries_params": ["title", "the title of the liked item.", "date and time event was created.", "the title of the saved item.", "text", "the url of the article.", "the comment on the highlighted text.", "the title of the archived item.", "the title of the article.", "date and time the item was created.", "the description of the liked item.", "the url of the liked item.", "the text of the highlight.", "the description of the archived item.", "the highlighted text of the comment.", "the url of the archived item.", "comment", "created at", "folder", "the url of the saved item.", "which folder?", "url", "description", "the description of the saved item."], "actions_nn": ["item", "instapaper"], "actions_params": ["title", "folder", "url", "description", "which folder?"]}
{"id": "1657647013", "service_name": "wemo_humidifier", "triggers_nn": ["drop", "water", "room", "filter life percentage", "humidifier", "max", "fan mode", "humidity level", "filter life", "rise", "min"], "triggers_params": ["filter life (percentage)", "subtype", "what fan mode?", "which device?", "humidity level threshold (percentage)", "macaddress"], "queries_nn": ["water", "room", "list", "humidifier", "filter life percentage", "max", "fan mode", "humidity level", "rise", "filter life", "min"], "queries_params": ["filter life (percentage)", "subtype", "what fan mode?", "which device?", "humidity level threshold (percentage)", "macaddress"], "actions_nn": ["max", "fan mode", "humidity target level", "min", "humidifier", "percentage"], "actions_params": ["subtype", "humidity target level", "what fan mode?", "which device?", "macaddress"]}
{"id": "1659786454", "service_name": "arlo", "triggers_nn": ["motion", "object type", "report", "device", "arlo device", "battery level", "audio", "arlo video doorbell button"], "triggers_params": ["which doorbell device?", "detected object", "device name", "which device?", "what type of object is detected?"], "queries_nn": ["detection", "motion", "arlo device", "event", "battery level", "list", "arlo"], "queries_params": ["which device?", "device name"], "actions_nn": ["camera", "arlo device", "arlo mode", "arlo siren"], "actions_params": ["device name", "duration", "how loud?", "how long?", "which device?", "volume"]}
{"id": "1662816797", "service_name": "sateraito_office", "triggers_nn": ["message", "sateraito robotbrowser"], "triggers_params": ["created at", "message 5", "attach file 1", "message text from sateraito robot browser", "date and time event was created.", "message 7", "one-time url to get attached file to message, like photo image file", "attach file 2", "attach file 3", "message 2", "message 6", "message 3", "message 4", "message 1"], "queries_nn": ["message", "list", "sateraito robotbrowser"], "queries_params": ["created at", "message 5", "attach file 1", "message text from sateraito robot browser", "date and time event was created.", "message 7", "one-time url to get attached file to message, like photo image file", "attach file 2", "attach file 3", "message 2", "message 6", "message 3", "message 4", "message 1"], "actions_nn": [], "actions_params": []}
{"id": "1665993237", "service_name": "usign", "triggers_nn": [], "triggers_params": [], "queries_nn": ["domain list", "list user notification", "list entity"], "queries_params": ["are you want to see only unread notifications", "are you want to see only unread notifications?", "name", "entity id", "domain id", "id", "domain name", "entity name"], "actions_nn": ["record", "entity"], "actions_params": ["entity", "data", "domain"]}
{"id": "1670533162", "service_name": "watttime", "triggers_nn": ["switch"], "triggers_params": ["what would you like to name your device?", "where is your device located?", "device location", "device name"], "queries_nn": [], "queries_params": [], "actions_nn": [], "actions_params": []}
{"id": "167423628", "service_name": "logitech_pop", "triggers_nn": ["press", "logi button"], "triggers_params": ["trigger condition", "which button?", "switch", "which trigger source?", "which trigger option?", "trigger source"], "queries_nn": ["time", "press", "event", "list", "logi button"], "queries_params": ["trigger condition", "which button?", "switch", "which trigger source?", "which trigger option?", "trigger source"], "actions_nn": [], "actions_params": []}
{"id": "1677285427", "service_name": "telldus", "triggers_nn": ["power level", "value", "luminance", "device", "power", "humidity", "temperature rise", "temperature"], "triggers_params": ["power level", "which device", "temperature value", "scale", "which sensor", "luminance value", "which device?", "which sensor?", "select scale", "humidity value"], "queries_nn": ["time", "list", "event", "value", "luminance", "device", "temperature"], "queries_params": ["which device", "temperature value", "scale", "which sensor", "luminance value", "which device?", "which sensor?", "select scale"], "actions_nn": ["bell", "device", "dimming"], "actions_params": ["dim level", "which device", "which device?"]}
{"id": "1678831839", "service_name": "AerialTechnologies", "triggers_nn": ["motion", "movement", "confidence", "motion event"], "triggers_params": ["created at", "event identifier", "serial", "date and time event was created.", "type", "id", "type of event"], "queries_nn": [], "queries_params": [], "actions_nn": [], "actions_params": []}
{"id": "1679771779", "service_name": "intelligent_voice", "triggers_nn": ["head unit", "phrase"], "triggers_params": ["phrase", "pid", "head unit", "speak pattern"], "queries_nn": ["server_status"], "queries_params": ["isoperate"], "actions_nn": [], "actions_params": []}
{"id": "1682583484", "service_name": "ambient_weather", "triggers_nn": ["minute", "uv index", "temperature", "value", "device", "rain measurement", "wind speed", "temperature rise", "parameter", "threshold"], "triggers_params": ["how much rain?", "param", "what value?", "value", "which parameter?", "what temperature?", "which device?", "device", "what's the threshold?", "what wind speed?", "what uv index?", "what outdoor temperature?"], "queries_nn": ["minute", "uv index", "value", "threshold", "rain measurement", "list", "wind speed", "device", "event", "parameter", "temperature"], "queries_params": ["how much rain?", "param", "what value?", "value", "which parameter?", "what temperature?", "which device?", "device", "what's the threshold?", "what wind speed?", "what uv index?", "what outdoor temperature?"], "actions_nn": [], "actions_params": []}
{"id": "1684965546", "service_name": "hopscotch", "triggers_nn": ["image", "text post", "post", "link"], "triggers_params": ["social media accounts", "member uid"], "queries_nn": ["text post", "history", "image", "link", "post"], "queries_params": ["social media account", "member uid"], "actions_nn": ["twitter account", "post", "tweet"], "actions_params": ["photo url", "publish at", "id", "content", "twitter accounts", "queues", "tweet id or url", "scheduled date & time", "member queue uid", "member uid", "social media accounts", "media url"]}
{"id": "1685819366", "service_name": "do_note", "triggers_nn": ["note"], "triggers_params": ["shareurl", "longitude", "the text of the note.", "imageurl", "occurredat", "the link to the share page for the note.", "the link to an image of the note.", "the latitude of the location of the note.", "the link to the map of the location of the note.", "the image of the map of the location of the note.", "latitude", "text", "locationmapurl", "the longitude of the location of the note.", "the date and time the note was taken.", "locationmapimageurl"], "queries_nn": [], "queries_params": [], "actions_nn": [], "actions_params": []}
{"id": "1687686272", "service_name": "google_tasks", "triggers_nn": ["task", "list"], "triggers_params": ["tasklist id", "which task list?"], "queries_nn": ["task list", "task", "list"], "queries_params": ["the title of the task list.", "which task list?", "include completed tasks?", "the unique identifier of the task list", "task list title", "tasklist id", "task list id", "show completed"], "actions_nn": ["task list", "task"], "actions_params": ["task title", "what is the title of the task?", "which task list?", "due date", "task notes", "tasklist id", "does the task have a due date?", "what are the notes to include in the task?"]}
{"id": "1688044699", "service_name": "eff", "triggers_nn": ["frontier foundation issue", "frontier foundation post", "press release", "podcast", "action alert", "blog post"], "triggers_params": ["the entry's url.", "entrytitle", "the entry's content, contains html.", "query", "the entry's title.", "entrycontent", "entrypublished", "date entry was created.", "filter by keyword (optional)", "entryurl"], "queries_nn": ["frontier foundation issue", "frontier foundation post", "press release", "podcast", "action alert", "list", "blog post"], "queries_params": ["the entry's url.", "filter by keyword", "entrytitle", "query", "the entry's content, contains html.", "the entry's title.", "entrycontent", "entrypublished", "date entry was created.", "entryurl"], "actions_nn": [], "actions_params": []}
{"id": "1688985062", "service_name": "feedly", "triggers_nn": ["leo", "team member", "queue", "article", "team board", "category", "highlight text", "source", "note"], "triggers_params": ["article comment", "this number indicates the relative popularity of the article (above 1 means more popular)", "article engagement", "date and time event was created.", "name of the feed", "the text that was highlighted in the article.", "the article's url.", "source categories", "article first image url", "the name of the team member who added this note.", "the first comment on this article", "comma separated list of team boards for this article (feedly teams users only)", "source feed url", "the first highlight on this article", "url of the atom or rss feed", "this is the title of the article", "article engagement rate", "the note that was added to the article.", "article first highlight", "comma separated categories for this article", "article categories", "article title", "category", "url to the feed's front page.", "comma separated list of personal boards for this article", "saved by", "board", "article knowledge boards", "created at", "date article was created", "article first comment", "the article's content. contains html.", "article url", "url for the first image in the article, if article doesn't have an image will point to a placeholder image.", "article published at", "priority", "this number indicates the popularity of the article.", "article highlight", "the article's title.", "article tags", "article content", "source url", "the name of the feed.", "the name of the team member who saved this highlight.", "article author", "this is the author of the article.", "source title", "comma separated categories for this feed"], "queries_nn": ["time", "leo", "team member", "queue", "article", "list", "team board", "category", "highlight text", "note", "source"], "queries_params": ["article comment", "article engagement", "date and time event was created.", "name of the feed", "the text that was highlighted in the article.", "the article's url.", "source categories", "article first image url", "the name of the team member who added this note.", "the first comment on this article", "comma separated list of team boards for this article (feedly teams users only)", "source feed url", "the first highlight on this article", "url of the atom or rss feed", "this is the title of the article", "the note that was added to the article.", "article first highlight", "comma separated categories for this article", "article categories", "url to the feed's front page.", "category", "article title", "comma separated list of personal boards for this article", "saved by", "board", "article knowledge boards", "created at", "date article was created", "article first comment", "the article's content. contains html.", "article url", "url for the first image in the article, if article doesn't have an image will point to a placeholder image.", "article published at", "this number indicates the popularity of the article.", "priority", "article highlight", "the article's title.", "article tags", "article content", "source url", "the name of the feed.", "the name of the team member who saved this highlight.", "article author", "this is the author of the article.", "source title", "comma separated categories for this feed"], "actions_nn": ["feed", "queue", "article", "team subscription", "attempt", "article url", "team board", "source", "page url", "board"], "actions_params": ["personal board", "url", "team board", "kb", "tag"]}
{"id": "1697973854", "service_name": "Smitch", "triggers_nn": ["motion", "sound"], "triggers_params": ["camera"], "queries_nn": ["user", "list", "notification"], "queries_params": ["camera", "start date", "alert type", "end date"], "actions_nn": ["detection", "motion detection", "ser night vision", "device", "camera", "bulb", "effect", "power strip", "smitch home device", "change colour", "plug", "sd card", "object tracking", "auto mode", "change effect", "scene", "night vision"], "actions_params": ["camera name", "home", "motion detection type", "colour", "device", "camera", "scene", "bulb", "effect", "sound detection type"]}
{"id": "1700992094", "service_name": "aros", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["aro", "c off", "temperature", "c"], "actions_params": ["temperature", "which device?", "degrees in", "aros-id", "degrees-in"]}
{"id": "1702180113", "service_name": "asusrouter", "triggers_nn": ["router", "device"], "triggers_params": ["device name"], "queries_nn": ["time", "asus router", "device", "list"], "queries_params": ["device name"], "actions_nn": ["firmware version", "asus router", "wifi", "video streaming service", "game", "wake", "boost gaming bandwidth", "media", "firmware upgrade", "lan device", "guest network profile", "mode"], "actions_params": ["adaptive qos", "device name"]}
{"id": "1703576974", "service_name": "automateshades_v2", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["destination position", "scene", "room", "shade", "rollease acmeda app"], "actions_params": ["deviceid", "how much tilt?", "which scene?", "what percentage?", "movement position", "roomid", "tilt position", "sceneid", "which shade?", "which room?", "what percent?"]}
{"id": "1704482991", "service_name": "simcam", "triggers_nn": ["ring", "simcam", "area", "fence", "simbaby", "camera", "car", "face id", "baby", "pet", "crying", "object", "person", "doorbell", "answerd", "view"], "triggers_params": ["device list", "cameralist", "doorbell list", "personlist"], "queries_nn": ["pet", "simcam", "object", "list", "view", "person", "camera", "car", "face id", "area"], "queries_params": ["device list", "cameralist", "personlist"], "actions_nn": ["camera", "privacy mode"], "actions_params": ["device list", "cameralist"]}
{"id": "1707766680", "service_name": "seeburg", "triggers_nn": ["seeburg track", "livestream"], "triggers_params": ["the name of the next track on the record.", "date and time event was created.", "the side (a, b) of the record that the current track is on.", "record id", "the position of the current track on the record (e.g. track 10)", "the id of the current record", "the library of the currently playing record record.", "next track id", "the id of the current track", "the artist/composer of the current track", "the id of the next track to play.", "the name of the current track.", "next track name", "current track position", "created at", "current track name", "the record number of the current track.", "record library", "current track id", "current track side", "current track artist", "record number"], "queries_nn": ["track", "record", "record id"], "queries_params": ["record id"], "actions_nn": [], "actions_params": []}
{"id": "1712039767", "service_name": "metronet", "triggers_nn": ["panel", "sector", "device"], "triggers_params": ["created at", "date and time event was created.", "which device?", "device index", "which sector?"], "queries_nn": ["device", "list"], "queries_params": ["created at", "the index of the device", "device index", "date and time event was created."], "actions_nn": ["chronothermostat", "panel", "device", "temperature"], "actions_params": ["what user code?", "user code", "what temperature (\u00b0c)?", "which device?", "device index", "temperature"]}
{"id": "1713410138", "service_name": "webehome", "triggers_nn": ["sensor"], "triggers_params": ["subunitid", "open sensor"], "queries_nn": [], "queries_params": [], "actions_nn": ["scenario action set", "copenhagen", "switch"], "actions_params": ["dim level", "select scenario to be started", "subunitid", "accessory(dimmer)", "operationstatus", "status(on/off)", "actionid", "accessory(switch)", "tilt", "position", "copenhagen blind", "operationstatus2"]}
{"id": "1715420572", "service_name": "hive_active_light", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["hive light", "duration"], "actions_params": ["lightbulbname", "which light?", "duration"]}
{"id": "171586962", "service_name": "Confio", "triggers_nn": ["scene"], "triggers_params": ["please select one scene", "select a scene"], "queries_nn": [], "queries_params": [], "actions_nn": ["scene"], "actions_params": ["please select one scene", "select a scene"]}
{"id": "1720471535", "service_name": "withings", "triggers_nn": ["yesterday", "activity", "withing scale", "weight"], "triggers_params": ["distance unit", "weight unit", "elevation unit"], "queries_nn": [], "queries_params": [], "actions_nn": [], "actions_params": []}
{"id": "172148884", "service_name": "humanunited", "triggers_nn": ["bac test"], "triggers_params": ["test result", "reference", "secret"], "queries_nn": ["bac test result"], "queries_params": ["reference"], "actions_nn": ["bac test request"], "actions_params": ["reference", "secret"]}
{"id": "1729502376", "service_name": "myuplink", "triggers_nn": ["alarm", "system"], "triggers_params": ["which system?", "device"], "queries_nn": [], "queries_params": [], "actions_nn": ["water production", "ventilation speed", "system", "home mode"], "actions_params": ["which system?", "device", "smart home mode"]}
{"id": "1735227160", "service_name": "musaic", "triggers_nn": ["player", "music source", "button", "information", "home control scene", "wakeup", "sleep timer finish", "timer fire", "heart", "internet radio", "alarm timer"], "triggers_params": ["which scene?", "home control button", "which preset number?", "musaic internet radio preset", "room player", "alarm name", "which timer?", "which room?"], "queries_nn": ["player", "music source", "button", "heart", "information", "list", "internet radio"], "queries_params": ["which preset number?", "musaic internet radio preset", "room player", "which room?"], "actions_nn": ["alarm sound", "message", "standby", "recall", "language", "player", "room", "url", "voice", "home control scene", "speech", "playback", "volume", "audio", "player queue", "internet radio"], "actions_params": ["spoken language", "alarm volume", "scene on or off?", "which language?", "player volume", "which alarm type?", "what text to convert?", "alarm type", "audio url", "room player", "what volume level?", "scene to select", "which scene?", "scene state", "which audio stream?", "text to convert", "which room?", "audio name", "which preset number?", "preset number", "the audio streams name"]}
{"id": "1735278118", "service_name": "aclu", "triggers_nn": ["aclu feed", "news", "aclu", "search term", "blog post"], "triggers_params": ["the title of the post.", "title", "query", "summary", "post url", "the url of the post.", "published at", "which feed?", "date and time post was published.", "search term", "which feed", "an html summary of the blog post."], "queries_nn": ["aclu feed", "news", "aclu", "search term", "list", "blog post"], "queries_params": ["the title of the post.", "title", "query", "summary", "post url", "the url of the post.", "published at", "which feed?", "date and time post was published.", "search term", "which feed", "an html summary of the blog post."], "actions_nn": [], "actions_params": []}
{"id": "1741683338", "service_name": "myq_devices", "triggers_nn": ["light", "door"], "triggers_params": ["what door to monitor?", "what light was turned off?", "what light was turned on?", "light name", "door name"], "queries_nn": ["time", "event", "door", "instance", "light", "list"], "queries_params": ["light name", "door name", "what light was turned on?", "what door to monitor?"], "actions_nn": ["garage door", "light"], "actions_params": ["light name", "door name", "what is the door name?", "what is the light name?"]}
{"id": "174544682", "service_name": "onedrive", "triggers_nn": ["photo", "expression", "folder", "word", "file contents", "filename", "file", "tag"], "triggers_params": ["the name of the file created.", "is folder", "file url", "the url for the file.", "pattern", "shared by", "path", "the name of the file modifier.", "the name of the file created without the extension.", "search query", "modified by", "whether or not the item shared with you is a folder", "the name of the sharer.", "tag", "query", "modified time", "filename no ext", "the date and time the file was modified.", "filename", "onedrive folder path", "regular expression", "photo tag"], "queries_nn": ["expression", "photo", "folder", "word", "list", "file contents", "filename", "file", "tag"], "queries_params": ["the name of the file created.", "is folder", "file url", "the url for the file.", "pattern", "shared by", "path", "the name of the file modifier.", "the name of the file created without the extension.", "search query", "modified by", "whether or not the item shared with you is a folder", "the name of the sharer.", "tag", "query", "modified time", "filename no ext", "the date and time the file was modified.", "filename", "onedrive folder path", "regular expression", "photo tag"], "actions_nn": ["text file", "path", "file", "url", "folder path", "file name"], "actions_params": ["path", "url", "file url", "file name", "content", "filename", "onedrive folder path"]}
{"id": "1746355578", "service_name": "noonhome", "triggers_nn": ["home scene", "scene", "room"], "triggers_params": ["scene in space", "turned on or off?", "what home scene?", "scene in structure", "which scene in which room?", "lights on"], "queries_nn": ["home scene", "list"], "queries_params": ["what home scene?", "scene in structure"], "actions_nn": ["home scene", "scene", "room", "light"], "actions_params": ["scene in space", "turn on lights in what room?", "turn off lights in what room?", "space", "what home scene?", "scene in structure", "what scene in what room?"]}
{"id": "1749774085", "service_name": "MyCurtains", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["mycurtain app", "product device group", "device", "scene", "drapery system", "drapery", "account", "group", "product"], "actions_params": ["which drapery or curtain?", "which scene would you like to run?", "devices", "scenes", "groups", "move type", "what would you like to move the group to?", "which move command?", "which device group would you like to move?"]}
{"id": "175332887", "service_name": "caltrain", "triggers_nn": ["update", "caltrain"], "triggers_params": ["the entry's url.", "entrytitle", "the entry's title.", "entrypublished", "date entry was created.", "entryurl"], "queries_nn": ["update", "list", "caltrain"], "queries_params": ["the entry's url.", "entrytitle", "the entry's title.", "entrypublished", "date entry was created.", "entryurl"], "actions_nn": [], "actions_params": []}
{"id": "1762024896", "service_name": "line", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["message", "line"], "actions_params": ["target", "photo", "message", "photo url", "recipient"]}
{"id": "1763474320", "service_name": "resideo_total_connect", "triggers_nn": ["total", "security panel", "alarm"], "triggers_params": ["select arming mode to detect", "system", "select your security panel", "select type of alarm", "event type"], "queries_nn": ["total", "security panel", "list", "alarm"], "queries_params": ["select arming mode to detect", "system", "select your security panel", "select type of alarm", "event type"], "actions_nn": ["security panel", "honeywell", "scene", "security system", "mode"], "actions_params": ["select security system and smart scene", "select security system", "select arming mode", "system", "armtype"]}
{"id": "1764428337", "service_name": "epicjobs", "triggers_nn": ["job"], "triggers_params": ["query", "what kind of job opportunity are you looking for?"], "queries_nn": [], "queries_params": [], "actions_nn": [], "actions_params": []}
{"id": "1764524863", "service_name": "active_sleep", "triggers_nn": ["sleep score"], "triggers_params": ["created at", "daily score", "date and time event was created."], "queries_nn": [], "queries_params": [], "actions_nn": [], "actions_params": []}
{"id": "1771193063", "service_name": "nest_cam", "triggers_nn": ["sound event", "camera", "sound", "motion event"], "triggers_params": ["which device?", "nest cam"], "queries_nn": ["time", "camera", "sound", "motion event", "sound event", "list"], "queries_params": ["which device?", "nest cam"], "actions_nn": [], "actions_params": []}
{"id": "1774304173", "service_name": "optus_smart_living", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": [], "actions_params": []}
{"id": "1776123762", "service_name": "ihaus_smoke_detector", "triggers_nn": ["smoke alarm", "test alarm", "smoke detector", "heat alarm"], "triggers_params": ["smoke detector name", "sensor uuid"], "queries_nn": ["smoke alarm", "smoke detector", "list"], "queries_params": ["smoke detector name", "sensor uuid"], "actions_nn": [], "actions_params": []}
{"id": "1780491709", "service_name": "orion", "triggers_nn": ["orion group", "someone", "phrase", "word"], "triggers_params": ["hotwords", "which group?", "what word or phrase?", "user", "group", "who says it?"], "queries_nn": [], "queries_params": [], "actions_nn": ["orion group", "voice message"], "actions_params": ["which group?", "who hears it?", "message", "user", "what to say?", "group"]}
{"id": "1786810214", "service_name": "sensibo", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["set temperature", "c", "fan level", "a", "mode"], "actions_params": ["pod", "which pod?", "fan level", "mode", "temperature"]}
{"id": "1790151865", "service_name": "chatwork", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["post task", "post message"], "actions_params": ["room", "limit", "to ids", "message", "assign to", "days until due date", "contents"]}
{"id": "1791190592", "service_name": "zohocliq_au", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["action post", "message", "chat"], "actions_params": ["title", "card theme", "web url", "external link", "select a chat", "id", "theme", "thumbnail url", "text"]}
{"id": "1793586853", "service_name": "PIXIEPLUS", "triggers_nn": [], "triggers_params": [], "queries_nn": ["pixie device", "list"], "queries_params": ["which pixie device?", "deviceid"], "actions_nn": ["scene"], "actions_params": ["scene id", "home list"]}
{"id": "1795969725", "service_name": "tailwind", "triggers_nn": ["garage door", "door"], "triggers_params": ["garage name"], "queries_nn": ["garage door", "status", "list", "garage door status"], "queries_params": ["garage name"], "actions_nn": ["garage door", "device"], "actions_params": ["garage name"]}
{"id": "1796054048", "service_name": "bitmark", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["datum", "property", "piece", "content"], "actions_params": ["asset", "asset (source url or text)", "property name", "property description"]}
{"id": "1796105588", "service_name": "brilliant_nexus", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["nexus action", "light", "television remote", "device", "nexus", "control", "nexus app", "nexus switch", "air conditioning remote"], "actions_params": ["status", "controls", "device name", "fan speed", "rule name", "rule status", "action status", "mute", "action name", "mode", "temperature"]}
{"id": "1797775194", "service_name": "SamsungRefrigerator", "triggers_nn": ["time", "minute", "refrigerator", "filter", "refrigerator door"], "triggers_params": ["deviceid", "which device?"], "queries_nn": ["time", "minute", "refrigerator", "filter", "refrigerator door", "list"], "queries_params": ["deviceid", "which device?"], "actions_nn": [], "actions_params": []}
{"id": "179823445", "service_name": "discord", "triggers_nn": ["channel", "message"], "triggers_params": ["channel id", "which channel?"], "queries_nn": ["channel"], "queries_params": ["which channel", "channel id"], "actions_nn": ["channel", "message", "ifttt bot"], "actions_params": ["embed description", "embed footer", "message", "embed color", "embed image url", "channel id", "which channel?", "allowable mentions", "embed title"]}
{"id": "1798684620", "service_name": "harmony", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["harmony home activity"], "actions_params": ["which activity?", "activity"]}
{"id": "18076605", "service_name": "WithingsSleep", "triggers_nn": ["exportation", "sleep datum", "withings sleep", "end time parameter", "start", "bed"], "triggers_params": ["end time ", "start date", "device", "which sensor do you want to use?", "start time", "end time", "end date"], "queries_nn": ["sleep datum", "withing", "end time parameter", "instance", "start", "list", "bed"], "queries_params": ["end time ", "start date", "device", "which sensor do you want to use?", "start time", "end time", "end date"], "actions_nn": [], "actions_params": []}
{"id": "180797397", "service_name": "eggminder", "triggers_nn": ["number", "egg count"], "triggers_params": ["count", "which device?", "egg-minder-id", "egg count"], "queries_nn": [], "queries_params": [], "actions_nn": [], "actions_params": []}
{"id": "1808096729", "service_name": "true_energy_norway", "triggers_nn": ["electricity price", "electricity", "hour", "norway"], "triggers_params": ["area", "select region"], "queries_nn": [], "queries_params": [], "actions_nn": [], "actions_params": []}
{"id": "180989009", "service_name": "oticon", "triggers_nn": ["battery", "volume", "hearing aid", "connection", "mobile", "program"], "triggers_params": ["device type of the hearing aid.", "programid", "program id", "battery percentage", "date and time of occurrence.", "occured at", "mute state", "hidevice type", "battery status of the hearing aid in percentage.", "volume level on the hearing aid.", "volume level", "mute state of the hearing aid."], "queries_nn": ["time", "hearing aid", "connection", "mobile", "battery", "list"], "queries_params": ["device type of the hearing aid.", "battery percentage", "date and time of occurrence.", "occured at", "hidevice type", "battery status of the hearing aid in percentage."], "actions_nn": ["iphone", "aid", "volume", "hearing aid", "text", "program", "speech"], "actions_params": ["program id", "volume level", "text to be played by speech", "program id to be set", "volumelevel", "what volume level?", "text tospeech"]}
{"id": "1811151370", "service_name": "garagewifi", "triggers_nn": ["door"], "triggers_params": ["door number", "which door?"], "queries_nn": ["list", "door"], "queries_params": ["door number", "which door?"], "actions_nn": ["garage door"], "actions_params": ["door number", "which door?"]}
{"id": "1815495909", "service_name": "tado_hot_water", "triggers_nn": ["water switch", "\u00b0", "mode", "home mode"], "triggers_params": ["the date and time tado\u2060\u00b0 switched to home mode.", "switched at", "previous mode", "the mode before away mode", "the date and time tado\u2060\u00b0 switched to away mode.", "the mode before home mode"], "queries_nn": [], "queries_params": [], "actions_nn": ["schedule", "water", "water set point", "return control", "location", "user", "\u00b0", "setting"], "actions_params": ["for how long?", "prepare to what temperature?", "termination condition", "temperature"]}
{"id": "1816830335", "service_name": "songkick", "triggers_nn": ["artist", "criterion", "event", "venue", "area"], "triggers_params": ["artist name", "venue name", "location", "username", "enter your songkick username"], "queries_nn": ["time", "artist", "criterion", "event", "area", "venue", "list"], "queries_params": ["artist name", "venue name", "location", "username", "enter your songkick username"], "actions_nn": [], "actions_params": []}
{"id": "1817460578", "service_name": "zuluhood", "triggers_nn": ["issue", "zuluhood", "home", "alarm", "zuluchat"], "triggers_params": ["for which home the zuluchat started", "home", "for which home the alarm is raised"], "queries_nn": ["status", "people", "number", "home", "alarm"], "queries_params": ["is an alarm active in my home?", "home", "how many people are present in my home?"], "actions_nn": ["zuluhood", "zuluchat", "alarm"], "actions_params": ["home", "type", "select home"]}
{"id": "1818132833", "service_name": "meistertask", "triggers_nn": ["section", "task", "project"], "triggers_params": ["created at", "section id", "the name of the project where the task was assigned.", "project name", "section name", "which section?", "the name of the task.", "the name of the person who assigned the task to you.", "task name", "project id", "task url", "assigner name", "which project?", "the name of the section where the task was created.", "the url of the task.", "date and time when the task was assigned."], "queries_nn": ["instance", "task", "list", "project"], "queries_params": ["created at", "the name of the project where the task was assigned.", "project name", "section name", "the name of the task.", "the name of the person who assigned the task to you.", "task name", "project id", "task url", "assigner name", "which project?", "the name of the section where the task was created.", "the url of the task.", "date and time when the task was assigned."], "actions_nn": ["section", "task"], "actions_params": ["task description", "section id", "which section?", "description", "task name"]}
{"id": "1821314232", "service_name": "foobot", "triggers_nn": ["carbon dioxid", "co", "voc", "tap", "compound", "sensor value", "particulate matter", "air quality reading", "pm", "foobot", "temperature sensor value", "humidity sensor value", "knock", "air pollution", "threshold"], "triggers_params": ["above or below?", "temperature threshold value", "voc threshold value", "operator", "which foobot?", "humidity threshold value", "particulate matter threshold value", "device id", "co2 threshold value", "above or below threshold?", "threshold value"], "queries_nn": ["time", "voc", "compound", "particulate matter", "threshold", "pm", "air quality reading", "list", "humidity sensor value", "sensor value"], "queries_params": ["above or below?", "voc threshold value", "operator", "which foobot?", "humidity threshold value", "particulate matter threshold value", "device id", "above or below threshold?", "threshold value"], "actions_nn": [], "actions_params": []}
{"id": "1822075044", "service_name": "finder_yesly", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["brightness", "device", "scenario", "light"], "actions_params": ["brightness", "light", "device", "blind", "scenario"]}
{"id": "1822915515", "service_name": "iotics", "triggers_nn": ["switch", "user"], "triggers_params": ["select the particular iotics device, which when switched on fires the trigger", "select the particular iotics device, which when switched off fires the trigger", "switch on", "switch off"], "queries_nn": ["thing", "list"], "queries_params": [], "actions_nn": ["iotic device", "help", "fan level", "account", "switch", "user"], "actions_params": ["select the iotics device to be turned off", "device switch off", "select the level for the fan", "fan level", "device off", "select the iotics device switch to be off", "select the iotics switch for fan control", "device on", "device switch on", "select the iotics device switch to be on", "select the iotics device to be turned on", "fan device"]}
{"id": "1829340444", "service_name": "space", "triggers_nn": ["nasa post", "news", "day", "nasa", "location", "image", "astronaut exit space", "mar", "astronaut", "day gallery", "astronomy picture", "space station post", "orbit status report", "season change", "space", "curiosity rover", "space station"], "triggers_params": ["today's min temperature in celsius.", "the time of today's sunrise in your local time zone.", "explanationhtml", "atmosphericcondition", "sunriseat", "the entry's title.", "location", "articleexcerpt", "today's barometric pressure in pascals.", "astronautname", "a truncated excerpt consisting of the article's first several words as plain text.", "the person's biography.", "excerpt", "hightempcelsius", "explanation", "reporturl", "a except of the article's first paragraph as plain text.", "the season that just began.", "the mars-sun angle in degrees, which is directly related to the martian season.", "today's min temperature in fahrenheit.", "newseason", "hightempfahrenheit", "launchdate", "choose a location", "solarlongitude", "the name of the new person in space.", "imagesourceurl", "the number of solar days elapsed this martian year.", "the person's title for his or her current mission.", "solardays", "pressure", "the person's country of origin.", "articletitle", "astronauttitle", "articleurl", "date entry was created.", "oldseason", "reporttitle", "the season that just ended.", "publisheddate", "sunsetat", "lowtempcelsius", "url to the astronomy picture of the day.", "lowtempfahrenheit", "the date the person launched into space.", "imagetitle", "the time of today's sunset in your local time zone.", "the entry's url.", "the full description of the image as plain text.", "biographyurl", "country", "today's max temperature in celsius.", "url to the nasa image of the day.", "description", "today's atmospheric condition.", "the full description of the image as html.", "galleryurl", "today's max temperature in fahrenheit."], "queries_nn": [], "queries_params": [], "actions_nn": [], "actions_params": []}
{"id": "1829789558", "service_name": "rescuetime", "triggers_nn": ["rescuetime", "end", "summary", "rescuetime alert", "highlight event", "focustime session", "timezone", "focus time session", "midnight"], "triggers_params": ["neutral time", "date and time event was created.", "utilities time", "the total 'design and composition' time logged.", "a machine readable date that can be used in urls.", "reference and learning time", "the total 'social networking' time logged.", "the total 'very productive' time logged.", "very distracting time", "the date of the summary.", "the total 'productive' time logged.", "total time", "the total 'software development' time.", "all productive time", "the url to the full summary report", "the total 'entertainment' time logged.", "the content of the highlight.", "uncategorized time", "duration", "the total 'distracting' time logged.", "the total 'neutral' time logged.", "social networking time", "report url", "the duration of the focus time session in minutes.", "the total 'productive' and 'very productive' time logged.", "the total 'utilities' time logged.", "the date recorded for the event.", "date for urls", "all distracting time", "the total time logged.", "the total 'distracting' and 'very distracting' time logged.", "created at", "business time", "the total 'business' time logged.", "the total 'shopping' time logged.", "alert", "date and time event was triggered.", "the total 'news' time logged.", "software development time", "the total 'reference and learning' time logged.", "communication and scheduling time", "shopping time", "distracting time", "the total 'communication and scheduling' time logged.", "entertainment time", "news time", "the average productivity score for the day.", "productive time", "description", "design and composition time", "very productive time", "the average productivity score for the week.", "date", "the total 'uncategorized' time logged.", "productivity pulse", "the total 'very distracting' time logged."], "queries_nn": ["time", "rescuetime", "summary", "list", "rescuetime alert", "highlight event", "timezone", "event", "focustime session", "midnight"], "queries_params": ["neutral time", "date and time event was created.", "utilities time", "the total 'design and composition' time logged.", "a machine readable date that can be used in urls.", "reference and learning time", "the total 'social networking' time logged.", "the total 'very productive' time logged.", "very distracting time", "the date of the summary.", "the total 'productive' time logged.", "total time", "the total 'software development' time.", "all productive time", "the url to the full summary report", "the total 'entertainment' time logged.", "the content of the highlight.", "uncategorized time", "duration", "the total 'distracting' time logged.", "the total 'neutral' time logged.", "social networking time", "report url", "the total 'productive' and 'very productive' time logged.", "the duration of the focus time session in minutes.", "the total 'utilities' time logged.", "the date recorded for the event.", "date for urls", "all distracting time", "the total time logged.", "the total 'distracting' and 'very distracting' time logged.", "created at", "business time", "the total 'business' time logged.", "the total 'shopping' time logged.", "alert", "the total 'news' time logged.", "software development time", "the total 'reference and learning' time logged.", "date and time event was triggered.", "communication and scheduling time", "shopping time", "distracting time", "the total 'communication and scheduling' time logged.", "entertainment time", "news time", "the average productivity score for the day.", "productive time", "the average productivity score for the week.", "design and composition time", "very productive time", "description", "date", "the total 'uncategorized' time logged.", "productivity pulse", "the total 'very distracting' time logged."], "actions_nn": ["rescuetime", "time", "focustime session", "rescuetime account", "log", "action log entry", "highlight"], "actions_params": ["what date/time should this offline time end?", "activity name", "duration", "what date/time should this offline time begin?", "highlight type", "what is the name of this activity?", "highlight text", "source", "description", "start time", "activity details", "end time", "are there any additional details for this activity?"]}
{"id": "1843910738", "service_name": "us_independence_day", "triggers_nn": ["time", "july", "year"], "triggers_params": ["time", "time on independence day"], "queries_nn": [], "queries_params": [], "actions_nn": [], "actions_params": []}
{"id": "1846340001", "service_name": "weebly", "triggers_nn": ["form submission", "website", "comment", "sale", "someone post", "blog"], "triggers_params": ["which blog?", "which form?", "site id", "which site?", "form", "blog"], "queries_nn": ["sale", "website", "list"], "queries_params": ["site id"], "actions_nn": ["site", "blog post"], "actions_params": ["body", "title", "blog", "which blog?"]}
{"id": "1847099526", "service_name": "sense_energy_monitor", "triggers_nn": ["house", "device"], "triggers_params": ["which state?", "device id", "which device?", "state"], "queries_nn": ["device", "house", "list"], "queries_params": ["which state?", "device id", "which device?", "state"], "actions_nn": [], "actions_params": []}
{"id": "1853169885", "service_name": "gardena_smart_system", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["time", "schedule", "command", "charging station", "power socket", "sileno", "device", "valve", "watering", "action", "irrigation control", "hold", "operation", "mowing", "irrigation"], "actions_params": ["seconds", "what device?", "for how long?", "device id", "what valve?", "what mower?"]}
{"id": "1853747541", "service_name": "skylinknet", "triggers_nn": ["garage door", "orbit garage door", "sensor", "way switch", "switch", "state", "orbit home app", "sensor battery", "skylinknet", "skylinknet hub", "hub"], "triggers_params": ["hub dev", "which garage door?", "status", "which switch?", "which hub?", "which sensor?", "which state?", "hub id"], "queries_nn": ["time", "orbit garage door", "sensor", "list", "state", "event", "orbit app", "hub"], "queries_params": ["hub dev", "which garage door?", "status", "which hub?", "which sensor?", "which state?", "hub id"], "actions_nn": ["mode", "skylink orbit garage door", "skylinknet hub", "skylink garage door", "orbit garage light", "device", "hub"], "actions_params": ["hub dev", "which garage door?", "hub password", "which mode?", "which hub?", "which device?", "which orbit garage door?", "which garage?", "alarm", "hub id", "key"]}
{"id": "1858545448", "service_name": "honeywell_evohome", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["schedule", "water", "override", "location", "zone", "action", "target temperature", "heating system"], "actions_params": ["duration in", "temperature in", "duration", "temperature scale", "hours", "location", "zone", "quick action", "duration units", "which zone?", "target temperature"]}
{"id": "186278498", "service_name": "npr", "triggers_nn": ["category", "topic", "program", "npr", "story"], "triggers_params": ["category", "select a category"], "queries_nn": ["category", "topic", "npr", "program", "list", "story"], "queries_params": ["category", "select a category"], "actions_nn": [], "actions_params": []}
{"id": "1862981683", "service_name": "intuiface", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["message", "interface asset", "intuiface experience", "web"], "actions_params": ["credential key", "parameter 3", "msg", "api key", "experience name(s)", "message", "xpnames", "parameter 1", "parameter 2", "p2", "player name(s)", "player tag(s)", "tags", "p3", "devicenames", "p1"]}
{"id": "1863116082", "service_name": "histre", "triggers_nn": [], "triggers_params": [], "queries_nn": ["note", "tag", "user"], "queries_params": ["title of the note", "title", "text of the note made by the user", "note", "this is the tag name to query by.", "website link on which the note was made", "tag name", "link"], "actions_nn": ["note", "histre"], "actions_params": ["note", "title", "url"]}
{"id": "1867275136", "service_name": "chiekoo_bell", "triggers_nn": ["chiekoo bell button", "chiekoo bell alert", "subscriber"], "triggers_params": ["which chiekoo bell?", "which chiekoo bell"], "queries_nn": ["list", "chiekoo bell button press"], "queries_params": ["which chiekoo bell?", "which chiekoo bell"], "actions_nn": [], "actions_params": []}
{"id": "1871558580", "service_name": "lightwaverf_lighting", "triggers_nn": ["light"], "triggers_params": ["which light"], "queries_nn": ["list", "light"], "queries_params": ["which light"], "actions_nn": ["light", "use", "button", "device", "switch", "radio control", "unlock", "level"], "actions_params": ["which light", "what dim level", "what dim level?", "which light?"]}
{"id": "1878188480", "service_name": "heatzy", "triggers_nn": ["mode", "auto mode", "device child lock", "device"], "triggers_params": ["which device?", "device"], "queries_nn": ["history", "device turn"], "queries_params": ["which device?", "device"], "actions_nn": ["mode", "auto mode", "unlock", "heat mode", "eco mode", "device"], "actions_params": ["which device?", "device"]}
{"id": "1878476860", "service_name": "go", "triggers_nn": ["program change", "volume", "hearing aid", "connection", "phone", "mobile", "battery"], "triggers_params": ["device type of the hearing aid.", "programid", "program id", "battery percentage", "occured at", "date and time of occurrence.", "mute state", "hidevice type", "battery status of the hearing aid in percentage.", "volume level on the hearing aid.", "volume level", "mute state of the hearing aid."], "queries_nn": ["hearing aid", "battery", "list"], "queries_params": ["device type of the hearing aid.", "battery percentage", "occured at", "date and time of occurrence.", "hidevice type", "battery status of the hearing aid in percentage."], "actions_nn": ["iphone", "aid", "volume", "hearing aid", "text", "program", "speech"], "actions_params": ["program id", "volume level", "text to be played by speech", "program id to be set", "what volume level?", "text tospeech"]}
{"id": "1882498415", "service_name": "alpaca", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["quantity", "order", "side", "symbol", "position", "day market order"], "actions_params": ["qty", "quantity", "symbol", "side"]}
{"id": "1883121933", "service_name": "tracmo", "triggers_nn": ["tracmo", "button", "motion alert"], "triggers_params": ["click pattern", "device id", "which device?"], "queries_nn": ["tracmo", "tracmo re-connection", "list"], "queries_params": ["device id", "which device?"], "actions_nn": [], "actions_params": []}
{"id": "1886920166", "service_name": "misfit", "triggers_nn": ["time", "point goal", "duration", "day", "time today", "target hour", "stats", "goal", "press", "misfit shine log", "misfit shine", "misfit flash button"], "triggers_params": ["number of steps.", "the total points achieved.", "which time", "distance", "points", "target points", "unit for distance. it defaults to miles.", "total points you achieved.", "distance unit", "occurred at", "target hours", "serial no", "the device type which you are using", "total distance in miles.", "the serial number of your misfit flash. you can use it to distinguish the actions you want to perform.", "the time you press the button", "device type", "calories burned yesterday.", "the time you press the button.", "the percentage of goal achieved. e.g. 108 means 108% completed.", "steps", "activity calories burned yesterday.", "the goal in points you set in misfit app.", "calories", "activity calories", "the date of activity.", "percentage of goal achieved", "date", "when do you want to have achieved this goal?", "the device type which you are using."], "queries_nn": ["time", "duration", "target hour", "list", "goal", "sleep", "activity summary", "misfit shine", "misfit flash button"], "queries_params": ["number of steps.", "which time", "distance", "points", "unit for distance. it defaults to miles.", "total points you achieved.", "distance unit", "occurred at", "target hours", "total distance in miles.", "device type", "calories burned yesterday.", "the time you press the button.", "steps", "activity calories burned yesterday.", "calories", "activity calories", "the date of activity.", "date", "when do you want to have achieved this goal?", "the device type which you are using."], "actions_nn": ["photo", "meal", "weight measurement", "misfit"], "actions_params": ["image url", "current weight", "weight", "meal photos url", "weight unit"]}
{"id": "1887713939", "service_name": "clicksend", "triggers_nn": ["sms"], "triggers_params": ["dedicated number"], "queries_nn": [], "queries_params": [], "actions_nn": ["sms message"], "actions_params": ["to", "message", "from"]}
{"id": "1888149115", "service_name": "era", "triggers_nn": ["time", "blog post"], "triggers_params": ["the entry's url.", "entryimageurl", "entrytitle", "url for the first image in the entry. if the entry doesn't have an image will point to a placeholder image.", "the entry's title.", "entrycontent", "the entry's content, may contain html.", "entrypublished", "date entry was created.", "entryauthor", "the entry's author name.", "entryurl"], "queries_nn": ["time", "list", "blog post"], "queries_params": ["the entry's url.", "entryimageurl", "entrytitle", "url for the first image in the entry. if the entry doesn't have an image will point to a placeholder image.", "the entry's title.", "entrycontent", "the entry's content, may contain html.", "entrypublished", "date entry was created.", "entryauthor", "the entry's author name.", "entryurl"], "actions_nn": [], "actions_params": []}
{"id": "1890666084", "service_name": "pg_e", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": [], "actions_params": []}
{"id": "1892194662", "service_name": "auroome", "triggers_nn": [], "triggers_params": [], "queries_nn": ["user scene list"], "queries_params": [], "actions_nn": ["light brightness", "scene", "room", "light", "roome scene", "roome", "color"], "actions_params": ["brightness", "room", "sense", "scene", "mode", "color"]}
{"id": "1894070", "service_name": "mystrom", "triggers_nn": ["temperature threshold", "power usage", "button", "motion sensor", "switch", "state", "movement", "brightness threshold", "threshold"], "triggers_params": ["which button?", "which switch?", "power consumption threshold", "usage above or below threshold?", "limit", "threshold", "which device?", "temperature above or below?", "type", "mac", "which motion detector?", "brightness below or above threshold?", "which event type?", "brightness threshold", "what event type?"], "queries_nn": ["button", "event", "list"], "queries_params": ["which button?", "which event type?", "type", "mac"], "actions_nn": ["mystrom device", "mystrom wifi bulb", "scene", "color"], "actions_params": ["which bulb?", "which scene?", "which device?", "id", "which color?", "color"]}
{"id": "1897845352", "service_name": "hc_hob", "triggers_nn": ["clock timer", "child lock", "heating", "cooktop", "cooking sensor battery"], "triggers_params": ["which cooktop?", "ha id"], "queries_nn": ["cooking sensor battery", "cooktop", "child lock", "list"], "queries_params": ["which cooktop?", "ha id"], "actions_nn": [], "actions_params": []}
{"id": "190007642", "service_name": "camio", "triggers_nn": ["motion", "criterion", "camera", "camio app", "power"], "triggers_params": ["zone", "choose a camera", "choose a specific direction of motion to look for", "camera", "choose which camera you'd like to receive notifications for", "choose a color to look for", "objects detected", "choose a specific zone to look for motion", "choose a specific object to look for", "direction", "color"], "queries_nn": ["camera", "camio app", "list", "power"], "queries_params": ["camera", "choose which camera you'd like to receive notifications for"], "actions_nn": ["motion notification", "camio app", "action", "camera"], "actions_params": ["camera(s) to start recording for", "camera", "camera(s) to stop recording for"]}
{"id": "190093028", "service_name": "ios_reading_list", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["item", "reading list"], "actions_params": ["preview text", "title", "url"]}
{"id": "191353965", "service_name": "shopyourway", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["shopyourway catalog", "shopyourway feed", "item"], "actions_params": ["item image url", "title", "item title", "catalog name", "image", "content", "item source url", "which catalog?", "item description", "source link"]}
{"id": "1921423671", "service_name": "neato", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["robot vacuum", "base", "pause cleaning", "resume", "neato"], "actions_params": ["select a robot"]}
{"id": "1926111131", "service_name": "my_leviton", "triggers_nn": ["status", "fi device", "leviton scene", "home", "dw4bc button", "leviton activity", "decora", "wi", "leviton residence", "leviton room"], "triggers_params": ["which switch?", "which scene?", "which activity?", "which button?", "name", "which device?", "number", "which residence?", "which room?"], "queries_nn": ["time", "fi device", "history", "instance", "list", "decora", "wi", "leviton scene run", "leviton room"], "queries_params": ["name", "which device?", "which room?", "which scene?"], "actions_nn": ["fi device", "leviton scene", "home", "value", "leviton activity", "leviton fan speed controller", "speed", "device", "decora", "off", "light blink", "wi", "fi", "leviton room", "leviton residence"], "actions_params": ["status", "how long would you like the light to blink?", "which status?", "would you like to toggle the device, or turn it on or off?", "which scene?", "which activity?", "which light?", "name", "speed", "which device?", "duration", "power", "which speed?", "which residence?", "what level would you like to dim or brighten to?", "level", "which room?"]}
{"id": "1928501015", "service_name": "flapz_board", "triggers_nn": [], "triggers_params": [], "queries_nn": ["account", "board", "detail"], "queries_params": ["is public", "only return boards that are public"], "actions_nn": ["datum", "flapz board", "update datum row", "text", "row"], "actions_params": ["board row 4", "board title row", "board action url", "which flapz board do you want to update?", "what do you want to show on this row?", "board row 3", "board row 1", "row data", "board id", "board title", "select board row", "board row 2"]}
{"id": "1933872977", "service_name": "tplink_router", "triggers_nn": ["tp", "device disconnect", "device", "link router"], "triggers_params": ["which router?", "which device?", "router name", "device name"], "queries_nn": ["time", "list", "tp", "link router", "device disconnect", "device"], "queries_params": ["which router?", "which device?", "router name", "device name"], "actions_nn": ["home device", "connection", "duration", "shortcut", "default", "activity", "device", "type", "deco m9", "tp", "action", "hour", "link router", "network"], "actions_params": ["device name", "duration of priority", "which device?", "router name", "online activity name", "which router?", "which shortcut?", "qos mode name", "shortcut name"]}
{"id": "1939002482", "service_name": "zeeq", "triggers_nn": ["sleep", "button", "zeeq app", "zeeq button #"], "triggers_params": ["created at", "date and time event was created."], "queries_nn": ["sleep", "zeeq app", "list", "button press"], "queries_params": ["created at", "date and time event was created."], "actions_nn": ["sleep datum", "email account", "day", "folk", "pillow", "report", "zeeq account", "zeeq", "thought", "rem", "fun", "fit"], "actions_params": ["email"]}
{"id": "1939469805", "service_name": "brilliant_smart", "triggers_nn": ["motion", "fingerprint identification", "sound", "password", "device", "camera", "card", "group", "light", "water sound", "person", "someone input", "lock", "water leak", "user", "door sensor", "pir", "electricity", "threshold"], "triggers_params": ["which device/group?", "which device"], "queries_nn": ["time", "fingerprint identification", "sound", "password", "device", "list", "person", "user", "pir", "water leak", "camera", "lock", "card", "door sensor", "group"], "queries_params": ["which device/group?", "which device"], "actions_nn": ["ac", "choosing", "brightness", "temperature", "light", "controller", "ir", "device", "scene", "heat mode", "oscillation function", "fan", "group", "mode", "color"], "actions_params": ["light color", "which device", "brightness", "temperature", "turn on first?", "turn on first", "light brightness", "scene", "ac temperature", "which device/group?", "which scene", "color"]}
{"id": "1941093161", "service_name": "virtualbuttons", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["alexa", "button"], "actions_params": ["which virtual button do you want to press?", "virtual button"]}
{"id": "1944971120", "service_name": "ewelink", "triggers_nn": ["zigbee door sensor", "zigbee motion sensor", "rf bridge", "current", "colour", "switch", "camera", "water level", "child lock status change", "voltage", "light", "ewelink", "alarm", "door sensor", "apperance", "fan", "water leak sensor", "leak", "threshold", "motion", "brightness", "diffuser", "channel switch", "motion event", "color temperature", "device", "curtain", "state", "fanlight", "light brightness", "thermostat", "humidity", "thermostat mode change", "support", "zigbee", "temperature", "status", "channel plug"], "triggers_params": ["above or below?", "set brightness", "set r colour value", "which thermostat? ", "which smart dimmer?", "fan or light?", "which 1-channel switch?", "choose color temperature percent", "voltage trigger device", "wifi door sensor query", "which door sensor?", "plugs3 outlet query", "plugs3 query", "thermostat onoff act query", "fan or light", "set b colour value", "switches2 outlet query", "open or closed?", "plugs4 query", "which alarm?", "zigbee motion sensor query", "click or press", "humidity target", "light brightness query", "light brightness trigger device", "plug query", "iot camera query", "enable or disable child lock? ", "turned on or off?", "switches3 query", "which mode\uff1f", "voltage target", "open or close", "zigbee flood query", "zigbee switch query", "set g colour value", "childlock onoff act query", "which 3-channel switch?", "which channel?", "which camera?", "humidity trigger device", "which 4-channel switch?", "threshold temperature (\u2103)", "temperature target", "which thermostat?", "plugs2 outlet query", "aroma query", "which 1-channel plug?", "plugs4 outlet query", "which 2-channel switch?", "which device?", "fanlight query", "electric current threshold(a)", "which status?", "which device\uff1f", "is motion", "plugs2 query", "choose device", "switches4 outlet query", "electric current trigger device", "switches2 query", "thermostat query", "which 2-channel plug?", "switches3 outlet query", "voltage threshold(v)", "which 4-channel plug?", "electric curtain devices query", "which 3-channel plug?", "onoff act query", "threshold brightness", "threshold humidity (%)", "temperature trigger device", "workmode act query", "electric current target", "light switch trigger device", "switch query", "above or below", "brightness act query", "onoff act", "rfbridge alarm query", "which action?", "zigbee door sensor query", "motion detected or not?", "dimmer light query", "switches4 query"], "queries_nn": ["zigbee door sensor", "brightness", "rf bridge", "channel switch", "diffuser", "list", "device", "dimmer", "event", "water level", "humidity", "temperature", "time", "status", "light", "channel plug", "ewelink support", "recent event", "ewelink", "alarm", "water leak sensor", "leak", "threshold"], "queries_params": ["above or below?", "humidity trigger device", "plugs2 query", "switches4 outlet query", "switches2 query", "plug query", "which 2-channel plug?", "switches3 outlet query", "which 4-channel plug?", "temperature target", "which smart dimmer?", "which 3-channel plug?", "onoff act query", "turned on or off?", "threshold brightness", "which 1-channel switch?", "which 4 channels switch?", "plugs2 outlet query", "aroma query", "which 1-channel plug?", "threshold humidity (%)", "temperature trigger device", "which 2 channels switch?", "switches3 query", "light switch trigger device", "plugs3 outlet query", "plugs4 outlet query", "plugs3 query", "switch query", "above or below", "open or close", "which device?", "switches2 outlet query", "threshold temperature (?)", "zigbee flood query", "brightness act query", "plugs4 query", "rfbridge alarm query", "which alarm?", "which status?", "zigbee door sensor query", "which 3-channel switch?", "dimmer light query", "which channel?", "humidity target", "switches4 query"], "actions_nn": ["brightness", "rf bridge", "fan speed", "diffuser", "channel switch", "button", "program", "color temperature", "curtain", "fanlight", "camera", "press", "child lock", "support", "light", "manual", "thermostat mode", "channel plug", "color", "ewelink", "off", "alarm", "fan", "ewelink thermostat", "percentage"], "actions_params": ["which camera?", "which 4-channel switch?", "plugs2 query", "light brightness query", "switches4 outlet query", "set r color", "choose device", "switches2 query", "plug query", "thermostat query", "which 2-channel plug?", "switches3 outlet query", "percentage 0to100 query", "which fanlight?", "set brightness", "which 4-channel plug?", "set percentage", "which thermostat? ", "light color green", "light color temperature action device", "which smart dimmer?", "which 3-channel plug?", "onoff act query", "electric curtain devices query", "fan or light?", "set b color", "turned on or off?", "light color action device", "set color temperature", "which 1-channel switch?", "which thermostat?", "plugs2 outlet query", "aroma query", "light brightness action device", "light color red", "which 1-channel plug?", "switches3 query", "workmode act query", "plugs3 outlet query", "switch query", "plugs3 query", "plugs4 outlet query", "light color temperature query", "which 2-channel switch?", "thermostat onoff act query", "which device?", "switches2 outlet query", "fan or light", "set g color", "fanlight query", "rfbridge button query", "turn on or off?", "brightness act query", "plugs4 query", "light color blue", "onoff act", "which mode?", "choose action", "which action?", "childlock onoff act query", "which 3-channel switch?", "dimmer light query", "which rf bridge remote button?", "which channel?", "childlock on or off\uff1f", "light switch action device", "switches4 query"]}
{"id": "1948099947", "service_name": "moodo", "triggers_nn": ["purifier mode", "diffuser mode", "air device", "moodo", "moodo device", "device"], "triggers_params": ["favorite name", "moodo air device name", "favorite", "moodo device name", "box"], "queries_nn": ["list", "fragrance capsule", "moodoair device", "moodo device", "device", "air capsule"], "queries_params": ["moodo device name", "favorite", "box", "favorite name"], "actions_nn": ["time", "moodo", "period", "air", "air purifying", "fan power", "fragrance", "moodo air device"], "actions_params": ["favorite name", "moodo air device name", "favorite", "moodo device name", "stop moodo in", "box", "duration minutes"]}
{"id": "1951835216", "service_name": "savetheproof", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["user", "savetheproof account", "certificate"], "actions_params": ["created at", "createdat", "tweetembedcode", "linktotweet", "username", "tweet embed code", "link to tweet", "description", "text", "user name"]}
{"id": "1954388627", "service_name": "vesync", "triggers_nn": ["device state"], "triggers_params": ["select state", "select device", "device", "state"], "queries_nn": ["device state change", "list"], "queries_params": ["select state", "select device", "device", "state"], "actions_nn": ["device"], "actions_params": ["select state", "select device", "device", "state"]}
{"id": "1956131865", "service_name": "clinicaltrials", "triggers_nn": ["time", "cancer", "asthma", "diabetes", "trial", "day"], "triggers_params": ["filter by keyword (optional)", "query"], "queries_nn": ["time", "cancer", "asthma", "diabetes", "trial", "day", "list"], "queries_params": ["filter by keyword", "query"], "actions_nn": [], "actions_params": []}
{"id": "1962685601", "service_name": "fulltime_fullarm", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["scene"], "actions_params": ["my scene", "scene"]}
{"id": "1969755261", "service_name": "day_one", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["journal entry", "journal"], "actions_params": ["body", "longitude", "placename", "image url", "image", "which journal?", "tags", "latitude", "place name", "journal id"]}
{"id": "1972740002", "service_name": "android_wear", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["android wear device", "notification"], "actions_params": ["message", "image url", "notification"]}
{"id": "1973807469", "service_name": "emfit", "triggers_nn": ["event", "device", "bed exit"], "triggers_params": ["event type", "device"], "queries_nn": [], "queries_params": [], "actions_nn": [], "actions_params": []}
{"id": "197529995", "service_name": "xtactor", "triggers_nn": ["command", "matching shortname", "ifttt", "xtactor wristband"], "triggers_params": ["ingredients", "shortname"], "queries_nn": [], "queries_params": [], "actions_nn": ["message", "xtactor"], "actions_params": ["vibrate message", "vibration message"]}
{"id": "1978418576", "service_name": "particle", "triggers_nn": ["value", "function", "device", "something", "device change state", "particle device change", "event", "check"], "triggers_params": ["value", "is (status of your device)", "if (event name)", "core variable", "topic", "comparison value (value to test against)", "core name", "input", "comparison value", "if (device name or id)", "if (variable name)", "core function", "is (event contents)", "if the output value of (function name)", "when you send it (value)", "status", "compare", "is (test operation)", "device name or id", "contents"], "queries_nn": ["event", "particle device change", "value", "device", "list", "state", "something"], "queries_params": ["status", "topic", "comparison value (value to test against)", "value", "core name", "device name or id", "is (status of your device)", "compare", "contents", "core variable", "is (event contents)", "if (device name or id)", "is (test operation)", "if (event name)", "if (variable name)"], "actions_nn": ["particle.subscribe", "event", "action", "world", "function", "device"], "actions_params": ["topic", "core function", "with input (function input)", "then publish (event name)", "input", "the event includes (data)", "is this a public or private event?", "then call (function name)", "public", "contents"]}
{"id": "1984227902", "service_name": "streamr_network", "triggers_nn": ["stream event"], "triggers_params": ["streamr stream id"], "queries_nn": ["stream event"], "queries_params": ["streamr stream id"], "actions_nn": ["data point", "stream"], "actions_params": ["streamr stream id", "publish event data"]}
{"id": "1989345590", "service_name": "heatmiser", "triggers_nn": ["neohub", "temperature rise", "contact sensor", "home mode", "mode", "heatmiser device", "battery", "temperature drop", "threshold"], "triggers_params": ["created at", "temperature threshold", "roomname", "time the trigger was fired.", "date and time event was created.", "what temp", "which sensor", "which room", "which temperature?", "which rooms", "which room?"], "queries_nn": [], "queries_params": [], "actions_nn": ["timer boost", "neoplug", "neohub", "profile", "heatmiser neo recipe", "thermostat", "heatmiser timer", "heatmiser thermostat", "standby mode", "temperature hold", "mode", "temperature"], "actions_params": ["which neoplug?", "which profile", "for which room", "how many hours", "what temp", "which stat", "which thermostat?", "to what temp", "which neo plug", "for how long", "recipe name", "which timer", "duration?", "which room", "which profile?", "which temperature?", "which timer?", "which room?"]}
{"id": "1992128338", "service_name": "reposit", "triggers_nn": ["grid", "time period", "power"], "triggers_params": ["created at", "date and time event was created.", "stop checking every day at", "start time", "end time", "start checking every day at"], "queries_nn": ["grid", "list", "time period", "power"], "queries_params": ["created at", "date and time event was created.", "stop checking every day at", "start time", "end time", "start checking every day at"], "actions_nn": [], "actions_params": []}
{"id": "199559970", "service_name": "ge_appliances_geospring", "triggers_nn": ["water heater", "boost mode", "mode", "air filter", "heat pump mode", "vacation mode", "hybrid mode", "% dirty"], "triggers_params": ["which appliance?", "applianceid"], "queries_nn": [], "queries_params": [], "actions_nn": ["ge water heater", "number", "day", "operating mode", "vacation mode", "temperature"], "actions_params": ["vacation-days", "which appliance?", "set-temp", "applianceid", "temperature (\u00b0f)", "waterheater-mode", "operating mode", "number of days"]}
{"id": "2001190380", "service_name": "epion", "triggers_nn": ["co", "humidity", "level", "device", "threshold", "temperature"], "triggers_params": ["temperature threshold", "co\u2082 threshold", "humidity threshold", "device", "what device should this trigger fire for?", "threshold"], "queries_nn": ["epion air", "measurement", "epion air device"], "queries_params": ["name", "device", "the name of the epion air device.", "the internal identifier of the epion air device.", "device id"], "actions_nn": ["brightness", "device"], "actions_params": ["what brightness level should the device led be changed to?", "for which device would you like to alter the led brightness?", "device", "brightness"]}
{"id": "2004462912", "service_name": "dod", "triggers_nn": ["defense", "news article", "photo essay", "department"], "triggers_params": ["filter for keyword (optional)", "query"], "queries_nn": ["defense", "news article", "list", "department"], "queries_params": ["filter for keyword", "query"], "actions_nn": [], "actions_params": []}
{"id": "2004652503", "service_name": "rust", "triggers_nn": ["player", "rust", "title", "game", "body text", "rust server", "teammate", "alarm", "keyword"], "triggers_params": ["the image url of the server that the notification came from.", "the 64-bit steamid of the player that killed you, or empty if you were not killed by a player.", "the 64-bit steamid of the player that killed you.", "title", "server url", "the 64-bit steamid of the player that just came online.", "target name", "server name", "the name of the player that killed you.", "the logo image url of the server that the notification came from.", "the name of the server that the notification came from.", "keyword", "the website url of the server that the notification came from.", "date and time the alarm was triggered.", "target steam id", "created at", "body", "server image url", "the name of the player, npc, or entity that killed you.", "server desc", "server logo url", "the title text of the alarm.", "the name of the player that just came online.", "the description of the server that the notification came from.", "the description text of the alarm."], "queries_nn": ["rust", "notification"], "queries_params": ["type"], "actions_nn": [], "actions_params": []}
{"id": "2014680984", "service_name": "sfmta", "triggers_nn": ["blog post", "sfmta"], "triggers_params": ["the entry's url.", "entryimageurl", "entrytitle", "url for the first image in the entry. if the entry doesn't have an image will point to a placeholder image.", "the entry's title.", "entrycontent", "the entry's content, may contain html.", "entrypublished", "date entry was created.", "entryauthor", "the entry's author name.", "entryurl"], "queries_nn": ["list", "blog post", "sfmta"], "queries_params": ["the entry's url.", "entryimageurl", "entrytitle", "url for the first image in the entry. if the entry doesn't have an image will point to a placeholder image.", "the entry's title.", "entrycontent", "the entry's content, may contain html.", "entrypublished", "date entry was created.", "entryauthor", "the entry's author name.", "entryurl"], "actions_nn": [], "actions_params": []}
{"id": "2015115449", "service_name": "viva", "triggers_nn": ["motion", "family member", "device", "alarm functionality", "sleep", "battery level", "subscription", "smoke", "temperature", "sensor", "light bulb change brightness", "door", "luminance", "glass breakage", "everyone", "house", "water leak", "alarm", "light bulb change color"], "triggers_params": ["time", "device address", "date and time event was created.", "which door?", "which device?", "event", "name of event"], "queries_nn": ["detection", "sensor", "history", "door", "someone", "list", "device", "battery level", "querty", "temperature"], "queries_params": ["time", "device address", "date and time event was created.", "which door?", "which device?", "event", "name of event"], "actions_nn": ["brightness", "door", "name", "device", "alarm functionality", "house", "bulb", "unlock", "alarm", "subscription", "color"], "actions_params": ["device address", "which door?", "which device?", "which brightness", "use partial alarm?", "supported?", "which color?", "partial", "which brightness?", "which color"]}
{"id": "2015275588", "service_name": "slickdeals", "triggers_nn": ["deal", "frontpage", "slickdeal"], "triggers_params": ["the entry's url.", "entryimageurl", "entrytitle", "url for the first image in the entry. if the entry doesn't have an image will point to a placeholder image.", "the entry's title.", "entrycontent", "the entry's content, may contain html.", "entrypublished", "date entry was created.", "entryauthor", "the entry's author name.", "entryurl"], "queries_nn": [], "queries_params": [], "actions_nn": [], "actions_params": []}
{"id": "2015374932", "service_name": "vybit", "triggers_nn": [], "triggers_params": [], "queries_nn": ["placeholder query", "vybit", "query"], "queries_params": ["foo is a placeholder ingredient.", "foo"], "actions_nn": ["vybit account", "vyb"], "actions_params": ["image url - an optional image to include with the notification (overrides the default image for the vyb)", "imageurl", "message", "log - optional content to append to the vyb notification log. hyperlinks are supported.", "vyb", "linkurl", "log", "link url - an optional destination link to include with the notification (overrides the default link for the vyb)", "message - an optional message to include with the notification (overrides the default message for the vyb)"]}
{"id": "2016187476", "service_name": "ge_appliances_dryer", "triggers_nn": ["minute", "ge dryer", "end", "cycle", "dryer cycle"], "triggers_params": ["which appliance?", "applianceid"], "queries_nn": ["time", "minute", "ge dryer", "end", "dryer cycle", "cycle", "list"], "queries_params": ["which appliance?", "applianceid"], "actions_nn": ["cycle", "tumble", "dryer"], "actions_params": ["which appliance?", "applianceid"]}
{"id": "2018753238", "service_name": "netatmo_thermostat", "triggers_nn": ["home exit", "home exit frost", "home", "room", "frost", "device", "guard mode", "battery", "mode"], "triggers_params": ["home room id", "home id", "home device id", "which device?", "which home?", "which room?"], "queries_nn": ["mode", "room", "query fire"], "queries_params": ["home room id", "which room?"], "actions_nn": ["time", "schedule", "home", "frost", "default schedule", "guard mode", "thermostat", "mode"], "actions_params": ["days", "for how many minutes?", "home room id", "hours", "temperature in celsius", "for how many hours?", "home id", "home schedule id", "which schedule?", "for how many days?", "which home?", "minutes", "which room?", "temperature"]}
{"id": "2022082952", "service_name": "elektrum", "triggers_nn": ["electricity price", "threshold", "electricity price change"], "triggers_params": ["side", "fire when above or below price threshold (above, below)", "price threshold (eur/mwh)", "area", "threshold"], "queries_nn": ["result", "ahead", "pool", "day", "auction market", "ahead price"], "queries_params": ["area"], "actions_nn": [], "actions_params": []}
{"id": "2023272351", "service_name": "gogogate", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["garage door"], "actions_params": ["door number", "which door?"]}
{"id": "2024181051", "service_name": "google_contacts", "triggers_nn": ["group", "google contact"], "triggers_params": ["address of the contact.", "the full name of the contact.", "notes", "birthday", "which group?", "the groups the contact belongs to.", "contact url", "email", "the url to the contact on google.", "the email address of the contact.", "the birthday of the contact.", "which group", "created at", "job title", "phone number", "any notes associated with the contact.", "the job title of the contact.", "name", "the company of the contact.", "company", "address", "date and time contact was added.", "groups", "the phone number of the contact."], "queries_nn": ["time", "group", "list", "google contact"], "queries_params": ["address of the contact.", "the full name of the contact.", "notes", "birthday", "which group?", "the groups the contact belongs to.", "contact url", "email", "the url to the contact on google.", "the email address of the contact.", "the birthday of the contact.", "which group", "created at", "job title", "phone number", "any notes associated with the contact.", "the job title of the contact.", "name", "the company of the contact.", "company", "address", "date and time contact was added.", "groups", "the phone number of the contact."], "actions_nn": ["contact", "google contact"], "actions_params": ["which group", "full name", "job title", "phone number", "phonenumber", "which group?", "upload photo", "photo url", "notes", "email", "company", "address"]}
{"id": "2025456317", "service_name": "meross", "triggers_nn": ["garage door", "sensor temperature range", "sensor humidity range", "water leak sensor status change", "meross device", "mode", "humidifier"], "triggers_params": ["temperatureabove", "temperaturebelow", "device", "above", "below", "humiditybelow", "humidityabove", "set", "hubuuid", "mode", "uuid"], "queries_nn": ["garage door", "mode", "event", "sensor temperature range", "meross device", "list", "humidifier"], "queries_params": ["temperatureabove", "temperaturebelow", "device", "above", "below", "hubuuid", "mode", "uuid"], "actions_nn": ["garage door", "thermostat v3", "brightness", "meross device", "color", "color temperature", "curtain", "humidifier", "bulb", "scene", "position", "thermostat", "mode", "temperature"], "actions_params": ["custom temperature", "brightness", "light", "color", "color temperature", "manual temperature", "device", "kelvin", "scene", "position", "economy temperature", "comfort temperature", "mode", "uuid"]}
{"id": "2025463872", "service_name": "smarter", "triggers_nn": ["item", "temperature", "ikettle", "coffee", "fridge door", "fridgecam", "brewing", "battery", "fridge"], "triggers_params": ["which kettle?", "coffee", "fridgecam", "which fridgecam?", "kettle", "which coffee machine?"], "queries_nn": ["brewing", "query", "ikettle", "coffee", "list", "fridge door"], "queries_params": ["which kettle?", "coffee", "fridgecam", "which fridgecam?", "kettle", "which coffee machine?"], "actions_nn": ["ikettle", "brew coffee"], "actions_params": ["kettle id", "formula mode", "boil temperature", "strength", "which kettle?", "number of cups", "cool to", "formula mode - cool temperature", "keep warm", "keep warm time", "grind enable", "grinder", "coffee maker", "coffee id", "enable formula mode"]}
{"id": "202568060", "service_name": "MSmartAC", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["auto", "speed", "eco mode", "air conditioner", "air conditioner temperature setpoint", "action", "fan", "operating mode"], "actions_params": ["command", "appliancelist", "what temperature?", "which appliance?", "fan mode", "operating mode", "turn on or off?"]}
{"id": "2027750782", "service_name": "wirelesstag", "triggers_nn": ["kumoapp.log call", "pir kumosensor", "reed sensor", "wirelesstag app", "humidity range", "option screen", "time", "return", "light", "tag sens", "power outage", "type", "internet connection problem", "water sensor tag transition", "water sensor tag", "movement", "threshold", "range", "water", "light intensity return", "tip", "temperature option screen", "window", "server", "temperature return", "state", "motion detection mode", "log message", "humidity", "kumoapp", "circuit", "motion sensor tag", "temperature", "tag", "internet connection", "sensor", "moisture monitoring", "period", "lux update", "door", "water state", "tag manager"], "triggers_params": ["math expression", "type", "mac", "math", "uuid", "kumoapp instance", "appid", "tag manager", "tag"], "queries_nn": ["window sensor", "lux", "kumoapp.log call", "pir kumosensor", "list", "reed sensor", "wirelesstag app", "hour", "option screen", "time", "light", "tag sens", "power outage", "internet connection problem", "type", "water sensor tag transition", "movement", "motion state", "threshold", "motion", "range", "tip", "pir sensor", "temperature option screen", "window", "server", "state", "motion detection mode", "humidity", "circuit", "kumoapp", "log message", "tag manager", "tag", "temperature", "internet connection", "sensor", "moisture monitoring", "lux update", "door", "period", "water state", "motion sensor tag", "close"], "queries_params": ["serial", "which tag/sensor?", "math expression", "type", "mac", "math", "uuid", "kumoapp instance", "appid", "tag manager", "tag"], "actions_nn": ["brightness", "temperature monitoring", "motion sensor", "ambient light intensity monitoring", "tag beeping", "humidity", "wemo device", "kumoapp", "action arm motion sensor", "user account", "update", "temperature", "tag", "moisture monitoring", "light", "action"], "actions_params": ["upper threshold in degree fahrenheit", "thlow", "kumoapp to stop", "upper threshold in lux", "upper threshold in %", "lower threshold in %", "lower threshold in lux", "doormodesetclosed", "thhigh", "lower threshold in degree fahrenheit", "kumoapp to run", "appid", "beepduration", "number of times to beep", "tagid", "define closed angle?", "tag"]}
{"id": "2036190150", "service_name": "dormakabaTAS", "triggers_nn": ["ta door lock"], "triggers_params": ["which lock?", "lockid"], "queries_nn": [], "queries_params": [], "actions_nn": [], "actions_params": []}
{"id": "2045461002", "service_name": "WattuneedBatteryUP", "triggers_nn": ["value", "device metric value", "device", "condition"], "triggers_params": ["from when?", "second trigger condition", "metric 1", "value 1", "to hr", "condition 1", "how often?", "condition 2", "trigger value", "from hr", "value 2", "second trigger value", "how many times per day?", "trigger condition", "which device?", "device", "frequency", "periodicity", "second metric", "until when?", "metric 2", "metric"], "queries_nn": ["minute", "battery reading", "list", "weather forecast condition", "installation location", "time window condition", "match", "energy meter reading", "hour"], "queries_params": ["from when?", "condition value", "second forecast option", "metric 1", "to hr", "value 1", "condition 1", "how often?", "condition 2", "duration", "from hr", "value 2", "forecast option", "which installation?", "duration in hours", "which device?", "device", "second condition", "periodicity", "installation", "until when?", "condition", "second condition value", "metric 2"], "actions_nn": [], "actions_params": []}
{"id": "2054768296", "service_name": "LinkJapan_eHome", "triggers_nn": ["device"], "triggers_params": ["power state", "which device?", "deviceinfo", "power"], "queries_nn": [], "queries_params": [], "actions_nn": ["windspeed", "brightness", "temperature", "light", "channel", "device", "volume", "action", "stb", "tv", "pause", "eremote mini", "eremote", "mode", "action control"], "actions_params": ["what mode?", "adjust brightness", "powercontrol changepowerstate string", "wind speed", "adjust volume", "volumecontrol setmute string", "what temperature?", "volumecontrol adjustvolume num", "channelcontrol changechannel num", "adjust channel", "which device?", "windspeedcontrol setwindspeed string", "deviceinfo", "channelcontrol adjustchannel num", "brightnesscontrol adjustbrightness num", "thermostatcontrol setmode string", "thermostatcontrol setfixedtargettemperature num", "mute adjustment", "on or off?", "channel number"]}
{"id": "2059472869", "service_name": "followupcc", "triggers_nn": ["reminder"], "triggers_params": ["created at", "the subject of the reminder.", "body", "from address", "the email address the reminder will be sent to", "the address the reminder will be sent to.", "the address that created the reminder.", "web url", "the date and time the reminder was created.", "send reminder to", "date and time the reminder was created.", "the direct link to the reminder on followup.cc.", "starts at display time", "the html body of the email reminder.", "the email address that created the reminder.", "the time the reminder is due to be sent.", "subject"], "queries_nn": ["time", "list", "reminder"], "queries_params": ["created at", "the subject of the reminder.", "body", "from address", "the email address the reminder will be sent to", "the address the reminder will be sent to.", "the address that created the reminder.", "web url", "the date and time the reminder was created.", "send reminder to", "date and time the reminder was created.", "the direct link to the reminder on followup.cc.", "starts at display time", "the html body of the email reminder.", "the email address that created the reminder.", "the time the reminder is due to be sent.", "subject"], "actions_nn": ["followup.cc calendar", "action schedule", "reminder"], "actions_params": ["body", "to", "subject", "from"]}
{"id": "2062016467", "service_name": "blink", "triggers_nn": ["motion", "blink camera"], "triggers_params": ["camera", "which camera?"], "queries_nn": ["motion", "blink camera", "list"], "queries_params": ["camera", "which camera?"], "actions_nn": ["blink system"], "actions_params": ["which system?", "network"]}
{"id": "2063324345", "service_name": "swannsecurity", "triggers_nn": ["pet", "motion", "security device", "sound", "face", "battery", "swann", "person", "vehicle", "swann video doorbell button", "swann security device"], "triggers_params": ["face name", "choose device", "which face to detect?", "on device id", "choose a door bell"], "queries_nn": [], "queries_params": [], "actions_nn": [], "actions_params": []}
{"id": "2072225167", "service_name": "qapital", "triggers_nn": ["friend", "goal", "method", "round", "pleasure", "up", "invitation"], "triggers_params": ["created at", "image url", "date and time event was created.", "amount saved.", "goal name", "the name of the new goal.", "which goal?", "goal", "amount", "method", "name of the goal saved to.", "the url to the selected goal image.", "method used to save.", "which method?", "save method"], "queries_nn": ["time", "friend", "pleasure", "instance", "up", "list", "invitation", "goal", "method", "round"], "queries_params": ["created at", "image url", "date and time event was created.", "amount saved.", "goal name", "the name of the new goal.", "method", "amount", "name of the goal saved to.", "the url to the selected goal image.", "method used to save.", "which method?", "save method"], "actions_nn": ["goal", "transfer money"], "actions_params": ["which goal?", "goal", "amount", "amount to transfer"]}
{"id": "2072334591", "service_name": "NethomePlusA1", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["humidity level", "action", "dehumidifier", "%", "operating mode"], "actions_params": ["command", "control your device", "please choose your device", "appliancelist"]}
{"id": "2078068448", "service_name": "invoxia_triby", "triggers_nn": ["button", "triby io"], "triggers_params": ["which button?", "triby", "page", "button", "what trigger name?", "which page?", "trigger name", "which triby io?"], "queries_nn": [], "queries_params": [], "actions_nn": ["call", "message", "button", "image", "script", "timer", "media", "group", "duration", "media url", "use", "triby", "information", "intercom call", "io", "documentation", "user", "triby io"], "actions_params": ["preset", "image url", "what message?", "url", "cards", "what volume?", "triby", "message", "what image url?", "duration", "what script?", "timer duration?", "volume", "which recipient?", "which url?", "recipient", "which triby io?", "which media?"]}
{"id": "207898293", "service_name": "fletti", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": ["description of each user active request", "description"], "actions_nn": ["todos los shipper disponible"], "actions_params": ["\u00bfqu\u00e9 desea enviar?", "description"]}
{"id": "2083674850", "service_name": "dozens", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["money", "account"], "actions_params": ["amount"]}
{"id": "2083936394", "service_name": "Air_Monitor", "triggers_nn": ["air quality", "air monitor", "humidity", "button", "threshold setting", "temperature"], "triggers_params": ["temperature threshold", "which humidity threshold?", "humidity threshold", "iaq threshold", "air quailty threshold", "which air monitor?", "which r2 device", "which temperature measurement?", "degree in", "which temperature threshold?"], "queries_nn": ["air monitor", "humidity", "instance", "air quality", "threshold setting", "list", "temperature"], "queries_params": ["temperature threshold", "which humidity threshold?", "humidity threshold", "iaq threshold", "air quailty threshold", "which air monitor?", "which r2 device", "which temperature measurement?", "degree in", "which temperature threshold?"], "actions_nn": [], "actions_params": []}
{"id": "2084493576", "service_name": "docsend", "triggers_nn": ["document", "visitor download", "space", "entirety", "visit", "visitor", "docsend", "link"], "triggers_params": ["visitor company", "space url", "space creation time", "visit time", "the time the link was created.", "the time the space was created", "time the download was triggered", "the associated document.", "link url", "document", "the time the visit occurred.", "the visitor's company, if available.", "document name", "the associated account.", "url of the space that the download was generated from.", "the url to the space management page on docsend", "the name of the space", "recipients", "download time", "the email of the user who created the space", "the associated account", "visitor name", "the url to the link management page on docsend.", "the email of the user who created the link.", "the visitor's name, if available.", "link name", "the space downloaded.", "link management url", "the document visited.", "the url to the visit details on docsend.", "which document?", "space creator", "visit url", "the external link url", "the url to the document management page on docsend.", "link creation time", "the recipients of the link, if available.", "space name", "the visitor's email address, if available.", "the link used.", "document management url", "visitor email", "the external space url", "doc name", "link creator", "space management url", "account name"], "queries_nn": ["time", "document", "list", "space", "entirety", "visit", "visitor", "docsend", "link"], "queries_params": ["visitor company", "space url", "space creation time", "visit time", "the time the link was created.", "the time the space was created", "the associated document.", "link url", "document", "the time the visit occurred.", "the visitor's company, if available.", "document name", "the associated account.", "the url to the space management page on docsend", "the name of the space", "recipients", "the email of the user who created the space", "the associated account", "visitor name", "the url to the link management page on docsend.", "the email of the user who created the link.", "the visitor's name, if available.", "link name", "link management url", "the document visited.", "the url to the visit details on docsend.", "which document?", "space creator", "the external link url", "the url to the document management page on docsend.", "the recipients of the link, if available.", "link creation time", "visit url", "space name", "document management url", "the link used.", "the visitor's email address, if available.", "visitor email", "the external space url", "doc name", "link creator", "space management url", "account name"], "actions_nn": [], "actions_params": []}
{"id": "2092498048", "service_name": "nest_protect", "triggers_nn": ["nest", "smoke level", "evert time", "carbon monoxide level", "battery"], "triggers_params": ["which device?", "nest protect"], "queries_nn": ["time", "nest", "instance", "battery", "list", "smoke"], "queries_params": ["which device?", "nest protect"], "actions_nn": [], "actions_params": []}
{"id": "2101095767", "service_name": "samsungairconditioner", "triggers_nn": ["air conditioner"], "triggers_params": ["deviceid", "which device?"], "queries_nn": [], "queries_params": [], "actions_nn": ["operation mode", "choice", "air conditioner"], "actions_params": ["what mode?", "deviceid", "mode", "which device?"]}
{"id": "2106876284", "service_name": "swidget", "triggers_nn": ["swidget device"], "triggers_params": ["which device", "which device?"], "queries_nn": [], "queries_params": [], "actions_nn": ["level", "swidget", "device", "swidget device"], "actions_params": ["which device", "level", "which device?"]}
{"id": "2107379463", "service_name": "github", "triggers_nn": ["gist", "pull request", "release", "github", "organization", "repository", "repo", "version", "username", "issue", "event", "notification"], "triggers_params": ["username or organization", "date and time event was created.", "issuetitle", "repository", "the assignee's github username.", "the type of first file from gist.", "the gist's description", "issuebody", "issuelabels", "the time when the issue was created.", "the owner and repo name from notification.", "the author's github username.", "the gist's visibility, public or private.", "authoravatarimageurl", "repository url", "the url pointing to the issue.", "repository full name", "gist visibility", "repositoryname", "gist first file type", "gist description", "issueclosedat", "created at", "notification subject", "the notification's id", "the time when the notification was created.", "the time when the issue was closed.", "the name of the repository associated with the issue.", "the labels on this issue separated by commas.", "the event that triggers the notification.", "id", "gist url", "the filename of first file from gist.", "owner name", "assigneeusername", "authorusername", "the body of the issue with full markdown.", "gist first file name", "createdat", "the subject from notification on github.", "repository name", "the new gist owner's github username", "the url to the gist on github", "notification reason", "user", "the title of the issue.", "the author's github profile image.", "issueurl", "the url of the repository's notification on github."], "queries_nn": ["time", "pull request", "gist", "organization", "repository", "username", "list", "user", "issue"], "queries_params": ["username or organization", "repository url.", "repository", "issuetitle", "the assignee's github username.", "username", "issuebody", "issuelabels", "the time when the issue was created.", "the author's github username.", "repository url", "authoravatarimageurl", "the url pointing to the issue.", "repositoryname", "gist description", "issueclosedat", "the time when the issue was closed.", "the name of the repository associated with the issue.", "the labels on this issue separated by commas.", "gist url", "assigneeusername", "gist description.", "the description of the repisitory.", "authorusername", "the body of the issue with full markdown.", "the username of the gist's author.", "createdat", "repository name", "the url to the gist.", "user", "repository name.", "the title of the issue.", "the author's github profile image.", "repository description", "issueurl"], "actions_nn": ["gist", "issue", "github", "repository", "request", "comment"], "actions_params": ["file content", "body", "repository name", "title", "issuetitle", "repository", "issuebody", "content", "issue number", "filename", "description", "secret gist?", "comment", "secret gist"]}
{"id": "2110042949", "service_name": "kasa", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["brightness", "scene", "light bulb", "account", "color temperature", "device", "color"], "actions_params": ["brightness", "color temperature", "device", "kelvin", "scene", "advanced options", "transition duration", "color"]}
{"id": "2115348464", "service_name": "pushcut", "triggers_nn": ["pushcut", "server action"], "triggers_params": ["action identifier"], "queries_nn": [], "queries_params": [], "actions_nn": ["automation server", "scene", "notification", "shortcut", "json configuration", "device"], "actions_params": ["delay?", "text", "identifier", "title", "which scene?", "dynamic title", "shortcut", "which device?", "homekit", "dynamic text", "input", "devices", "delay", "json", "which shortcut?", "which notification?", "notification"]}
{"id": "2116547707", "service_name": "rachio_iro", "triggers_nn": ["watering time", "event", "device"], "triggers_params": ["event type", "which event?", "device id", "which device?"], "queries_nn": ["time", "list", "event", "watering time", "device"], "queries_params": ["event type", "which event?", "device id", "which device?"], "actions_nn": ["time", "rain delay mode", "schedule", "period", "rachio", "watering time", "zone", "adjustment", "device", "run time"], "actions_params": ["time", "how many days?", "duration", "zone id", "which device?", "which schedule?", "how many minutes to water?", "adjustment", "schedule rule id", "device id", "which zone?", "how much adjustment?"]}
{"id": "2117114792", "service_name": "spotter", "triggers_nn": ["value", "spotter", "temperature"], "triggers_params": ["temperature", "degrees in", "spotter-id", "which spotter?", "degrees-in"], "queries_nn": [], "queries_params": [], "actions_nn": [], "actions_params": []}
{"id": "2117255939", "service_name": "oco_camera", "triggers_nn": ["camera", "motion"], "triggers_params": ["camera", "which camera?"], "queries_nn": ["camera", "motion", "list"], "queries_params": ["camera", "which camera?"], "actions_nn": ["motion", "sound", "oco camera", "notification"], "actions_params": ["duration in seconds", "camera", "which camera?", "duration"]}
{"id": "2118128522", "service_name": "moretrees", "triggers_nn": [], "triggers_params": [], "queries_nn": ["category id", "tree list", "project id"], "queries_params": ["category id", "project id"], "actions_nn": ["plant tree", "someone"], "actions_params": ["quantity", "email", "name", "number of trees"]}
{"id": "2121156008", "service_name": "sunrise_sunset_org", "triggers_nn": ["time", "sunrise", "tonight", "tomorrow", "night", "sunset"], "triggers_params": ["location", "what location do you want sunset for?"], "queries_nn": ["time", "sunrise", "day", "sunset", "location"], "queries_params": ["longitude", "what latitude?", "what day do you want data for?", "what longitude?", "latitude", "data date"], "actions_nn": [], "actions_params": []}
{"id": "2121565607", "service_name": "vesyncIftttAirPurifier", "triggers_nn": ["air quality", "air purifier", "life", "filter", "display", "air purifier change fan speed", "set percentage", "air purifier change mode"], "triggers_params": ["select device", "select air quality", "input filter-life percentage (i.e. 15)", "device", "select mode", "state", "select display state", "quality", "level", "mode", "percentage"], "queries_nn": ["mode", "air quality", "air purifier", "life", "set percentage", "filter", "list"], "queries_params": ["select device", "select air quality", "input filter-life percentage (i.e. 15)", "device", "select mode", "quality", "mode", "percentage"], "actions_nn": ["auto", "air purifier", "speed", "display", "sleep", "action", "fan", "mode"], "actions_params": ["select device", "select fan speed", "speed", "device", "select mode", "state", "select display state", "mode"]}
{"id": "212199042", "service_name": "teletrac", "triggers_nn": ["alert"], "triggers_params": ["location of the event as a street address", "eventtype", "date and time event was created.", "location", "the name of the geofence", "this is either a speed or geofence alert.", "the name of the vehicle", "last name of the driver", "user mobile", "device name", "geofence", "first name of the driver", "user lastname", "name of the sensor or tracking device", "created at", "user firstname", "vehicle name", "speed in km/h", "the mobile phone # of the driver ", "speed"], "queries_nn": [], "queries_params": [], "actions_nn": [], "actions_params": []}
{"id": "2122109565", "service_name": "linkedin", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["linkedin profile", "text update", "link"], "actions_params": ["what would you like to comment about the link?", "message", "comment", "what would you like to share?", "link url"]}
{"id": "2122281755", "service_name": "hive_active_heating", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["schedule", "water", "duration", "manual", "heating mode", "thermostat", "hour", "boost heating", "mode", "temperature"], "actions_params": ["duration", "what temperature?", "which thermostat?", "thermostat", "which temperature?", "temperature"]}
{"id": "2124852999", "service_name": "timelines", "triggers_nn": [], "triggers_params": [], "queries_nn": ["event", "timeline"], "queries_params": ["timeline id"], "actions_nn": ["timeline event", "value"], "actions_params": ["timeline id", "unit key", "title", "value", "value type", "unit", "description", "value title", "event at"]}
{"id": "2130409229", "service_name": "unodc", "triggers_nn": ["crime", "nation office", "drug", "press release", "story"], "triggers_params": ["filter by keyword (optional)", "query"], "queries_nn": ["crime", "nation office", "drug", "press release", "list", "story"], "queries_params": ["filter by keyword", "query"], "actions_nn": [], "actions_params": []}
{"id": "2134188611", "service_name": "easycsv", "triggers_nn": ["csv file", "google sheet", "row"], "triggers_params": ["easycsv import page url"], "queries_nn": [], "queries_params": [], "actions_nn": [], "actions_params": []}
{"id": "2137401391", "service_name": "we_work_remotely", "triggers_nn": ["front", "finance job", "design job", "management", "customer support job", "marketing job", "product job", "job", "programming job", "back", "system admin job", "end programming job", "category", "stack programming job", "devop", "sale"], "triggers_params": ["the entry's url.", "entryimageurl", "entrytitle", "url for the first image in the entry. if the entry doesn't have an image will point to a placeholder image.", "the entry's title.", "entrycontent", "the entry's content, may contain html.", "entrypublished", "date entry was created.", "entryurl"], "queries_nn": [], "queries_params": [], "actions_nn": [], "actions_params": []}
{"id": "2138193286", "service_name": "smart_home_solution", "triggers_nn": ["motion", "family member", "alarm functionality", "device", "sleep", "battery level", "subscription", "smoke", "temperature", "sensor", "light bulb change brightness", "door", "luminance", "glass breakage", "house", "everyone", "water leak", "alarm", "light bulb change color"], "triggers_params": ["time", "device address", "date and time event was created.", "which door?", "which device?", "event", "name of event"], "queries_nn": ["door", "device", "list", "alarm functionality", "sleep", "everyone", "house", "alarm", "battery level", "light bulb change color", "subscription"], "queries_params": ["time", "device address", "date and time event was created.", "which door?", "which device?", "event", "name of event"], "actions_nn": ["brightness", "door", "name", "device", "alarm functionality", "house", "bulb", "alarm", "unlock", "subscription", "color"], "actions_params": ["device address", "which door?", "which device?", "which brightness", "use partial alarm?", "supported?", "which color?", "partial", "which brightness?", "which color"]}
{"id": "214221502", "service_name": "automower", "triggers_nn": ["status change", "mower", "charging station", "error"], "triggers_params": ["automower"], "queries_nn": ["sprinkler", "week", "mowing session", "query", "automower", "status history", "mower"], "queries_params": ["status", "a mapped description of automower\u00ae state.", "automower", "your naming of automower\u00ae."], "actions_nn": ["time", "schedule", "command", "charging station", "mowing session", "mower"], "actions_params": ["duration in minutes", "duration", "automower with area", "automower and area", "automower", "minutes"]}
{"id": "2144367996", "service_name": "gira", "triggers_nn": ["knx scene", "value", "knx device", "switch", "threshold"], "triggers_params": ["which scene?", "which device?", "fire once or every time?", "which threshold?", "trigger type", "capability", "threshold"], "queries_nn": ["threshold", "knx device", "list", "value"], "queries_params": ["which device?", "fire once or every time?", "which threshold?", "trigger type", "capability", "threshold"], "actions_nn": ["shutter", "light", "brightness level", "knx installation", "device", "switch", "blind", "knx heating mode", "rgb color", "scene", "position", "thermostat"], "actions_params": ["which shutter/blind?", "brightness", "which light?", "which mode?", "which scene?", "which device?", "which thermostat?", "heating mode", "which color?", "capability", "position", "which level?", "color"]}
{"id": "2146256533", "service_name": "zynect_sensors", "triggers_nn": ["sensor", "water", "value", "threshold sensor", "condition", "sensor battery", "bound", "leak sensor"], "triggers_params": ["what sensor would you would like to trigger on?", "what value do you want to trigger when above?", "what is the minimum acceptable value for this sensor?", "sensor id", "what sensor you would like to trigger on?", "what is the maximum acceptable value for this sensor?", "what value do you want to trigger when below?", "trigger above", "trigger below", "trigger units", "what units would you like to use?"], "queries_nn": ["datum", "sensor"], "queries_params": ["what units do you want to use?", "which sensor do you want to query?", "sensor units", "sensor id"], "actions_nn": [], "actions_params": []}
{"id": "2147036620", "service_name": "kumocloud", "triggers_nn": ["mitsubishi", "room temperature", "zone", "mode", "threshold"], "triggers_params": ["which zone?", "what temperature?", "serial", "threshold"], "queries_nn": ["zone", "list", "mitsubishi"], "queries_params": ["which zone?", "serial"], "actions_nn": ["mode", "zone", "target temperature", "mitsubishi"], "actions_params": ["which mode?", "serial", "temp", "how much?", "which zone?", "mode"]}
{"id": "21977853", "service_name": "cloudrain", "triggers_nn": ["irrigation"], "triggers_params": ["zone name"], "queries_nn": ["list", "irrigation"], "queries_params": ["zone name"], "actions_nn": ["zone", "irrigation"], "actions_params": ["zone", "zone name", "duration"]}
{"id": "219928284", "service_name": "Huma_i", "triggers_nn": ["co", "pm2", "huma", "i device", "device rise", "humidity", "temperature", "minute", "concentration", "voc", "compound", "i device datum update", "aqi", "carbon dioxide", "level", "average", "threshold"], "triggers_params": ["which humidity threshold?", "which huma-i?", "which voc threshold", "device id", "which aqi level?", "which dust level threshold?", "which temperature threshold?", "which co\u2082 threshold?", "threshold"], "queries_nn": [], "queries_params": [], "actions_nn": [], "actions_params": []}
{"id": "21", "service_name": "flickr", "triggers_nn": ["photoset", "photo", "flickr photostream", "flickr", "tag"], "triggers_params": ["title", "date and time the photo was taken.", "ownername", "lastsourceurl", "the shortened url to the photo's flickr page.", "optional set description.", "url to the largest available image file for the first public photo in the set.", "lastuploadeddate", "photocount", "the number of photos uploaded in this batch.", "takendate", "the url to your photostream on flickr.", "uploadeddate", "flickrurl", "sourceurl", "the long url to the photo's flickr page.", "date and time the photo was uploaded.", "originalsourceurl", "url to the largest available image file for the last photo.", "username of the person the photo belongs to.", "date and time the last photo was uploaded.", "optional photo description.", "flickrurlshort", "tags added to the last photo.", "lasttags", "the long url to the last photo's flickr page.", "tag", "single tag", "the url to the set on flickr.", "url to the orginal image file if available.", "tags added to the photo.", "url to the largest available flickr image file.", "lastflickrurl", "description", "tags", "photostreamurl", "firstsourceurl"], "queries_nn": [], "queries_params": [], "actions_nn": ["upload", "photo", "url", "flickr photostream", "image"], "actions_params": ["tags", "description", "photo url", "title"]}
{"id": "220616748", "service_name": "bloomsky", "triggers_nn": ["time", "upload", "picture", "url", "day", "location", "server", "image", "device", "lapse", "level", "device upload datum", "temperature"], "triggers_params": ["time", "which temperature unit?", "what time?", "which device?", "device id", "which temperature?", "temperature unit", "temperature"], "queries_nn": ["time", "upload", "picture", "device upload datum", "rain detection", "day", "server", "image", "device", "list", "lapse", "level", "temperature"], "queries_params": ["time", "which temperature unit?", "what time?", "which device?", "device id", "which temperature?", "temperature unit", "temperature"], "actions_nn": [], "actions_params": []}
{"id": "22", "service_name": "finance", "triggers_nn": ["time", "price", "currency", "day", "percentage", "stock", "amount", "price rise", "today", "exchange rate", "closing price", "market", "closing price rise"], "triggers_params": ["time", "input currency", "price", "percentage decrease", "ticker symbol", "percentage increase", "output currency", "symbol", "percentage"], "queries_nn": ["stock", "amount", "price rise", "stock price", "closing price", "list", "percentage"], "queries_params": ["price", "percentage decrease", "ticker symbol", "percentage increase", "symbol", "percentage"], "actions_nn": [], "actions_params": []}
{"id": "233868252", "service_name": "energeasyconnect", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["action group", "launch"], "actions_params": ["action group"]}
{"id": "23", "service_name": "pinboard", "triggers_nn": ["bookmark", "tag"], "triggers_params": ["time", "single tag", "title", "the description you leave on bookmark, blank otherwise.", "url", "the bookmark title, usually the page title at that url.", "date and time you created bookmark.", "tags", "the url that you bookmarked.", "description", "tags comma seperated.", "tag"], "queries_nn": [], "queries_params": [], "actions_nn": ["pinboard account", "bookmark"], "actions_params": ["description", "tags", "url"]}
{"id": "241990948", "service_name": "american_standard_home", "triggers_nn": ["motion", "lock", "camera", "home automation run", "door", "motion sensor"], "triggers_params": ["which camera?", "sensor", "which door?", "which sensor?", "which lock?", "lock", "camera", "door sensor", "nexia automation", "which automation?"], "queries_nn": ["list", "door"], "queries_params": ["which door?", "door sensor"], "actions_nn": ["home automation", "switch"], "actions_params": ["which switch?", "which dimmer?", "value", "switch", "dimmer", "how bright?", "nexia automation", "which automation?"]}
{"id": "242499801", "service_name": "automator", "triggers_nn": ["room", "tag"], "triggers_params": ["name (optional)", "name", "which room locator?", "smart tag", "room locator"], "queries_nn": [], "queries_params": [], "actions_nn": [], "actions_params": []}
{"id": "245389013", "service_name": "alko_smart_garden", "triggers_nn": ["connection", "rain", "button", "lawnmower", "robolinho device", "%", "battery level", "ko robolinho", "al", "base station", "start", "rain sensor", "robolinho"], "triggers_params": ["device", "devicename", "thing name"], "queries_nn": ["connection", "list", "blade", "robolinho"], "queries_params": ["devicename", "thing name"], "actions_nn": ["mowing window", "device", "today", "ko robolinho", "eco-mode", "al", "base station", "rain sensor", "robolinho"], "actions_params": ["devicename", "device name"]}
{"id": "24", "service_name": "pocket", "triggers_nn": ["item", "pocket", "tag"], "triggers_params": ["single tag", "addedat", "title", "imageurl", "url", "the item's url.", "date and time item was added.", "a url to this item's image.", "the item's excerpt.", "tags", "the item's title.", "excerpt", "the item's tags, comma separated.", "tag"], "queries_nn": [], "queries_params": [], "actions_nn": ["pocket queue", "item"], "actions_params": ["tags", "url"]}
{"id": "25508049", "service_name": "bernafon", "triggers_nn": ["program change", "volume", "hearing aid", "connection", "phone", "mobile", "battery"], "triggers_params": ["device type of the hearing aid.", "programid", "program id", "battery percentage", "date and time of occurrence.", "occured at", "mute state", "hidevice type", "battery status of the hearing aid in percentage.", "volume level on the hearing aid.", "volume level", "mute state of the hearing aid."], "queries_nn": ["volume", "hearing aid", "connection", "instance", "mobile", "program", "list"], "queries_params": ["device type of the hearing aid.", "programid", "program id", "date and time of occurrence.", "occured at", "hidevice type", "volume level on the hearing aid.", "volume level"], "actions_nn": ["iphone", "aid", "volume", "hearing aid", "text", "program", "speech"], "actions_params": ["program id", "volume level", "text to be played by speech", "program id to be set", "what volume level?", "text tospeech"]}
{"id": "257296563", "service_name": "longreads", "triggers_nn": ["essay", "food", "sport", "business", "event", "longread", "science", "art", "culture", "tech", "woman", "book", "crime", "nature", "profile", "post", "criticism", "interview"], "triggers_params": ["the entry's url.", "entryimageurl", "entrytitle", "url for the first image in the entry. if the entry doesn't have an image will point to a placeholder image.", "the entry's title.", "entrycontent", "the entry's content, may contain html.", "entrypublished", "date entry was created.", "entryauthor", "the entry's author name.", "entryurl"], "queries_nn": ["essay", "food", "sport", "list", "business", "event", "longread", "art", "science", "culture", "tech", "woman", "book", "crime", "nature", "profile", "post", "criticism", "interview"], "queries_params": ["the entry's url.", "entryimageurl", "entrytitle", "url for the first image in the entry. if the entry doesn't have an image will point to a placeholder image.", "the entry's title.", "entrycontent", "the entry's content, may contain html.", "entrypublished", "date entry was created.", "entryauthor", "the entry's author name.", "entryurl"], "actions_nn": [], "actions_params": []}
{"id": "25800999", "service_name": "pavlok", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["beep", "pavlok", "zap"], "actions_params": ["reason", "which zap intensity?", "which beep frequency?", "why do you want to be zapped?", "value", "why do you want your pavlok to beep you?", "why do you want to be vibrated?", "which vibrate strength?", "why do you want to turn pavlok's lights on?", "how many led's do you want to turn on?"]}
{"id": "258056737", "service_name": "vesyncBulb", "triggers_nn": ["device"], "triggers_params": ["select device", "device"], "queries_nn": ["device", "list"], "queries_params": ["select device", "device"], "actions_nn": ["light bulb", "level", "color temperature", "change brightness", "device", "percentage"], "actions_params": ["brightness level", "select device", "color temperature", "device"]}
{"id": "25", "service_name": "evernote", "triggers_nn": ["note", "notebook", "tag"], "triggers_params": ["specific tag", "notebook", "which notebook?", "tag"], "queries_nn": [], "queries_params": [], "actions_nn": ["title", "attachment", "source url", "notebook", "checkbox", "note", "link note", "image attachment"], "actions_params": ["body", "image url", "title", "to-do", "notebook", "audio url", "tags", "description", "link url"]}
{"id": "263837969", "service_name": "kronaby", "triggers_nn": ["watch", "pusher"], "triggers_params": ["action", "which press type?"], "queries_nn": ["watch", "event", "list", "pusher"], "queries_params": ["action", "which press type?"], "actions_nn": ["watch", "vibration"], "actions_params": ["body", "enter a message"]}
{"id": "26550817", "service_name": "fibaro", "triggers_nn": ["motion", "home center device change", "flood", "overheat", "button", "home center", "device", "home center device", "co.", "scene", "alarm", "battery level", "keyfob", "smoke"], "triggers_params": ["which device", "number of clicks", "parameter 1", "which device?", "parameter 2", "which key?"], "queries_nn": ["flood", "instance", "button", "home center", "device", "list", "alert", "co.", "alarm", "smoke"], "queries_params": ["parameter 1", "which device", "number of clicks", "which device?"], "actions_nn": ["lamel", "home center", "device", "roller shutter device", "closing", "roller shutter", "scene", "opening", "movement", "percentage"], "actions_params": ["how many percent?", "which device", "which scene?", "parameter 1", "which device?"]}
{"id": "265764586", "service_name": "sowee", "triggers_nn": ["mode", "exit", "hub", "sowee"], "triggers_params": ["site mode", "home or away?"], "queries_nn": ["mode", "sowee", "exit", "list", "hub"], "queries_params": ["site mode", "home or away?"], "actions_nn": ["mode", "home", "hub", "sowee"], "actions_params": ["site mode", "home or away?"]}
{"id": "267597877", "service_name": "wemo_maker", "triggers_nn": ["sensor", "toggle mode", "mode", "wemo maker relay", "signal"], "triggers_params": ["macaddress", "which device?"], "queries_nn": ["time", "mode", "sensor", "toggle mode", "list", "wemo maker relay", "signal"], "queries_params": ["macaddress", "which device?"], "actions_nn": ["time", "toggle mode", "wemo maker", "turn relay", "millisecond"], "actions_params": ["delay (in seconds)", "cycles", "which device?", "delay", "repeatition", "macaddress"]}
{"id": "273741884", "service_name": "loc", "triggers_nn": ["history", "news", "congress print collection", "print photograph division", "post", "highlight", "blog post", "library", "congress", "scene", "peek", "today"], "triggers_params": ["url for the first image in the post. if the post doesn't have an image will point to a placeholder image.", "the url to the blog post.", "date the post was published.", "the news content, may contain html.", "the blog post content, may contain html.", "the post's content, may contain html.", "entrytitle", "entrypublished", "the headline for the latest news.", "date the news was published.", "the title of the day's post.", "the post's title.", "entryimageurl", "the url for the day's post.", "entryauthor", "entryurl", "url for the first image in the entry. if the entry doesn't have an image will point to a placeholder image.", "entrycontent", "the author of the blog post.", "the url to the news article."], "queries_nn": ["history", "news", "congress print collection", "print photograph division", "list", "highlight", "blog post", "library", "congress", "post", "scene", "peek", "today"], "queries_params": ["url for the first image in the post. if the post doesn't have an image will point to a placeholder image.", "the url to the blog post.", "date the post was published.", "the news content, may contain html.", "the blog post content, may contain html.", "the post's content, may contain html.", "entrytitle", "entrypublished", "the headline for the latest news.", "date the news was published.", "the title of the day's post.", "the post's title.", "entryimageurl", "the url for the day's post.", "entryauthor", "entryurl", "url for the first image in the entry. if the entry doesn't have an image will point to a placeholder image.", "entrycontent", "the author of the blog post.", "the url to the news article."], "actions_nn": [], "actions_params": []}
{"id": "274337561", "service_name": "iottysmarthome", "triggers_nn": ["outlet device", "gang type", "device", "gate", "shades", "iotty app", "switch device", "iotty"], "triggers_params": ["which iotty device was opened or closed?", "check whether the iotty device is on or off", "check whether the iotty device is completely open or closed", "state", "which iotty device was turned on or off?", "device id", "light state", "which iotty device was turned on, off, or pressed?", "check whether the iotty device is on, off, or has been pressed"], "queries_nn": ["outlet device", "iotty", "list"], "queries_params": ["which iotty device was turned on or off?", "device id", "check whether the iotty device is on or off", "state"], "actions_nn": ["shades switch", "command", "action", "iotty", "switch", "outlet"], "actions_params": ["which iotty device should i turn on or off?", "command", "which command should i send?", "which iotty device should i turn on, off or press?", "device id", "which iotty device should i completely open or close?"]}
{"id": "275857908", "service_name": "aura", "triggers_nn": ["motion", "night scene", "member leaf", "scene", "aura", "member"], "triggers_params": ["select hub", "select your hub", "serial", "scene name", "select a hub", "select a scene", "member name", "select a member"], "queries_nn": ["motion", "night scene", "member leaf", "aura", "list", "member"], "queries_params": ["select your hub", "serial", "select a hub", "member name", "select a member"], "actions_nn": ["night scene", "home scene", "scene", "aura", "guardian scene"], "actions_params": ["select your hub", "serial"]}
{"id": "277562671", "service_name": "selock", "triggers_nn": ["lock"], "triggers_params": ["lock id"], "queries_nn": ["event"], "queries_params": ["lock id"], "actions_nn": ["lock", "id"], "actions_params": ["lock id"]}
{"id": "277916670", "service_name": "skybell", "triggers_nn": ["motion", "button", "skybell hd"], "triggers_params": ["skybell hd", "device"], "queries_nn": ["time", "motion", "skybell hd", "button", "list"], "queries_params": ["skybell hd", "device"], "actions_nn": ["seconds", "skybell", "video", "record", "doorbell chime", "color"], "actions_params": ["which device?", "device", "which led color?", "led color"]}
{"id": "281402608", "service_name": "hc_wine_cooler", "triggers_nn": ["wine cooler", "wine", "door"], "triggers_params": ["ha id", "which wine cooler?"], "queries_nn": ["wine cooler", "query", "door"], "queries_params": ["ha id", "which wine cooler?"], "actions_nn": ["wine compartment temperature"], "actions_params": ["which compartment?", "which wine cooler?", "compartment", "ha id", "temperature"]}
{"id": "281437275", "service_name": "tado_air_conditioning", "triggers_nn": ["home", "value", "room temperature rise", "room temperature", "person", "user", "home mode", "\u00b0 switch", "humidity", "tado \u00b0", "mode", "threshold"], "triggers_params": ["temperature threshold", "humidity threshold", "zone", "unit", "humidity", "temperature unit", "which room?", "temperature"], "queries_nn": ["home", "value", "list", "user", "person", "event", "tado", "humidity"], "queries_params": ["humidity", "zone", "humidity threshold", "which room?"], "actions_nn": ["schedule", "ac", "auto mode", "return control", "location", "user", "fan mode", "heating", "setting", "heat mode", "room temperature", "tado \u00b0", "mode"], "actions_params": ["which fan speed?", "fan speed", "zone", "swing vanes?", "swing", "termination condition", "duration?", "which temperature?", "which room?", "temperature"]}
{"id": "28", "service_name": "instagram", "triggers_nn": ["photo", "video", "hashtag", "instagram"], "triggers_params": ["createdat", "the html embed code for the photo.", "the short url to the photo's instagram page.", "url", "date and time the photo was taken.", "url to the image file.", "embedcode", "videosourceurl", "url to the video file.", "url to the video's thumbnail image.", "date and time the video was taken.", "caption", "sourceurl", "the short url to the video's instagram page.", "imagethumbnailurl", "the html embed code for the video.", "tag"], "queries_nn": [], "queries_params": [], "actions_nn": [], "actions_params": []}
{"id": "290648080", "service_name": "nibe_uplink", "triggers_nn": ["alarm", "system"], "triggers_params": ["which system?", "systemid"], "queries_nn": ["list", "system", "alarm"], "queries_params": ["which system?", "systemid"], "actions_nn": ["home thermostat", "water production", "system", "temperature", "day", "speed", "ventilation speed", "home mode", "nibe uplink", "nibe system", "vacation mode", "mode", "lux feature"], "actions_params": ["measured temperature", "thermostat name", "which system?", "systemid", "valid until?", "which climate system?", "degrees in", "climatesystem", "valid until", "target temperature"]}
{"id": "294306214", "service_name": "samsungairpurifier", "triggers_nn": ["air purifier"], "triggers_params": ["deviceid", "which device?"], "queries_nn": ["air purifier", "list"], "queries_params": ["deviceid", "which device?"], "actions_nn": ["operation mode", "choice", "air purifier"], "actions_params": ["speedlevel", "what mode?", "deviceid", "which device?"]}
{"id": "297502420", "service_name": "otiom", "triggers_nn": ["alarm state", "otiom tag"], "triggers_params": ["created at", "otiom user", "name of the person carrying the otiom tag", "date and time event was created."], "queries_nn": ["list", "alarm"], "queries_params": ["name of the user carrying an otiom tag", "otiom user", "created at", "date &amp; time of the start of the alarm"], "actions_nn": [], "actions_params": []}
{"id": "29", "service_name": "facebook_pages", "triggers_nn": ["facebook page", "photo", "link post", "hashtag", "status message"], "triggers_params": ["the photo's caption.", "title", "the link to the photo's facebookpages page, may be private.", "message", "your facebook page's name.", "link", "pagename", "date and time the link was shared.", "date and time photo was uploaded.", "caption", "the optional link description.", "status message itself.", "hashtag", "the link to the main facebook page.", "the title of link's page.", "pageurl", "date and time the status message was created.", "your message about the shared link.", "createdat", "imagesource", "the url to the full sized version of the photo itself.", "updatedat", "shared link url.", "description"], "queries_nn": [], "queries_params": [], "actions_nn": ["facebook page album", "facebook page", "upload", "photo", "facebook page wall", "url", "text status message", "link post"], "actions_params": ["album name", "message", "photo url", "status message", "album", "link url"]}
{"id": "2", "service_name": "twitter", "triggers_nn": ["hashtag", "location", "anyone post", "search query", "user", "tweet", "twitter user", "link"], "triggers_params": ["tweetembedcode", "include", "number of followers the follower has.", "followedat", "location", "username", "date and time tweet was created.", "username to watch", "text", "linktoprofile", "userwebsiteurl", "the url to the tweet itself.", "search for", "linktotweet", "include tweets", "followercount", "user name of tweeter.", "the tweet itself.", "the url to the follower's website.", "hashtag", "number of users the follower is following.", "the url to the follower's profile.", "date and time when followed.", "linkurl", "full name of follower.", "firstlinkurl", "the first url found in the tweet.", "locate an area", "createdat", "about", "bio of the follower.", "followingcount", "userimageurl", "query", "the url to the follower's profile image.", "the url found in the tweet.", "location of follower.", "user name of mentioner.", "the html embed code for the tweet.", "fullname"], "queries_nn": [], "queries_params": [], "actions_nn": ["bio", "image url", "tweet", "profile picture", "twitter account", "image"], "actions_params": ["add a tweet", "bio", "tweet text", "image url", "photo url", "tweet", "tweet about your updated bio"]}
{"id": "302185900", "service_name": "hive_view", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["view camera", "view camera monitoring"], "actions_params": ["camera", "which camera?"]}
{"id": "303792962", "service_name": "bluebyadt", "triggers_nn": ["garage door", "motion", "home", "device", "adt system arm state change", "issue", "camera", "battery", "adt doorbell camera", "light", "door", "activity", "adt sensor", "person", "adt camera", "level", "adt alarm event", "thermostat setting"], "triggers_params": ["device name", "event type?", "arm type", "arm type?", "device name?", "event type"], "queries_nn": ["garage door", "motion", "device", "list", "issue", "adt camera", "battery", "thermostat setting"], "queries_params": ["device name?", "event type", "event type?", "device name"], "actions_nn": ["garage door", "rule", "temperature range", "camera", "heat", "thermostat", "account", "level", "mode", "temperature", "auto", "door", "light", "snapshot", "video clip", "record", "adt security system"], "actions_params": ["set lowest temperature to?", "lower value", "bypass open sensors", "camera", "set highest temperature to?", "device name", "rule name", "set point type", "set temperature to?", "setpoint", "device name?", "heat or cool mode?", "camera?", "arm type", "arm type?", "bypass open sensors?", "level?", "rule name?", "upper value", "level"]}
{"id": "30", "service_name": "wordpress", "triggers_nn": ["wordpress blog", "category", "post", "tag"], "triggers_params": ["the post's url.", "the post's content, may contain html.", "tag", "url for the first image in the post. if the post doesn't have an image will point to a placeholder image.", "tagsandcategories", "postpublished", "posttitle", "date post was created", "single tag or category", "posturl", "postcontent", "the post's title.", "postimageurl", "the post's tags and categories, comma seperated."], "queries_nn": [], "queries_params": [], "actions_nn": ["wordpress blog", "image", "url", "photo post", "post"], "actions_params": ["body", "title", "source url", "photo url", "caption", "tags", "post status", "categories"]}
{"id": "316287470", "service_name": "vesyncDimmer", "triggers_nn": ["device"], "triggers_params": ["select device", "device"], "queries_nn": [], "queries_params": [], "actions_nn": ["device", "brightness", "level", "percentage"], "actions_params": ["brightness level", "select device", "device", "percentage"]}
{"id": "31", "service_name": "foursquare", "triggers_nn": ["photo", "shout", "area", "foursquare", "swarm", "category", "friend check", "venue", "hashtag"], "triggers_params": ["a url to a static map image of the venue's location.", "venuename", "venue category", "venuemapimageurl", "photourl", "location", "venueurl", "locate an area", "shout (message) associated with check-in.", "checkindate", "category", "date and time you checked in.", "a url to the source image of the check-in's first photo.", "the short url to the venue's foursquare page.", "shout", "hashtag", "tag"], "queries_nn": [], "queries_params": [], "actions_nn": [], "actions_params": []}
{"id": "322203813", "service_name": "Philips_air_purifer", "triggers_nn": ["air quality change", "filter", "philip air purifier"], "triggers_params": ["which air quality level do you want to set as a trigger?", "air quality trigger level", "what\u2019s your philips air purifier\u2019s name?", "device name"], "queries_nn": ["time", "fan speed", "filter", "on", "philip air purifier", "off status", "air quality level", "mode"], "queries_params": ["device name", "what\u2019s your philips air purifier\u2019s name? ", "what\u2019s your philips air purifier\u2019s name?", "sensor name", "device sensor"], "actions_nn": ["philip air purifer fan speed", "air purifier", "philip air purifier", "light", "air quality light", "philip air purifier mode", "switch"], "actions_params": ["what\u2019s your philips air purifier\u2019s fan speed level?", "device name", "device mode", "device speed", "what\u2019s your philips air purifier\u2019s name?"]}
{"id": "324969693", "service_name": "voip_calls", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["ifttt app", "message", "applet", "device"], "actions_params": ["message", "voice message"]}
{"id": "327083868", "service_name": "airthings", "triggers_nn": ["temperature", "radon level", "pm2 .5 level", "device", "mold risk level", "co2 level", "air pressure level", "humidity", "level", "threshold"], "triggers_params": ["unit", "measurement unit", "device", "threshold"], "queries_nn": ["temperature", "instance", "radon level", "device", "list", "co2 level", "air pressure level", "event", "humidity", "tvoc level", "threshold"], "queries_params": ["unit", "measurement unit", "device", "threshold"], "actions_nn": [], "actions_params": []}
{"id": "32", "service_name": "youtube", "triggers_nn": ["chat message", "video", "youtube", "playlist", "membership", "chat", "user", "search query", "sticker", "video public", "channel", "stream", "subscription"], "triggers_params": ["title", "date and time event was created.", "membership type", "the https:// html embed code for the video.", "author name", "which color tier?", "subscription", "video author's name.", "which subscription?", "tier", "the video url.", "created at", "video description.", "https embed code", "an alternative url you can use if the original url doesn't work with your action.", "sponsor type", "the video title.", "search query", "the time at which you liked the video.", "channel id", "alternative url", "the html embed code for the video.", "url", "description", "which channel?", "embed code"], "queries_nn": ["playlist", "youtube", "membership", "list", "chat", "stream", "subscription", "chat message", "time", "video", "user", "video public", "search criterion", "sticker", "channel", "member"], "queries_params": ["title", "date and time event was created.", "membership type", "minimum level", "which color tier?", "author name", "subscription", "video author's name.", "which subscription?", "tier", "the video url.", "created at", "video description.", "sponsor type", "the video title.", "search query", "the time at which you liked the video.", "channel id", "member channel id", "the html embed code for the video.", "playlist id", "url", "description", "embed code"], "actions_nn": [], "actions_params": []}
{"id": "332126936", "service_name": "giphy", "triggers_nn": ["search query", "gif", "giphy"], "triggers_params": ["search for", "image url", "query", "url", "url to the gif's image if one exists", "email html", "iframe embed code of gif", "date and time event was created.", "url to this gif on giphy", "tumblr image url", "created date", "tags", "newline separate string of tags of this gif", "embed code", "gif image url for posting gifs on tumblr.", "html to include an in-line gif in the body of an email."], "queries_nn": ["search query", "list", "gif", "giphy"], "queries_params": ["search for", "image url", "query", "url", "url to the gif's image if one exists", "email html", "iframe embed code of gif", "date and time event was created.", "url to this gif on giphy", "tumblr image url", "created date", "tags", "newline separate string of tags of this gif", "embed code", "gif image url for posting gifs on tumblr.", "html to include an in-line gif in the body of an email."], "actions_nn": [], "actions_params": []}
{"id": "333457261", "service_name": "livy_protect", "triggers_nn": ["fire", "alarm", "livy app", "device", "motion alarm"], "triggers_params": ["alarmtype", "timestamp", "alarm type", "date and time event was created."], "queries_nn": ["alarm state", "alarm map", "device"], "queries_params": ["shows the device name", "in alarm state", "device", "flag indicating if the device is in alarm state"], "actions_nn": ["livy", "arm"], "actions_params": ["what is execution delay?", "execution delay", "what execution delay?"]}
{"id": "336504517", "service_name": "king_county_metro", "triggers_nn": ["ride c line", "ride d line", "ride f line", "line", "ride", "disruption", "ride e line", "ride b line", "announcement", "bus service", "service alert"], "triggers_params": ["the entry's url.", "entrytitle", "the entry's content, contains html.", "the entry's title.", "entrycontent", "entrypublished", "the entry's content, may contain html.", "date entry was created.", "entryurl"], "queries_nn": ["ride c line", "ride d line", "ride f line", "announcement", "list", "ride", "bus service", "ride e line", "ride b line", "line", "disruption", "service alert"], "queries_params": ["the entry's url.", "entrytitle", "the entry's content, contains html.", "the entry's title.", "entrycontent", "the entry's content, may contain html.", "entrypublished", "date entry was created.", "entryurl"], "actions_nn": [], "actions_params": []}
{"id": "336690107", "service_name": "email_digest", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["time", "week", "item", "day", "digest"], "actions_params": ["title", "time of day", "url", "message", "day of week", "item url"]}
{"id": "338906777", "service_name": "ORBneXt", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["orbnext", "color"], "actions_params": ["which device?", "device", "select a color"]}
{"id": "33", "service_name": "gmail", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["recipient", "email", "gmail account"], "actions_params": ["bcc", "to address", "bcc address", "body", "cc", "attachment url", "to", "cc address", "subject"]}
{"id": "342546529", "service_name": "nsf", "triggers_nn": ["episode", "discovery file", "discovery", "science foundation", "news", "science foundation post"], "triggers_params": ["the entry's url.", "entryimageurl", "entrytitle", "query", "url for the first image in the entry. if the entry doesn't have an image will point to a placeholder image.", "the entry's title.", "entrycontent", "the entry's content, may contain html.", "entrypublished", "date entry was created.", "filter by keyword (optional)", "entryurl"], "queries_nn": ["time", "discovery", "science foundation", "discovery file episode", "news", "science foundation post", "list"], "queries_params": ["the entry's url.", "entryimageurl", "filter by keyword", "entrytitle", "query", "url for the first image in the entry. if the entry doesn't have an image will point to a placeholder image.", "the entry's title.", "entrycontent", "the entry's content, may contain html.", "entrypublished", "date entry was created.", "entryurl"], "actions_nn": [], "actions_params": []}
{"id": "34569988", "service_name": "updraft", "triggers_nn": ["stock", "price", "downtrend", "updraft stock trading algorithm", "uptrend"], "triggers_params": ["updraft signal id", "signal id"], "queries_nn": [], "queries_params": [], "actions_nn": [], "actions_params": []}
{"id": "348097909", "service_name": "ispy_agent", "triggers_nn": ["motion", "microphone", "sound", "camera", "device", "alert"], "triggers_params": ["microphone", "device", "which camera?"], "queries_nn": ["microphone", "list", "sound", "device", "alert"], "queries_params": ["microphone", "device"], "actions_nn": ["detection", "photo", "agent dvr", "command", "home", "motion detection", "master alert", "profile", "device", "alert", "computer", "camera", "microphone", "switch alert", "night"], "actions_params": ["camera", "profile", "command", "device"]}
{"id": "349553996", "service_name": "osumsmart", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["bus door", "bus scene", "set level", "value", "switch", "sl", "bus device", "bus curtain"], "actions_params": ["device list", "scenes", "levels", "devices"]}
{"id": "350341117", "service_name": "energenie_mi_home", "triggers_nn": ["sensor", "home device", "door", "window", "device", "motion sensor", "etrv", "mi", "threshold temperature", "movement", "mihome", "temperature"], "triggers_params": ["open sensor subdevice id", "which mihome click device?", "the name of the mi|home device.", "etrv subdevice id", "motion sensor subdevice id", "device name", "which open sensor?", "what temperature?", "which device?", "which sensor?", "min temperature", "which motion sensor?", "timestamp", "date and time event occurred.", "max temperature", "clicker subdevice id"], "queries_nn": ["sensor", "door", "instance", "window", "device", "list", "threshold temperature", "mihome", "temperature"], "queries_params": ["open sensor subdevice id", "which mihome click device?", "etrv subdevice id", "which open sensor?", "what temperature?", "which device?", "which sensor?", "min temperature", "clicker subdevice id"], "actions_nn": ["home device", "name", "device", "power", "mi", "level", "group", "target temperature", "temperature"], "actions_params": ["target level", "which group?", "dimmer level", "which device?", "label", "id", "name of the mihome subdevice to power on?", "which mihome subdevice?", "target temperature"]}
{"id": "353618929", "service_name": "go_raylogic", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["go", "device", "thermostat device", "blind", "curtain", "closing", "opening", "raising", "lowering", "light", "fan speed control", "air conditioning", "control", "scene", "fan", "percentage"], "actions_params": ["device to dim", "dimming level", "device for blinds", "device to turn onoff", "fan speed", "device for fan", "select hvac devices", "curtain state", "curtain / blind state", "device for hvac", "ac level", "turn on off", "scene names", "turn on / off ?", "select  curtain / blinds", "scene number", "device to turn on/off", "selected fan"]}
{"id": "361495660", "service_name": "clova", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["clova\u30c7\u30d0\u30a4\u30b9\u306b\u5bfe\u3057\u3066\u901a\u77e5\u3092\u9001\u308a\u307e\u3059"], "actions_params": ["message", "\u30e1\u30c3\u30bb\u30fc\u30b8\u5185\u5bb9"]}
{"id": "363042557", "service_name": "fcc", "triggers_nn": ["notice", "order", "news release", "fcc"], "triggers_params": ["filter by keyword(s) (optional)", "query"], "queries_nn": ["time", "order", "news release", "notice", "list", "fcc"], "queries_params": ["filter by keyword(s)", "query"], "actions_nn": [], "actions_params": []}
{"id": "363138948", "service_name": "knocki", "triggers_nn": ["custom ifttt task", "trigger", "gesture", "id"], "triggers_params": ["code", "id"], "queries_nn": ["time", "tap gesture", "ifttt task", "list"], "queries_params": ["code", "id"], "actions_nn": [], "actions_params": []}
{"id": "365971793", "service_name": "smartap_shower", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["shower preference"], "actions_params": ["shower usage"]}
{"id": "367663171", "service_name": "Aqara_Home_EU", "triggers_nn": ["motion", "drop", "cube", "window sensor", "water", "brightness", "value", "minute inactivity", "sound", "switch", "curtain", "camera", "press", "vibration", "humidity", "plug", "relay controller", "temperature", "darkness", "light", "door", "rocker switch", "water leak", "tvoc", "tilt"], "triggers_params": ["humidity drops to", "humidity reaches up to", "tvoc drop to", "light status", "curtain status", "temperature reaches up to", "which trigger event?", "which trigger event", "which device?", "motion is detected and brightness is below", "click status", "tvoc drops to", "flip status", "temperature drops to", "switch status", "brightness status", "plug status", "motion is detected and brightness is above", "tvoc reaches up to", "subject id", "channel status"], "queries_nn": ["humidity", "temperature"], "queries_params": ["which device", "subject id"], "actions_nn": ["detection", "choosing", "motion detection", "curtain", "camera", "sleep", "position", "relay controller", "plug", "module", "wake", "light", "rocker switch", "wake up", "close", "sound detection"], "actions_params": ["which action event?", "which status", "whith device?", "which device?", "subject id", "open to"]}
{"id": "369291456", "service_name": "timetogowild", "triggers_nn": [], "triggers_params": [], "queries_nn": ["user", "list", "platform", "trail"], "queries_params": ["the id of the trail in gowild - trails are content categories.", "name", "the name of the trail in gowild - trails are content categories.", "trailid"], "actions_nn": ["post", "gowild"], "actions_params": ["photos", "what photos should be attached to your post?", "what text should be on your post?", "trail", "content", "what trail would you like your posts to go to?"]}
{"id": "36996033", "service_name": "facebook", "triggers_nn": ["photo", "facebook profile information", "location", "change", "text status message", "trigger", "facebook", "hashtag", "link post"], "triggers_params": ["the photo's caption.", "title", "location", "albumid", "name of the photo album.", "message", "the url to the small version of the photo itself.", "field to watch", "your facebook full name.", "link", "the link to the photo's facebook page, may be private.", "date and time the link was shared.", "date and time photo was uploaded.", "profile field to watch", "albumname", "caption", "the optional link description.", "status message itself.", "hashtag", "imagesm", "the title of link's page.", "this is an id of a photo album.", "the full name of the user who uploaded the photo.", "date and time the status message was created.", "your message about the shared link.", "locate an area", "createdat", "from", "imagesource", "the url to the full sized version of the photo itself.", "updatedat", "shared link url.", "description"], "queries_nn": ["photo", "facebook profile change", "location", "list", "id", "use list album", "text status message", "album", "album id", "time", "facebook post", "user", "timeline", "facebook", "hashtag", "link post"], "queries_params": ["the photo's caption.", "title", "album's name", "what post type?", "message", "location", "albumid", "the url to the small version of the photo itself.", "your facebook full name.", "field to watch", "end date", "link", "the link to the photo's facebook page, may be private.", "album's id", "post type", "date and time the link was shared.", "date and time photo was uploaded.", "type", "profile field to watch", "caption", "the optional link description.", "status message itself.", "an id of album photo used in as cover", "hashtag", "the title of link's page.", "imagesm", "this is an id of a photo album.", "the full name of the user who uploaded the photo.", "name", "last time album was updated.", "start date", "date and time the status message was created.", "timestamp when album was created", "your message about the shared link.", "locate an area", "album id", "createdat", "coverphotoid", "link to album page", "from", "type of album, values can be: app, cover, profile, mobile, wall, normal, album", "imagesource", "the url to the full sized version of the photo itself.", "updatedat", "shared link url.", "description", "album's description"], "actions_nn": [], "actions_params": []}
{"id": "370079244", "service_name": "aisync", "triggers_nn": ["minimum", "fan speed", "light", "maximum", "user", "light brightness", "medium", "event", "fan"], "triggers_params": ["which fan do you want to make effect?", "which light do you want to make effect?", "device"], "queries_nn": ["minimum", "history", "fan speed", "light", "list", "user", "light brightness", "medium", "fan"], "queries_params": ["which fan do you want to make effect?", "which light do you want to make effect?", "device"], "actions_nn": ["light", "fan", "device", "percentage parameter"], "actions_params": ["brightness", "which device?", "device", "do action to which light?", "do action to which fan?", "to what level?", "on off", "on or off?", "percentage"]}
{"id": "371915581", "service_name": "somfy_mylink", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["movement command", "scene", "product", "mylink device"], "actions_params": ["target", "command", "which connected product ?", "scene", "what command ?", "what scene ?"]}
{"id": "37202401", "service_name": "LinkShades", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["shade", "percent"], "actions_params": ["which shade?", "percent", "which shade"]}
{"id": "372821991", "service_name": "blurams", "triggers_nn": ["motion", "sound", "doorbell", "face", "someone", "device"], "triggers_params": ["which device", "which device?"], "queries_nn": ["account", "ifttt", "device"], "queries_params": [], "actions_nn": ["alarm", "notification", "night vision", "cloud recording", "device"], "actions_params": ["which device", "which device?"]}
{"id": "376914664", "service_name": "miyo", "triggers_nn": ["soil", "moisture border", "irrigation area", "irrigation"], "triggers_params": ["circuit", "which irrigation area should be checked?"], "queries_nn": ["soil", "moisture border", "area", "list", "irrigation area", "irrigation"], "queries_params": ["circuit", "which irrigation area should be checked?"], "actions_nn": ["miyo", "cube", "automower", "update", "irrigation area", "irrigation"], "actions_params": ["how long should the irrigation be active?", "which irrigation area should be deactivated?", "which irrigation area should be activated?", "cube", "rain", "duration", "is your automower currently mowing?", "which irrigation area should be watered?", "is it currently raining?", "which cube?", "which irrigation area should stop watering?", "circuit", "mower", "which cube should be notified?"]}
{"id": "378294772", "service_name": "routee", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["sm", "phone number"], "actions_params": ["to", "message", "from"]}
{"id": "380643888", "service_name": "slbus", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["bus door", "bus scene", "set level", "value", "switch", "sl", "bus device", "bus curtain"], "actions_params": ["device list", "scenes", "levels", "devices"]}
{"id": "384084774", "service_name": "dol", "triggers_nn": ["video", "youtube", "producer price index", "report", "cpi", "consumer price index", "ppi", "bureau", "labor statistics", "employment situation report", "news release", "labor", "department"], "triggers_params": ["filter by keyword (optional)", "query"], "queries_nn": ["video", "youtube", "producer price index", "report", "cpi", "list", "consumer price index", "ppi", "bureau", "labor statistics", "employment situation report", "news release", "labor", "department"], "queries_params": ["filter by keyword", "query"], "actions_nn": [], "actions_params": []}
{"id": "384294103", "service_name": "sonic", "triggers_nn": ["program change", "volume", "hearing aid", "connection", "phone", "mobile", "battery"], "triggers_params": ["device type of the hearing aid.", "programid", "program id", "battery percentage", "date and time of occurrence.", "occured at", "mute state", "hidevice type", "battery status of the hearing aid in percentage.", "volume level on the hearing aid.", "volume level", "mute state of the hearing aid."], "queries_nn": ["connection", "instance", "mobile", "list", "alert", "volume", "hearing aid", "phone", "battery"], "queries_params": ["device type of the hearing aid.", "battery percentage", "date and time of occurrence.", "occured at", "hidevice type", "battery status of the hearing aid in percentage.", "volume level on the hearing aid.", "volume level"], "actions_nn": ["iphone", "aid", "volume", "hearing aid", "text", "program", "speech"], "actions_params": ["program id", "volume level", "text to be played by speech", "program id to be set", "what volume level?", "text tospeech"]}
{"id": "385212475", "service_name": "honeywell_round", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["schedule", "override", "action", "location", "zone", "target temperature", "heating system"], "actions_params": ["duration in", "temperature in", "duration", "temperature scale", "zone", "hours", "location", "quick action", "duration units", "which zone?", "target temperature"]}
{"id": "389936194", "service_name": "naacp", "triggers_nn": ["naacp news", "post"], "triggers_params": ["the entry's url.", "entryimageurl", "entrytitle", "url for the first image in the entry. if the entry doesn't have an image will point to a placeholder image.", "the entry's title.", "entrycontent", "the entry's content, may contain html.", "entrypublished", "date entry was created.", "entryauthor", "the entry's author name.", "entryurl"], "queries_nn": [], "queries_params": [], "actions_nn": [], "actions_params": []}
{"id": "393895903", "service_name": "nvd", "triggers_nn": ["vulnerability", "vulnerability database"], "triggers_params": ["filter by keyword (recommended)", "query"], "queries_nn": ["vulnerability", "vulnerability database", "list"], "queries_params": ["filter by keyword (recommended)", "query"], "actions_nn": [], "actions_params": []}
{"id": "398298833", "service_name": "livisi", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["innogy smarthome state"], "actions_params": ["device variableactuator switchofftimer", "which state do you want to use?", "device variableactuator device", "automatically switch back to 'no'?"]}
{"id": "398323908", "service_name": "notion_so", "triggers_nn": ["database", "page"], "triggers_params": ["database id", "which database?", "database item type", "what kind of data is in this database?"], "queries_nn": ["title", "organization", "search term", "page", "list", "user"], "queries_params": ["the url for the user's avatar.", "user id", "what do you want to search for?", "the name of the user.", "user email", "user name", "search term", "the email of the user.", "the id of the user.", "avatar url"], "actions_nn": ["list template", "page", "item", "notion"], "actions_params": ["task title", "what is the title of the page?", "what is the status of the to-do item?", "task asignee", "task status", "what is the title of this to-do item?", "database id", "to whom should this to-do item be assigned?", "page title", "what is the body of the page?", "which to-do list?", "parent page", "page body", "task priority", "what is the to-do item's priority level?", "what is the parent page?"]}
{"id": "3", "service_name": "date_and_time", "triggers_nn": ["time", "minute", "year", "day", "month", "week", "hour", "date"], "triggers_params": ["time", "time of day", "date and time", "weekdays", "days of the week", "datetime", "month day", "day of the month", "minutes past the hour"], "queries_nn": [], "queries_params": [], "actions_nn": [], "actions_params": []}
{"id": "402363840", "service_name": "hc_hood", "triggers_nn": ["hood", "carbon filter saturation", "grease filter saturation"], "triggers_params": ["which hood?", "ha id"], "queries_nn": ["carbon filter saturation", "list", "grease filter saturation"], "queries_params": ["which hood?", "ha id"], "actions_nn": ["default program", "hood", "hood program", "brightness", "light", "color"], "actions_params": ["brightness", "program", "which hood?", "fan setting", "ha id", "color"]}
{"id": "4032732", "service_name": "ivideon", "triggers_nn": ["camera", "motion"], "triggers_params": ["camera", "which camera?"], "queries_nn": ["camera", "list"], "queries_params": ["camera", "which camera?"], "actions_nn": ["motion", "sound", "camera", "notification"], "actions_params": ["duration in seconds", "camera", "which camera?", "duration"]}
{"id": "405156688", "service_name": "android_phone", "triggers_nn": ["android device", "number", "phone call"], "triggers_params": ["the contact name associated with the call.", "the phone number that initiated the call.", "phone number", "the time the event occurred", "contactname", "the number that received the call.", "occurredat", "tonumber", "calllength", "the length of the phone call in seconds", "fromnumber"], "queries_nn": [], "queries_params": [], "actions_nn": [], "actions_params": []}
{"id": "408154109", "service_name": "BG_HOME", "triggers_nn": ["status", "pir detector", "body induction", "device", "change"], "triggers_params": ["which device?", "power state", "deviceinfo", "pwr  task", "pir detected", "body induction status"], "queries_nn": [], "queries_params": [], "actions_nn": ["color temperature", "brightness", "device", "color"], "actions_params": ["brightness", "powercontrol changepowerstate string", "which device?", "on of off?", "deviceinfo", "what color temperature?", "what brightness?", "colortemp", "what color?", "color"]}
{"id": "40", "service_name": "diigo", "triggers_nn": ["bookmark", "tag"], "triggers_params": ["time", "single tag", "title", "the description you leave on bookmark, blank otherwise.", "url", "the bookmark title, usually the page title at that url.", "date and time you created bookmark.", "tags", "the url that you bookmarked.", "description", "tags comma seperated.", "tag"], "queries_nn": [], "queries_params": [], "actions_nn": ["bookmark", "diigo account"], "actions_params": ["description", "tags", "url"]}
{"id": "410464123", "service_name": "safetrek", "triggers_nn": ["alarm"], "triggers_params": ["created at", "url to where the alarm occurred", "longitude", "the name of the person that triggered the alarm", "date and time event was created.", "latitude that alarm happened", "name", "location map url", "latitude", "longitude that alarm happened"], "queries_nn": ["list", "noonlight alarm"], "queries_params": ["created at", "url to where the alarm occurred", "longitude", "the name of the person that triggered the alarm", "date and time event was created.", "latitude that alarm happened", "name", "location map url", "latitude", "longitude that alarm happened"], "actions_nn": ["location", "emergency", "address", "noonlight dispatcher"], "actions_params": ["longitude", "address line 2", "city", "street address ", "zip", "state", "address line 1", "lon", "latitude", "apt, suite, unit, etc. ", "lat"]}
{"id": "411434807", "service_name": "hc_washer", "triggers_nn": ["washer", "washer door", "washer cycle", "do content"], "triggers_params": ["which washer?", "ha id"], "queries_nn": ["washer", "washer door", "list", "washer cycle"], "queries_params": ["which washer?", "ha id"], "actions_nn": ["washer program", "washer", "appliance", "setting"], "actions_params": ["program", "spinspeed", "spin speed", "which washer?", "ha id", "temperature"]}
{"id": "414506102", "service_name": "thinga", "triggers_nn": ["time", "rpi", "alarm trigger", "rak", "button", "datum set", "source", "criterion", "bridge", "action", "thinga", "medicine"], "triggers_params": ["click type", "thinga click type", "button number", "fetchit device id", "alarm type", "medication id", "device id", "sensor type", "rak device id", "button id", "raspberry pi id", "medicine"], "queries_nn": ["time", "sensor", "rak", "button", "list", "alarm", "thinga", "medicine"], "queries_params": ["click type", "thinga click type", "button number", "alarm type", "medication id", "medicine", "device id", "rak device id", "button id", "raspberry pi id", "fetchit device id"], "actions_nn": ["raspberry pi", "route", "action", "event", "switchit", "request"], "actions_params": ["raspberry pi id", "switchit id", "status"]}
{"id": "415116683", "service_name": "homey", "triggers_nn": ["time", "flow"], "triggers_params": ["which flow?", "which flow"], "queries_nn": ["flow", "query"], "queries_params": ["which flow?", "which flow"], "actions_nn": ["flow", "tag", "speak"], "actions_params": ["which flow?", "what text", "variable 3", "what text?", "tag 3", "which flow", "variable 1", "variable 2", "which homey?", "tag 1", "tag 2", "which homey"]}
{"id": "415997816", "service_name": "wolfram_data_drop", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["entry", "databin"], "actions_params": ["data", "bin", "data to add", "databin id"]}
{"id": "41", "service_name": "soundcloud", "triggers_nn": ["follower", "playlist", "anyone", "track", "soundcloud", "search query"], "triggers_params": ["the id of the user who uploaded the track.", "date and time the playlist was created.", "title", "imageurl", "playlist", "trackurl", "username", "userprofileurl", "playlist url", "usercountry", "date and time when the profile was created.", "the url to the tracks's soundcloud page.", "playlistusername", "the id of the user who follows you.", "the track's id.", "the track's description. may contain html.", "userprofilecreatedat", "search for", "url to the playlist's image file.", "playlistuserprofileurl", "playlisttitle", "userid", "the url to the profile of the user who created the playlist.", "the name of the user who follows you.", "the country of the user who follows you.", "the url to the profile of the user who uploaded the track.", "playlistduration", "the name of the user who uploaded the track.", "playlistimageurl", "playlistcreatedat", "playlist duration in seconds.", "the profile url of the user who follows you", "the city of the user who follows you.", "the track's tags, comma seperated.", "the id of the playlist.", "playlistid", "embedcode", "trackid", "search query", "url to the track's image file.", "usercity", "the title of the playlist.", "playlisturl", "createdat", "which playlist?", "date and time the track was uploaded.", "the name of the user who created the playlist.", "tags", "description", "html embed code for this track."], "queries_nn": [], "queries_params": [], "actions_nn": ["artist", "upload", "url", "track", "id"], "actions_params": ["title", "track description", "track name", "url", "what is the isrc code of track to like?", "what is the id of the artist on soundcloud?", "audio url", "track isrc", "what is the id of the track to repost?", "search query", "user id", "track id", "description", "tags", "what is the id of the track to like?"]}
{"id": "420435055", "service_name": "cta", "triggers_nn": ["cta", "line rail alert", "rail alert"], "triggers_params": ["the alert's content.", "entrytitle", "entrycontent", "entrypublished", "date alert was created.", "the alert's title.", "the alert's url.", "date the alert was created.", "entryurl"], "queries_nn": ["cta", "list", "line rail alert", "rail alert"], "queries_params": ["the alert's content.", "entrytitle", "entrycontent", "entrypublished", "date alert was created.", "the alert's title.", "the alert's url.", "date the alert was created.", "entryurl"], "actions_nn": [], "actions_params": []}
{"id": "423083547", "service_name": "relay", "triggers_nn": ["button", "wink relay"], "triggers_params": ["which button?", "button id"], "queries_nn": ["button", "list", "wink relay"], "queries_params": ["which button?", "button id"], "actions_nn": [], "actions_params": []}
{"id": "42", "service_name": "buffer", "triggers_nn": ["buffer", "photo", "post"], "triggers_params": ["createdat", "photourl", "dueat", "date and time the post is scheduled to go out.", "the text of the post", "the text of the posts, including any links.", "the first link included in the post.", "text", "the url to the photo.", "date and time the post was added to buffer.", "firstlinkurl"], "queries_nn": [], "queries_params": [], "actions_nn": ["buffer", "photo", "post"], "actions_params": ["description", "message", "update", "photo url"]}
{"id": "430093090", "service_name": "thinka", "triggers_nn": ["monitor sensor contact value", "value", "monitor sensor humidity value", "contact state change", "fire", "humidity", "monitor sensor temperature value", "temperature rise"], "triggers_params": ["traits temperature sensor", "humiditycheck", "traits open close", "temperaturecheck", "traits humidity setting", "device", "state", "humidity value", "temperature"], "queries_nn": ["home environment", "device"], "queries_params": ["device name", "name", "device id", "id"], "actions_nn": ["brightness", "home", "temperature", "thermostat mode", "set color", "off", "scene", "thinka device", "color"], "actions_params": ["status", "hue", "traits color setting", "traits temperature setting", "brightness", "traits brightness", "saturation", "value", "scene name", "temperaturesetpoint", "thermostatmode", "device", "setpoint", "traits thermostat mode setting", "traits scene", "mode", "traits turnon off"]}
{"id": "440404753", "service_name": "dropbox", "triggers_nn": ["photo", "text file", "folder", "file", "link"], "triggers_params": ["the file's path in dropbox.", "path", "the name of the file without extension.", "the file's public url.", "fileurl", "modifieddate", "filenamenoext", "date file was created or modified in dropbox.", "subfolder name", "filename", "the name of the file.", "filepath"], "queries_nn": ["time", "photo", "folder", "name", "list", "text file", "file link", "metadata", "file"], "queries_params": ["the file's path in dropbox.", "path", "the name of the file without extension.", "the file's public url.", "fileurl", "modifieddate", "filenamenoext", "date file was created or modified in dropbox.", "subfolder name", "filename", "file path", "the name of the file.", "filepath"], "actions_nn": ["dropbox", "path", "folder", "url", "location", "folder path", "file name", "text file", "file", "link"], "actions_params": ["body", "path", "url", "file url", "original path", "file name", "content", "filename", "dropbox folder path", "destination path"]}
{"id": "448476114", "service_name": "wattio_smarthome", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["pod", "switch wattio air", "switch air", "switch", "wattio air mode", "level", "security device", "mode", "temperature"], "actions_params": ["ieee", "what mode?", "temperature", "temp", "which pod?", "temperature c", "which appliance?", "temperature?", "appliance", "mode", "which thermic?"]}
{"id": "450515835", "service_name": "yolink", "triggers_nn": ["co", "range", "water", "state", "yolink lock", "yolink", "motion sensor state", "event", "fire", "trigger", "leak sensor", "temperature", "smoke", "door sensor state change", "humidity value", "fob"], "triggers_params": ["deviceid", "button", "temperature alarm", "device", "action", "event type", "humidity alarm"], "queries_nn": ["yolink lock", "motion sensor state", "door sensor state", "list", "state"], "queries_params": ["action", "deviceid", "device"], "actions_nn": ["yolink ir remote", "yolink device", "yolink switch", "valve", "delay", "thermostat", "power strip", "start", "yolink valve controller", "stop alarm", "yolink outlet", "sprinkler", "siren", "scene", "notification", "yolink app"], "actions_params": ["deviceid", "low temperature", "device", "high temperature", "outlet", "delay", "action", "scene", "sceneid", "channel", "fan", "mode"]}
{"id": "452032225", "service_name": "nexx", "triggers_nn": ["garage door", "alarm"], "triggers_params": ["alarm device number", "created at", "date and time event was created.", "device number selected", "garage door number", "devicenumber"], "queries_nn": [], "queries_params": [], "actions_nn": ["garage door", "stay mode", "night mode", "alarm", "mode"], "actions_params": ["alarm device number", "garage door number", "devicenumber"]}
{"id": "458399700", "service_name": "ge_appliances_refrigerator", "triggers_nn": ["minute", "freezer door", "refrigerator", "door", "refrigerator door", "refrigerator freezer door"], "triggers_params": ["which appliance?", "applianceid"], "queries_nn": ["time", "freezer door", "refrigerator door", "list"], "queries_params": ["which appliance?", "applianceid"], "actions_nn": ["temperature set point", "sabbath mode", "ge refrigerator", "refrigerator"], "actions_params": ["status", "freezer-setpoint", "freezer setpoint", "which appliance?", "applianceid", "freshfood-setpoint", "fresh food setpoint", "set sabbath mode"]}
{"id": "460823571", "service_name": "callmebot", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["call", "message", "telegram phone call"], "actions_params": ["message", "language", "language to use?", "voice message?"]}
{"id": "46224189", "service_name": "zense_home", "triggers_nn": ["button", "brightness", "device", "scenario"], "triggers_params": ["select button", "input buttons", "input", "scenario", "select scenario", "select device", "output"], "queries_nn": ["device", "query"], "queries_params": ["full id for this device", "device name", "name of the room for this device", "room name", "device id", "name of the device"], "actions_nn": ["device", "scenario"], "actions_params": ["brightness", "select brightness", "scenario", "select scenario", "select device", "output"]}
{"id": "462395830", "service_name": "angelcam", "triggers_nn": ["incident", "datum", "sensor", "angelcam"], "triggers_params": ["created at", "date and time event was created.", "name of the sensor that sent event which triggered the incident.", "event category that triggered incident.", "full name of the user that is affected by the incident (usually it is you)", "category", "sensor name", "action url", "link that opens angelcam application and allows to verify what's happening. ", "user name"], "queries_nn": ["incident", "list", "angelcam"], "queries_params": ["created at", "date and time event was created.", "name of the sensor that sent event which triggered the incident.", "event category that triggered incident.", "full name of the user that is affected by the incident (usually it is you)", "category", "sensor name", "action url", "link that opens angelcam application and allows to verify what's happening. ", "user name"], "actions_nn": ["sensor", "angelcam", "rt", "notification setting", "arm", "camera", "security incident", "event", "notification"], "actions_params": ["sensor", "title", "sensor ", "occurred at", "camera", "delay", "event timestamp"]}
{"id": "463035463", "service_name": "fleep", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["message", "fleep conversation"], "actions_params": ["hook url", "message", "what message?"]}
{"id": "470205928", "service_name": "nature", "triggers_nn": ["celsius", "set category", "room", "humidity", "value", "temperature rise", "temperature"], "triggers_params": ["what darkness level?", "which device", "value", "device", "what brightness level", "what value"], "queries_nn": ["time", "room", "value", "set category", "list", "alert", "celsius", "humidity", "temperature rise", "temperature"], "queries_params": ["what darkness level?", "which device", "value", "device", "what brightness level", "what value"], "actions_nn": ["air volume setting", "button", "control tv", "air conditioner", "signal", "control light", "scene", "home appliance", "ac operation mode", "appliance", "target temperature"], "actions_params": ["which button", "which button?", "which air conditioner", "which air conditioner?", "air conditioner settings", "air volume"]}
{"id": "470755625", "service_name": "oge", "triggers_nn": ["price change"], "triggers_params": ["smart hours price", "price changed at", "date and time the price changed.", "current price level (can be low, standard, high or critical)."], "queries_nn": [], "queries_params": [], "actions_nn": [], "actions_params": []}
{"id": "478536460", "service_name": "kubu_smart_lock", "triggers_nn": ["applet", "door"], "triggers_params": ["select doors", "select your door"], "queries_nn": [], "queries_params": [], "actions_nn": [], "actions_params": []}
{"id": "47", "service_name": "blogger", "triggers_nn": ["label", "post", "blogger blog"], "triggers_params": ["the post's url.", "the post's content, may contain html.", "url for the first image in the post. if the post doesn't have an image will point to a placeholder image.", "the post's labels, comma seperated.", "postpublished", "posttitle", "date post was created", "label", "posturl", "labels", "postcontent", "the post's title.", "postimageurl", "single label"], "queries_nn": [], "queries_params": [], "actions_nn": ["image", "url", "photo post", "post", "blogger blog"], "actions_params": ["body", "title", "source url", "photo url", "caption", "labels"]}
{"id": "481257410", "service_name": "sharpr", "triggers_nn": ["sharpr post", "file", "sharpr", "tag"], "triggers_params": ["which hub?", "which tag?", "hub", "tag"], "queries_nn": ["time", "sharpr", "sharpr post", "file", "list", "tag"], "queries_params": ["which hub?", "which tag?", "hub", "tag"], "actions_nn": ["description", "title", "file", "url", "file attachment", "post", "sharpr"], "actions_params": ["which tags to add?", "classification", "which classification?", "file url", "tag with", "how to categorize?", "which url to fetch and add as a post?", "category", "what is the headline?", "with insight text", "what is the file's url?", "what is the file url?", "body", "headline", "which hub?", "what is this file's name?", "what is the title?", "hub", "url", "which tags?", "what is the post body?", "filename", "intel text", "file"]}
{"id": "482322200", "service_name": "instar", "triggers_nn": ["capacity", "day", "cloud storage", "alarm upload", "alarm video", "amount", "number", "%", "alarm", "expiration", "cloud storage plan"], "triggers_params": ["created at", "quantity", "date and time event was created.", "cloud storage will expire after", "alarms quantity", "expiration"], "queries_nn": ["camera", "list", "cloud"], "queries_params": [], "actions_nn": ["camera \u2018s alarm email notification", "upload", "alarm email notification", "motion detection", "motion detection area", "tilt camera", "cloud account", "camera", "position", "cloud alarm email notification", "sensitivity", "pan", "email", "alarm recording", "number", "alarm upload today"], "actions_params": ["area 3", "area2", "area 2", "area 4 sensitivity", "cam name", "sensitive4", "area3", "sensitive2", "area1", "area4", "position", "camera name in cloud", "sensitive1", "area 4", "area 1 sensitivity", "sensitive3", "area 2 sensitivity", "area 1", "area 3 sensitivity"]}
{"id": "489173354", "service_name": "uhoo", "triggers_nn": ["target level", "air quality"], "triggers_params": ["sensor", "which uhoo?", "which air quality parameter?", "device", "sign", "what is the target level?", "trigger alert when above or below target level?", "threshold"], "queries_nn": ["time", "air quality", "target level", "list"], "queries_params": ["sensor", "which uhoo?", "trigger action when above or below target level?", "which air quality parameter?", "device", "sign", "what is the target level?", "threshold"], "actions_nn": [], "actions_params": []}
{"id": "489853552", "service_name": "green_light_signal", "triggers_nn": ["co2 emission level"], "triggers_params": ["postcode", "what is your postcode?"], "queries_nn": [], "queries_params": [], "actions_nn": [], "actions_params": []}
{"id": "496127125", "service_name": "nefit_easy", "triggers_nn": ["amount", "room temperature change", "notification", "room temperature", "heating system", "threshold"], "triggers_params": ["deviceid", "which nefit easy?", "temperature changed by how much?", "changed by", "which temperature?", "temperature"], "queries_nn": ["amount", "list", "room temperature change"], "queries_params": ["which nefit easy?", "deviceid", "temperature changed by how much?", "changed by"], "actions_nn": ["choice", "auto mode", "period", "nefit", "mode", "amount", "room temperature", "level", "set point"], "actions_params": ["deviceid", "which amount", "increase temperature by how much?", "duration", "which nefit easy?", "how long?", "decrease temperature by how much?", "which temperature?", "temperature"]}
{"id": "496670143", "service_name": "True_Energy", "triggers_nn": ["hour", "denmark", "electricity co2 emission", "electricity", "electricity price"], "triggers_params": ["area", "select region"], "queries_nn": [], "queries_params": [], "actions_nn": [], "actions_params": []}
{"id": "497672789", "service_name": "envoy", "triggers_nn": ["visitor"], "triggers_params": ["the date and time the visitor signed out.", "expected arrival time", "full name of the visitor.", "date and time when the guest is expected to arrive.", "the name of the person hosting the visitor.", "sign out time", "host name", "full name", "the date and time the visitor signed in.", "the name of the person hosting this visitor.", "sign in time", "the location name where the visitor will be signing in.", "the address of the location where the visitor is scheduled to arrive.", "link to signed agreement (secure link; expires after 1 hour)", "email", "private notes for the receptionist.", "location where the visitor is signing in.", "phone number", "inviter email", "email address of the visitor.", "location address", "the email address of the host.", "agreement link", "inviter name", "the phone number of the visitor.", "location where the visitor is signing in", "location name", "private notes"], "queries_nn": [], "queries_params": [], "actions_nn": [], "actions_params": []}
{"id": "498101673", "service_name": "remoplus", "triggers_nn": ["motion", "remo device", "button", "somebody", "device"], "triggers_params": ["which device?", "device"], "queries_nn": ["time", "motion", "history", "remo device", "button", "list"], "queries_params": ["which device?", "device"], "actions_nn": [], "actions_params": []}
{"id": "4", "service_name": "feed", "triggers_nn": ["feed", "item", "phrase", "keyword"], "triggers_params": ["feed url", "keyword or simple phrase", "query"], "queries_nn": [], "queries_params": [], "actions_nn": [], "actions_params": []}
{"id": "500581199", "service_name": "konkasmart", "triggers_nn": ["motion", "fingerprint identification", "sound", "password", "device", "sensor shake", "camera", "card", "battery", "group", "light", "user", "someone input", "lock", "water leak", "door sensor"], "triggers_params": ["which device/group?", "which device"], "queries_nn": ["device", "group", "list"], "queries_params": ["which device/group?", "which device"], "actions_nn": ["ac", "choosing", "brightness", "temperature", "light", "controller", "ir", "device", "scene", "heat mode", "oscillation function", "fan", "group", "mode", "color"], "actions_params": ["light color", "which device", "brightness", "temperature", "turn on first?", "turn on first", "light brightness", "scene", "ac temperature", "which device/group?", "which scene", "color"]}
{"id": "505717302", "service_name": "wiser_heat", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["heat", "mode", "plug"], "actions_params": ["on or off", "which wiser plug?", "away mode", "smart plug", "plug name"]}
{"id": "508267315", "service_name": "asuszeneye", "triggers_nn": ["vivocam change", "night vision model", "motion event", "vivocam", "sound event"], "triggers_params": ["camera name", "camera list"], "queries_nn": ["vivocam", "list", "sound event"], "queries_params": ["camera name", "camera list"], "actions_nn": ["vivocam base station siren", "vivocam guard mode"], "actions_params": ["hub list", "which base station", "camera list", "which [camera name]"]}
{"id": "50", "service_name": "bitly", "triggers_nn": ["bitlink"], "triggers_params": ["createdat", "the url that you bitmarked, shortened.", "title", "date and time you created bitmark.", "the bitmark title, usually the page title at that url.", "the url that you bitlinked.", "notes", "tags", "longurl", "the note you leave on a bitmark, blank otherwise.", "tags comma seperated.", "shorturl"], "queries_nn": [], "queries_params": [], "actions_nn": ["account", "bitlink"], "actions_params": ["notes", "url"]}
{"id": "513405902", "service_name": "tis_smart_home", "triggers_nn": [], "triggers_params": [], "queries_nn": ["list", "tis support switch"], "queries_params": ["device name"], "actions_nn": ["brightness", "switch", "curtain", "tis support rgb light", "tis relay", "tis mood", "heat", "thermostat", "appliance", "floor heater", "auto", "set color", "tis support dimmer", "tis curtain motor", "rgb", "fan"], "actions_params": ["brightness", "device name", "color"]}
{"id": "513925684", "service_name": "careers_org", "triggers_nn": ["job"], "triggers_params": ["query", "what kind of job opportunity are you looking for?"], "queries_nn": [], "queries_params": [], "actions_nn": [], "actions_params": []}
{"id": "51464135", "service_name": "spotify", "triggers_nn": ["episode", "playlist", "track", "show", "spotify", "library", "music", "album", "search"], "triggers_params": ["artist name", "the date when the episode was released.", "played at", "playlist", "the time at which the track was played.", "show name", "the artist who performed the track.", "episode name", "episode url", "the time at which the show was saved.", "the track's id.", "showid", "episode id", "album cover url", "the url to the show on spotify.", "show cover url", "saved at", "a list of the languages used in the episode, identified by their iso 639 code.", "isrc code for the track.", "episode release date", "track isrc", "the url to the track on spotify.", "the album on which the track appears.", "episode cover art.", "the episode's description. may contain html.", "the time when the episode was saved.", "episode languages", "show url", "track name", "episode description", "show description", "the episode's id.", "show id", "the episode's name.", "track id", "track url", "the name of the show.", "the url to the episode on spotify.", "which playlist?", "the time at which the track was saved.", "an image of the album cover art.", "the show's id.", "album name", "query", "the description of the show.", "episode cover url", "the name of the track."], "queries_nn": ["episode", "playlist", "list", "spotify", "artist", "music", "event", "album", "feature", "time", "query fire", "query", "track", "detail", "information", "show", "user", "track recommendation"], "queries_params": ["what playlist are you searching for?", "artist name", "playlist", "played at", "the url of the playlist's image.", "the time at which the track was played.", "the artist who performed the track.", "playlist url", "what is the name of the track?", "what is the name of the album you are searching for?", "the track's id.", "showid", "the display name of the spotify user that owns the playlist.", "what is the name of the track's artist?", "album cover url", "the url of the track's page on spotify.", "the playlist's spotify id.", "playlist cover image url.", "saved at", "playlist image url", "isrc code for the track.", "enter a valid playlist_id", "the url of the track's spotify page.", "track isrc", "track artists", "enter a valid album_id", "the url to the track on spotify.", "the track's spotify id.", "the album on which the track appears.", "playlist name", "track artist", "the track's album.", "the tracks in the playlist.", "track album", "track name", "the name of the playlist.", "enter a valid track_id", "playlist owner", "trackid", "the spotify playlist id.", "artist", "show id", "track id", "track url", "album id", "which playlist?", "enter a valid artist_id", "the time at which the track was saved.", "album name", "an image of the album cover art.", "playlist id", "playlist owner's name", "the url of the playlist's page on spotify.", "the track's id", "the track's artists.", "playlist tracks", "what is an artist on the album you are searching for?", "artist id", "the name of the track.", "search"], "actions_nn": ["result", "end", "playlist", "track", "context", "playback queue", "trackid", "device", "playback", "spotify", "music", "user", "search"], "actions_params": ["artist name", "playlist", "playlist id", "playlistid", "search query", "track id", "track url", "playlist name"]}
{"id": "514938662", "service_name": "brainyquote", "triggers_nn": ["day", "brainyquote", "quote", "art quote", "nature quote", "love quote"], "triggers_params": ["the quote, may contain html.", "entrytitle", "entrycontent", "the source of the quote.", "the brainyquote url.", "entryurl"], "queries_nn": [], "queries_params": [], "actions_nn": [], "actions_params": []}
{"id": "516751942", "service_name": "dos", "triggers_nn": ["travel warning", "press release", "state department", "alert"], "triggers_params": ["the entry's url.", "entrytitle", "the entry's content, contains html.", "query", "the entry's title.", "entrycontent", "entrypublished", "date entry was created.", "filter by keyword (optional)", "filter by country (optional)", "entryurl"], "queries_nn": ["state department", "list", "alert"], "queries_params": ["the entry's url.", "entrytitle", "the entry's content, contains html.", "the entry's title.", "entrycontent", "entrypublished", "date entry was created.", "entryurl"], "actions_nn": [], "actions_params": []}
{"id": "51", "service_name": "box", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["text file", "path", "file", "box", "url", "folder path", "file name"], "actions_params": ["body", "path", "url", "file url", "file name", "content", "filename", "box folder path"]}
{"id": "528816397", "service_name": "tampa", "triggers_nn": ["tampa", "employment opportunity", "event", "city", "service", "police call"], "triggers_params": ["filter by keyword (optional)", "filter by keyword (recommended)", "query"], "queries_nn": ["tampa", "employment opportunity", "city", "service", "police call", "list"], "queries_params": ["filter by keyword", "filter by keyword (recommended)", "query"], "actions_nn": [], "actions_params": []}
{"id": "52958985", "service_name": "wyzecam", "triggers_nn": ["motion", "sound", "wyze lock", "contact sensor", "wyze cam", "wyze plug", "motion sensor", "wyze switch", "wyze doorbell", "smoke alarm", "wyze bulb", "co alarm", "battery status"], "triggers_params": ["which device", "serialize device info"], "queries_nn": ["time", "motion", "sound", "contact sensor", "instance", "wyze plug", "wyze cam", "list", "motion sensor", "event", "smoke alarm", "wyze bulb"], "queries_params": ["which device", "serialize device info"], "actions_nn": ["wyze bulb color", "wyze lock", "motion detection", "brightness", "color temperature", "wyze switch", "device", "camera", "bulb", "plug", "store", "alert video", "camera alert", "cloud", "notification", "color"], "actions_params": ["which device", "serialize device info", "serialize color temperature", "which brightness", "which color temperature", "serialize brightness", "serialize color", "which color"]}
{"id": "53181749", "service_name": "bart_delay", "triggers_nn": ["station", "bart"], "triggers_params": ["time when the advisory expires.", "advisory message", "details of the bart advisory.", "advisory time", "time of the bart advisory.", "short advisory message", "short abbreviated version of the bart advisory message.", "advisory expires time"], "queries_nn": ["station", "list", "bart"], "queries_params": ["time when the advisory expires.", "advisory message", "details of the bart advisory.", "advisory time", "time of the bart advisory.", "short advisory message", "short abbreviated version of the bart advisory message.", "advisory expires time"], "actions_nn": [], "actions_params": []}
{"id": "537665031", "service_name": "aico", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["scene", "name", "phone", "remote", "button"], "actions_params": ["scene id", "scene name", "key id", "scene", "key name"]}
{"id": "546357801", "service_name": "apa", "triggers_nn": ["issue", "psychology benefit society blog", "update"], "triggers_params": ["filter by keyword (optional)", "query"], "queries_nn": ["issue", "psychology benefit society blog", "update", "list"], "queries_params": ["filter by keyword", "query"], "actions_nn": [], "actions_params": []}
{"id": "548358437", "service_name": "tecan_connect", "triggers_nn": ["instrument", "error", "user interaction", "warning", "tecan instrument", "software", "method", "action", "%", "state change", "custom message", "comment", "end time", "run", "info"], "triggers_params": ["instrument", "state"], "queries_nn": ["list", "software", "action", "user interaction", "instrument", "error", "state"], "queries_params": ["instrument", "state"], "actions_nn": [], "actions_params": []}
{"id": "552388433", "service_name": "amazonclouddrive", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["upload", "path", "url", "file", "amazon cloud drive"], "actions_params": ["url", "file url", "destination", "file name", "cloud drive destination", "filename"]}
{"id": "553491991", "service_name": "AnywareServices", "triggers_nn": ["energy", "value", "intrusion", "adaptor", "temperature rise", "mode scene", "temperature"], "triggers_params": ["created at", "low threshold", "date and time event was created.", "location", "where energy saving mode was activated", "high threshold", "where intrusion was detected"], "queries_nn": ["time", "energy", "query", "value", "applet", "list", "value note", "event", "termperature", "mode scene", "temperature"], "queries_params": ["created at", "low threshold", "date and time event was created.", "location", "where energy saving mode was activated", "high threshold"], "actions_nn": ["adaptor", "intrusion alert", "light"], "actions_params": ["adaptor", "set light level", "set adaptor name", "dimmer"]}
{"id": "553659016", "service_name": "jaguar_watches", "triggers_nn": ["jaguar watch", "pusher"], "triggers_params": ["action", "which press type?"], "queries_nn": [], "queries_params": [], "actions_nn": ["jaguar watch", "vibration"], "actions_params": ["body", "enter a message"]}
{"id": "55702734", "service_name": "ooma", "triggers_nn": ["phone number", "number", "contact list", "voicemail", "call"], "triggers_params": ["called number", "name of caller as listed in user\u2019s contact book, if known. if unknown, will display caller\u2019s name as listed in the national database (cnam). if cnam is unknown, will display \"unknown\".", "duration", "url", "caller name", "phone number type that is associated with the caller, if known. otherwise, will display \u201cunknown\u201d.", "caller number", "caller id phone number of caller. if anonymous, will display \u201canonymous\u201d.", "received at", "date and time voicemail was received.", "phone number that was called.", "caller\u2019s name as listed in the national database (cnam). if cnam is unknown, will display \"unknown\".", "contact type", "a temporary url link to the voicemail .mp3 file.", "duration of voicemail.", "date and time call was received.", "phone number type that is associated with the caller."], "queries_nn": ["time", "phone number", "contact list", "voicemail", "call", "list", "event", "number"], "queries_params": ["called number", "name of caller as listed in user\u2019s contact book, if known. if unknown, will display caller\u2019s name as listed in the national database (cnam). if cnam is unknown, will display \"unknown\".", "duration", "url", "caller name", "date and time call was received.", "caller number", "caller id phone number of caller. if anonymous, will display \u201canonymous\u201d.", "received at", "date and time voicemail was received.", "phone number that was called.", "contact type", "caller\u2019s name as listed in the national database (cnam). if cnam is unknown, will display \"unknown\".", "a temporary url link to the voicemail .mp3 file.", "duration of voicemail.", "phone number type that is associated with the caller, if known. otherwise, will display \u201cunknown\u201d.", "phone number type that is associated with the caller."], "actions_nn": [], "actions_params": []}
{"id": "56429071", "service_name": "nimbus", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["nimbus device", "label"], "actions_params": ["dial-id", "which device?", "dial-label", "dial label"]}
{"id": "576658109", "service_name": "slashdot", "triggers_nn": ["time", "article", "slashdot"], "triggers_params": ["the entry's url.", "entrytitle", "the entry's title.", "entrycontent", "the entry's content, may contain html.", "entrypublished", "date entry was created.", "entryurl"], "queries_nn": ["list", "article", "slashdot"], "queries_params": ["the entry's url.", "entrytitle", "the entry's title.", "entrycontent", "the entry's content, may contain html.", "entrypublished", "date entry was created.", "entryurl"], "actions_nn": [], "actions_params": []}
{"id": "577937646", "service_name": "ihome_enhance", "triggers_nn": ["ihome", "button"], "triggers_params": ["button name", "press", "short or long press"], "queries_nn": ["ihome", "list", "button"], "queries_params": ["button name", "press", "short or long press"], "actions_nn": [], "actions_params": []}
{"id": "586287324", "service_name": "habitify", "triggers_nn": ["status", "mood", "habit note", "log", "habit"], "triggers_params": ["date", "habit", "the level of your mood", "habit id", "the date and time when the event is created", "level"], "queries_nn": ["habit"], "queries_params": ["habit id", "the name of habit", "habit name", "the id of habit"], "actions_nn": ["status", "mood", "note", "log", "habit"], "actions_params": ["status", "note content", "habit id", "unit type", "value", "habit", "content", "mood", "date", "which habit?"]}
{"id": "586796884", "service_name": "itchio", "triggers_nn": ["homepage", "sale", "game"], "triggers_params": ["the entry's url.", "entryimageurl", "entrytitle", "url for the first image in the entry. if the entry doesn't have an image will point to a placeholder image.", "the entry's title.", "entrycontent", "the entry's content, may contain html.", "entrypublished", "date entry was created.", "entryurl"], "queries_nn": [], "queries_params": [], "actions_nn": [], "actions_params": []}
{"id": "587676105", "service_name": "nemy", "triggers_nn": ["grid change", "price", "percentage threshold", "generation", "user", "electricity change", "amount", "price threshold", "grid", "electricity"], "triggers_params": ["what price threshold would you like to use?", "what renewables percent threshold would you like to use?", "what price would you like to trigger on?", "state", "price type", "which state do you live in?", "threshold"], "queries_nn": ["percentage renewable", "electricity price"], "queries_params": ["what price would you like to query?", "price type", "which state do you live in?", "state"], "actions_nn": [], "actions_params": []}
{"id": "58903777", "service_name": "trigger_cmd", "triggers_nn": ["command", "file"], "triggers_params": ["created at", "command", "date and time event was created.", "this is the trigger name for the command.", "computer", "trigger", "this is the computer the command will run on."], "queries_nn": [], "queries_params": [], "actions_nn": ["command", "computer"], "actions_params": ["which command?", "any parameters?", "params", "command"]}
{"id": "590856648", "service_name": "welltory", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["event", "number", "welltory", "activity", "information", "info"], "actions_params": ["when should we stop tracking it?", "what type of data?", "data source", "end", "begin", "value", "data type", "how many entries per event?", "when should we start tracking it?", "briefly describe your applet (optional)", "datetime", "comment", "when is the data sent?", "what service are you tracking from?"]}
{"id": "590993911", "service_name": "soma", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["shades", "position"], "actions_params": ["position", "device name"]}
{"id": "59109479", "service_name": "weather", "triggers_nn": ["monitor", "sunrise", "uv index", "value", "temperature rise", "location", "wind speed", "datum", "fire", "tomorrow", "uv level", "humidity", "temperature", "time", "minute", "weather report", "monitor change", "pollen count", "weather condition", "sunset", "temperature drop", "pollen level", "today"], "triggers_params": ["location", "units", "wind speed", "time", "pollen count", "direction", "wind direction", "uv index", "time of day", "index", "degrees in", "current condition", "humidity", "degrees type", "temperature", "speed", "condition", "humidity (%)", "count"], "queries_nn": ["weather", "sunrise", "uv index", "value", "location", "day forecast", "list", "wind speed", "alert", "tomorrow", "uv level", "humidity", "temperature", "time", "history", "query", "rain", "pollen count", "condition", "snow", "sunset", "pollen level"], "queries_params": ["wind direction", "uv index", "temperature", "location", "speed", "pollen count", "units", "wind speed", "degrees in", "condition", "current condition", "index", "humidity (%)", "humidity", "direction", "count", "degrees type"], "actions_nn": [], "actions_params": []}
{"id": "592487880", "service_name": "festina_watches", "triggers_nn": ["festina", "pusher"], "triggers_params": ["action", "which press type?"], "queries_nn": [], "queries_params": [], "actions_nn": ["festina", "vibration"], "actions_params": ["body", "enter a message"]}
{"id": "594746782", "service_name": "fitbit", "triggers_nn": ["calorie", "aria scale", "day", "weight", "goal", "sleep", "distance goal", "time", "fitbit app", "fitbit log", "floor", "time today", "target hour", "stats", "minute goal", "fitbit tracker sync", "step goal"], "triggers_params": ["your weight", "the date and time you woke up, localized to your fitbit timezone setting", "your body mass index", "veryactiveminutes", "your daily floor climbing goal", "number of calories burned from bmr and activity", "distance climbed", "fairly active minutes", "stepgoal", "minutes in the day you weren't moving much", "date you achieved your step goal", "date you achieved your calorie burn goal", "unit for elevation gain based on your fitbit preferences", "the date and time you fell asleep, localized to your fitbit timezone setting", "target time", "number of steps you have taken", "the unit of your weight measurement (kilograms, pounds, stone)", "calorieburngoal", "totaltimesleptinseconds", "number of floors you've climbed", "caloriesburned", "number of moments you were awake while trying to sleep", "number of floors climbed", "the total time you slept", "the total amount of distance covered", "your daily very active minutes goal", "weightunit", "totaltimeslept", "total steps", "unit of measurement", "timeawakeseconds", "timetofallasleepseconds", "unit for distance covered based on your fitbit preferences", "steps", "lightly active minutes", "number of very active minutes", "the time spent awake, in seconds", "timeawake", "the day of activity", "distancegoal", "the total time you slept, in seconds", "date you achieved your daily floor climbing goal", "timetofallasleep", "dateachieved", "minutes in the day you were moving but not exerting much effort, such as walking", "awokeat", "daily goal type", "total floors climbed", "the date and time of the weight log entry", "restlesscount", "the time spent in bed after awaking, in seconds", "target hours", "fellasleepat", "distanceunit", "minutes in the day doing cardio workouts and high-intensity activities like jogging and running", "total calories burned", "number of calories burned", "your daily calorie burn goal", "awakecount", "total elevation gained", "date you achieved your very active minutes goal", "number of moments you were restless while sleeping", "your daily distance goal", "total distance covered unit", "number of steps taken", "number of seconds before falling asleep", "when do you want to have achieved this goal?", "minutes in the day you were moving enough to elevate your heart rate", "distance", "weight", "the time spent awake", "sedentary minutes", "total distance covered", "timetoleavebedseconds", "veryactiveminutesgoal", "floorsclimbed", "floorsclimbedgoal", "your daily step goal", "the time spent in bed after awaking", "timetoleavebed", "number of minutes before falling asleep", "very active minutes", "which goal?", "distance you have traveled", "total elevation gained unit", "date you achieved your distance goal", "bmi", "date"], "queries_nn": ["calorie", "aria scale", "activity summary event", "list", "weight", "goal", "sleep", "distance goal", "event", "time", "step goal", "fitbit app", "fitbit log", "floor", "target hour", "fitbit", "minute goal"], "queries_params": ["your weight", "the date and time you woke up, localized to your fitbit timezone setting", "your body mass index", "veryactiveminutes", "your daily floor climbing goal", "number of calories burned from bmr and activity", "distance climbed", "stepgoal", "fairly active minutes", "minutes in the day you weren't moving much", "date you achieved your step goal", "date you achieved your calorie burn goal", "unit for elevation gain based on your fitbit preferences", "the date and time you fell asleep, localized to your fitbit timezone setting", "target time", "number of steps you have taken", "the unit of your weight measurement (kilograms, pounds, stone)", "calorieburngoal", "totaltimesleptinseconds", "number of floors you've climbed", "caloriesburned", "number of moments you were awake while trying to sleep", "number of floors climbed", "the total time you slept", "the total amount of distance covered", "your daily very active minutes goal", "weightunit", "totaltimeslept", "total steps", "unit of measurement", "timeawakeseconds", "timetofallasleepseconds", "unit for distance covered based on your fitbit preferences", "steps", "lightly active minutes", "number of very active minutes", "the time spent awake, in seconds", "timeawake", "the day of activity", "distancegoal", "the total time you slept, in seconds", "date you achieved your daily floor climbing goal", "timetofallasleep", "dateachieved", "minutes in the day you were moving but not exerting much effort, such as walking", "awokeat", "daily goal type", "total floors climbed", "the date and time of the weight log entry", "restlesscount", "the time spent in bed after awaking, in seconds", "target hours", "distanceunit", "fellasleepat", "minutes in the day doing cardio workouts and high-intensity activities like jogging and running", "total calories burned", "number of calories burned", "your daily calorie burn goal", "awakecount", "total elevation gained", "date you achieved your very active minutes goal", "number of moments you were restless while sleeping", "your daily distance goal", "total distance covered unit", "number of steps taken", "number of seconds before falling asleep", "when do you want to have achieved this goal?", "minutes in the day you were moving enough to elevate your heart rate", "distance", "weight", "the time spent awake", "sedentary minutes", "total distance covered", "timetoleavebedseconds", "veryactiveminutesgoal", "floorsclimbed", "floorsclimbedgoal", "your daily step goal", "the time spent in bed after awaking", "timetoleavebed", "number of minutes before falling asleep", "very active minutes", "which goal?", "distance you have traveled", "total elevation gained unit", "date you achieved your distance goal", "bmi", "date"], "actions_nn": ["fitbit", "weight measurement"], "actions_params": ["weight unit", "weight"]}
{"id": "59642185", "service_name": "yelp", "triggers_nn": ["km", "location", "business"], "triggers_params": ["sort by", "location", "business in an area"], "queries_nn": ["food delivery transaction", "term", "business"], "queries_params": ["location", "term"], "actions_nn": [], "actions_params": []}
{"id": "597573620", "service_name": "toodledo", "triggers_nn": ["folder", "context", "task", "toodledo list", "tag"], "triggers_params": ["title", "the priority of the task.", "context", "note", "the name of the folder the task is in.", "the date the task was completed.", "duedate", "folder", "folder name", "priority", "completedat", "the date the task is due.", "tag", "single tag", "the title of the task.", "context name", "the note associated with the task.", "tags", "the name of the context the task is in.", "tags comma separated."], "queries_nn": ["folder", "context", "instance", "task", "list", "toodledo list", "tag"], "queries_params": ["title", "context", "the priority of the task.", "note", "the name of the folder the task is in.", "the date the task was completed.", "duedate", "folder", "folder name", "priority", "completedat", "the date the task is due.", "tag", "single tag", "the title of the task.", "context name", "the note associated with the task.", "tags", "the name of the context the task is in.", "tags comma separated."], "actions_nn": ["note", "task", "folder"], "actions_params": ["body", "title", "folder", "priority", "note", "tags", "add to folder", "tag"]}
{"id": "5", "service_name": "sms", "triggers_nn": ["sm", "hashtag symbol", "ifttt phone number", "message"], "triggers_params": ["receivedat", "from", "message", "the phone number you texted ifttt from.", "the date and time you sent a text to ifttt.", "the sms message.", "tag"], "queries_nn": [], "queries_params": [], "actions_nn": ["sm", "phone"], "actions_params": ["message"]}
{"id": "603756155", "service_name": "twitch", "triggers_nn": ["follower", "video", "channel", "stream", "twitch", "user"], "triggers_params": ["the number of followers of your channel.", "channel logo", "date and time event was created.", "the number of channel followers.", "the name of the channel broadcasting the stream.", "follower count", "a url to the image of the channel logo.", "what kind of videos?", "date and time you followed the channel.", "the bio of the user that followed you.", "channel followers", "the name of the game being streamed.", "follower name", "stream preview", "which channel", "created at", "list of follows", "which user?", "a url to the follower's profile on twitch.", "game", "the name of the user who followed your channel.", "date and time the user followed your channel.", "the url to the channel on twitch.", "which user", "what kind of videos", "the url to an image of a preview of the stream.", "the name of the channel you followed.", "channel url", "the current number of viewers of the stream.", "follower bio", "a url to a list of the channels that you follow.", "channel name", "current viewers", "which channel?", "follower url"], "queries_nn": ["follower", "video", "twitch", "list", "week", "event", "channel", "stream"], "queries_params": ["the number of followers of your channel.", "channel logo", "date and time event was created.", "the number of channel followers.", "the url to the video's channel on twitch.", "the name of the channel broadcasting the stream.", "follower count", "a url to the image of the channel logo.", "video url", "what kind of videos?", "date and time you followed the channel.", "video preview image", "the bio of the user that followed you.", "channel followers", "follower name", "the name of the game being streamed.", "video description", "the description of the new top video.", "stream preview", "the url to a preview image of the video.", "which channel", "created at", "list of follows", "a url to the follower's profile on twitch.", "the name of the user who followed your channel.", "game", "date and time the user followed your channel.", "the name of the video's channel", "the url to the channel on twitch.", "the title of the top video.", "what kind of videos", "the url to an image of a preview of the stream.", "the url to the video on twitch.", "the name of the channel you followed.", "video channel url", "follower bio", "channel url", "the current number of viewers of the stream.", "a url to a list of the channels that you follow.", "video channel", "channel name", "current viewers", "video title", "which channel?", "follower url"], "actions_nn": [], "actions_params": []}
{"id": "604033612", "service_name": "SamsungRoomAirconditioner", "triggers_nn": ["air conditioner"], "triggers_params": ["deviceid", "which device?"], "queries_nn": [], "queries_params": [], "actions_nn": ["operation mode", "choice", "air conditioner"], "actions_params": ["which mode?", "deviceid", "mode", "which device?"]}
{"id": "604135243", "service_name": "nice", "triggers_nn": ["door"], "triggers_params": ["which door?", "id interfaccia"], "queries_nn": [], "queries_params": [], "actions_nn": ["door"], "actions_params": ["which door?", "id interfaccia"]}
{"id": "604978379", "service_name": "newsblur", "triggers_nn": ["feed", "newsblur", "user share", "folder", "focus story", "story"], "triggers_params": ["saved story tag", "feed or folder", "blurblog user", "blurblog username", "story tag"], "queries_nn": ["feed", "newsblur", "focus story", "folder", "user", "list", "story"], "queries_params": ["saved story tag", "feed or folder", "blurblog user", "blurblog username", "story tag"], "actions_nn": ["feed", "site", "page url", "story list", "attempt", "blurblog", "story"], "actions_params": ["user tags", "title", "folder", "user comments", "url", "story title", "comments", "content", "story content", "saved tags", "story url", "link url"]}
{"id": "605056257", "service_name": "smappee", "triggers_nn": ["power rise", "appliance", "value", "power", "watt"], "triggers_params": ["service location", "above", "rises above", "below", "drops below", "appliance"], "queries_nn": ["time", "value", "power", "list", "watt"], "queries_params": ["service location", "above", "rises above", "below", "drops below"], "actions_nn": ["plug", "duration"], "actions_params": ["which plug?", "plug", "duration"]}
{"id": "605507431", "service_name": "notebook", "triggers_nn": ["notecard", "image notecard", "file notecard", "notebook", "bookmark notecard", "reminder", "user", "sketch notecard", "text notecard", "checklist notecard", "tag"], "triggers_params": ["created at", "note content", "content of notecard if present", "date and time event was created.", "select notebook", "notebook name", "source url", "tag name", "name of the notecard", "notecard name", "notecard url"], "queries_nn": [], "queries_params": [], "actions_nn": ["notecard", "notebook cover", "image notecard", "html content", "text notecard", "link card", "notebook"], "actions_params": ["note content", "image url", "select notebook", "notebook name", "notecard name", "tags", "html content", "link url"]}
{"id": "607807957", "service_name": "everykit", "triggers_nn": ["message", "everykit"], "triggers_params": ["which everykit?", "trigger command", "what message?", "which every kit"], "queries_nn": [], "queries_params": [], "actions_nn": ["message", "everykit"], "actions_params": ["what message?", "what data", "what data?", "which everykit?", "action message", "which every kit"]}
{"id": "609787381", "service_name": "jotform", "triggers_nn": ["form submission"], "triggers_params": ["form id", "form", "question filter"], "queries_nn": ["form submission", "list"], "queries_params": ["form id", "form", "question filter"], "actions_nn": [], "actions_params": []}
{"id": "610769361", "service_name": "lotus_watches", "triggers_nn": ["lotus", "pusher"], "triggers_params": ["action", "which press type?"], "queries_nn": [], "queries_params": [], "actions_nn": ["lotus", "vibration"], "actions_params": ["body", "enter a message"]}
{"id": "612775799", "service_name": "notion", "triggers_nn": ["door", "window", "move", "water leak", "fire", "alarm", "set temperature threshold", "temperature"], "triggers_params": ["listener id trigger value", "what sensor and event would you like to be notified about?"], "queries_nn": ["move", "alarm", "list", "door"], "queries_params": ["listener id trigger value", "what sensor and event would you like to be notified about?"], "actions_nn": [], "actions_params": []}
{"id": "616193262", "service_name": "Optoma", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["unmute", "light", "volume value", "projector"], "actions_params": ["turn on/off", "level", "device id", "turn on off"]}
{"id": "621629318", "service_name": "amplenote", "triggers_nn": [], "triggers_params": [], "queries_nn": ["time", "note"], "queries_params": ["note", "note uuid"], "actions_nn": ["note", "bullet list item", "task"], "actions_params": ["url", "image", "note", "description", "text", "note uuid"]}
{"id": "62205004", "service_name": "Amba", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["device datum", "amba"], "actions_params": ["devicename", "deviceinternalname", "occurredat", "what is the device internal name?", "data", "indicatesactivity", "what is the friendly name of this device?", "does this event indicate the vip is active?", "when did this event occur?"]}
{"id": "623138897", "service_name": "donation_manager", "triggers_nn": ["appeal", "supporter", "setup", "donation", "giving page", "donation manager"], "triggers_params": ["the new supporter's town.", "the first name of the supporter who has donated.", "telephone", "county", "appealid", "totalgivingpageid", "created at", "visible", "the amount of the new donation.", "surname", "whether the new donation has been cancelled.", "the id of the new supporter.", "the title of the appeal donated to.", "the first line of the new supporter's address.", "the new supporter's forename.", "title", "message", "the title of the total giving page.", "giftaid", "supporterid", "the url of the total giving page donated to.", "town", "date and time supporter was added.", "address1", "the new supporter's postcode.", "appealtitle", "the new supporter's telephone number.", "the new appeal's title.", "date and time appeal was created.", "whether the new supporter has been added to your mailing list.", "supportersurname", "the id of the new appeal.", "postcode", "currency", "whether donations can be made to the page.", "whether the new appeal is active in donation manager.", "country", "address2", "the id of the total giving page", "the title of the appeal the page is in aid of.", "the new supporter's email address.", "the id of the appeal the page is in aid of.", "the id of the total giving page donated to.", "active", "whether the page is active in donation manager.", "date and time page was created.", "the new supporter's title.", "the currency of the new donation.", "repeat", "the first name of the supporter who created the page.", "exchangerate", "mobile", "the id of the supporter who has donated.", "the title of the supporter who created the page.", "the display name the donor has chosen for their donation.", "totalgivingpagetitle", "amount", "the new supporter's county.", "displayname", "id", "supporterfirstname", "supportertitle", "firstname", "whether the page is visible on total giving.", "the title of the supporter who has donated.", "the title of the total giving page donated to.", "url", "the surname of the supporter who created the page.", "fax", "the message accompanying the new donation.", "the surname of the supporter who has donated.", "date and time donation was created.", "the second line of the new supporter's address.", "mailinglist", "the new supporter's mobile number.", "whether the new supporter is active in donation manager.", "email", "the exchange rate of the new donation in relation to gbp.", "whether the new donation has gift aid selected.", "the url of the total giving page.", "the id of the new donation.", "whether the new donation is repeated monthly (m), quarterly (q) or yearly (y).", "the new supporter's fax number.", "the id of the supporter who created the page.", "cancelled", "allowdonations", "the new supporter's surname.", "the new supporter's country.", "the id of the appeal donated to.", "totalgivingpageurl"], "queries_nn": ["donation", "donation manager", "list", "page setup"], "queries_params": ["active", "title", "whether the page is active in donation manager.", "message", "the title of the total giving page.", "date and time page was created.", "giftaid", "supporterid", "the message accompanying the new donation.", "the url of the total giving page donated to.", "the first name of the supporter who has donated.", "the currency of the new donation.", "the surname of the supporter who has donated.", "date and time donation was created.", "repeat", "the first name of the supporter who created the page.", "exchangerate", "appealtitle", "the id of the supporter who has donated.", "the title of the supporter who created the page.", "the display name the donor has chosen for their donation.", "totalgivingpagetitle", "amount", "supportersurname", "appealid", "the exchange rate of the new donation in relation to gbp.", "totalgivingpageid", "created at", "visible", "currency", "displayname", "the amount of the new donation.", "whether donations can be made to the page.", "whether the new donation has gift aid selected.", "id", "supporterfirstname", "supportertitle", "the url of the total giving page.", "whether the page is visible on total giving.", "the id of the new donation.", "whether the new donation is repeated monthly (m), quarterly (q) or yearly (y).", "the title of the supporter who has donated.", "the id of the supporter who created the page.", "the title of the total giving page donated to.", "url", "whether the new donation has been cancelled.", "cancelled", "the title of the appeal donated to.", "allowdonations", "the surname of the supporter who created the page.", "the id of the total giving page", "the title of the appeal the page is in aid of.", "the id of the appeal donated to.", "the id of the appeal the page is in aid of.", "totalgivingpageurl", "the id of the total giving page donated to."], "actions_nn": [], "actions_params": []}
{"id": "623438008", "service_name": "wemo_insight_switch", "triggers_nn": ["mode", "minute", "wemo insight switch", "cost", "value", "device"], "triggers_params": ["which switch?", "which insight switch?", "daily minutes on", "daily cost", "monthly estimated cost", "macaddress"], "queries_nn": ["time", "minute", "wemo insight switch", "mode", "list"], "queries_params": ["daily minutes on", "macaddress", "which switch?", "which insight switch?"], "actions_nn": ["wemo insight switch", "wemo switch"], "actions_params": ["macaddress", "which switch?"]}
{"id": "623911232", "service_name": "broadlink", "triggers_nn": ["status", "tap", "range", "light intensity", "button", "body induction change", "device", "proof", "door sensor", "control", "service", "humidity", "temperature"], "triggers_params": ["light intensity", "humsensor", "doorsensor status", "which device?", "power state", "deviceinfo", "tamperevident", "door sensor status", "pwr  task", "pir detected", "body induction status", "humidity", "trend", "tamper proof status", "envlux", "tempsensor", "temperature"], "queries_nn": ["device", "list"], "queries_params": ["power state", "pwr  task", "which device?", "deviceinfo"], "actions_nn": ["brightness", "pause", "button", "device", "curtain", "tv", "mode", "plug", "temperature", "windspeed", "volume", "action", "scene", "stb", "channel", "action control"], "actions_params": ["what mode?", "adjust brightness", "powercontrol changepowerstate string", "wind speed", "adjust volume", "volumecontrol setmute string", "what temperature?", "volumecontrol adjustvolume num", "channelcontrol changechannel num", "adjust channel", "which scene?", "which device?", "deviceinfo", "windspeedcontrol setwindspeed string", "channelcontrol adjustchannel num", "thermostatcontrol setmode string", "brightnesscontrol adjustbrightness num", "thermostatcontrol setfixedtargettemperature num", "mute adjustment", "what brightness?", "brightnesscontrol setbrightness num", "on or off?", "channel number"]}
{"id": "629925599", "service_name": "cisco_spark", "triggers_nn": ["message", "someone", "room"], "triggers_params": ["roomid", "which room?"], "queries_nn": ["message", "someone", "list", "room"], "queries_params": ["roomid", "which room?"], "actions_nn": ["mail", "title", "room", "message", "spark", "user", "spark room", "archive", "file"], "actions_params": ["title", "room", "message", "file url", "email", "roomid", "text", "file", "personemail", "room title"]}
{"id": "632237541", "service_name": "works_with_cavius", "triggers_nn": ["mode", "alarm"], "triggers_params": ["which hub", "which alarm", "what new mode", "what did it", "what is the new mode", "what has triggered"], "queries_nn": ["list", "hub"], "queries_params": ["the id of the hub", "name of the hub", "hub id", "hub label"], "actions_nn": ["alarm mode"], "actions_params": ["which system", "what is the new alarm mode", "new alarm mode", "which alarm"]}
{"id": "632510338", "service_name": "pivot_power_genius", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["pivot power genius outlet"], "actions_params": ["which outlet?", "outlet-id"]}
{"id": "637201122", "service_name": "wemo_lighting", "triggers_nn": ["wemo", "wemo light", "level", "switch", "specifcy"], "triggers_params": ["subtype", "macaddress", "dimmed level?", "which device?"], "queries_nn": ["wemo light", "list"], "queries_params": ["macaddress", "which device?"], "actions_nn": ["time", "brightness level", "wemo light", "sleep fader", "group", "set"], "actions_params": ["fader time (in minutes)", "subtype", "which group?", "which device?", "groupid", "dimmed level?", "macaddress"]}
{"id": "637877174", "service_name": "somfy_protect", "triggers_nn": ["detection", "night mode", "alarm", "intrusion", "myfox security system", "alert"], "triggers_params": ["site id", "which system?"], "queries_nn": ["time", "detection", "myfox security system", "list", "alert", "night mode", "event", "alarm", "intrusion"], "queries_params": ["site id", "which system?"], "actions_nn": ["db siren", "shutter", "myfox security camera", "security mode", "myfox security system"], "actions_params": ["shutter action", "open or close the shutter", "which system?", "camera id", "site id", "which myfox security camera?", "security mode", "level"]}
{"id": "642877783", "service_name": "bouncie", "triggers_nn": ["vehicle exit", "range", "vehicle drive", "distance", "engine", "trip", "vehicle renewal", "care event", "vehicle brake", "time", "circle", "vehicle fuel economy", "acceleration", "speed", "battery event", "time range", "bouncie adapter", "fuel", "geo", "insurance", "vehicle"], "triggers_params": ["circle", "vehicle", "which vehicle?", "drive alert"], "queries_nn": ["time", "distance", "list", "time range", "engine", "bouncie adapter", "vehicle brake", "trip", "vehicle", "vehicle renewal"], "queries_params": ["circle", "vehicle", "which vehicle?", "drive alert"], "actions_nn": [], "actions_params": []}
{"id": "6430179", "service_name": "boxcar_2", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["inbox", "image", "notification"], "actions_params": ["body", "sound", "image url", "title", "url", "source url", "alert sound"]}
{"id": "650643717", "service_name": "netatmo", "triggers_nn": ["air pressure", "noise", "value", "day", "rain gauge", "wind speed", "rainfall measurement", "humidity", "temperature", "time", "gust speed", "yesterday", "decibel value", "carbon dioxide", "temperature rise", "percentage"], "triggers_params": ["target speed", "threshold units", "unit of measure", "which station?", "target noise level", "speed in", "degrees in", "target humidity percentage", "target carbon dioxide", "measure source", "target pressure", "threshold value", "target temperature"], "queries_nn": ["noise", "air pressure", "value", "day", "rain gauge", "list", "wind speed", "rainfall measurement", "event", "humidity", "temperature", "time", "gust speed", "netatmo rain gauge", "decibel value", "threshold value", "carbon dioxide", "temperature rise", "percentage"], "queries_params": ["target speed", "threshold units", "unit of measure", "target noise level", "speed in", "degrees in", "target pressure", "target humidity percentage", "target carbon dioxide", "measure source", "which station?", "threshold value", "target temperature"], "actions_nn": [], "actions_params": []}
{"id": "65067518", "service_name": "google_assistant", "triggers_nn": ["exercise", "pm", "nest thermostat", "score", "tweet", "phrase", "google", "google assistant", "block time"], "triggers_params": ["what do you want to say?", "voice input 2", "supported languages for user", "what do you want the assistant to say in response?", "tts response", "voice input 3", "and another way? (optional)", "what's another way to say it? (optional)", "voice input 1", "language"], "queries_nn": ["exercise", "pm", "nest thermostat", "list", "score", "phrase", "tweet", "google", "google assistant", "block time"], "queries_params": ["what do you want to say?", "voice input 2", "supported languages for user", "what do you want the assistant to say in response?", "tts response", "and another way?", "voice input 3", "what's another way to say it?", "voice input 1", "language"], "actions_nn": [], "actions_params": []}
{"id": "651849913", "service_name": "if_notifications", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["ifttt app", "device", "notification"], "actions_params": ["image url", "message", "title", "link url"]}
{"id": "662986931", "service_name": "mobilinc", "triggers_nn": ["status", "motion", "wave device", "z", "program", "triggerlinc", "state", "security area", "lock", "water leak", "%", "integer variable", "door sensor", "battery", "insteon"], "triggers_params": ["which sensor should we monitor?", "program id", "which program should we monitor?", "which device should we monitor?", "lock id", "trigger when the lock is?", "date time", "trigger when the sensor changes to?", "trigger when the program is?", "status values on off any", "sensor id", "trigger when the area's status is?", "which security area should we monitor?", "trigger when the variable current value is?", "status values security area alarm state", "the battery percentage remaining ", "status values lock unlock jammed", "name", "trigger when the device changes to?", "device id", "the z-wave id that is reporting low battery", "status values on off", "status", "variable value", "which lock should we monitor?", "program status values", "the date and time the trigger fired.", "variable id", "the name of the z-wave device that is reporting low battery", "which variable should we monitor?", "area id"], "queries_nn": ["status", "lock", "wave device", "z", "insteon", "list"], "queries_params": ["status values lock unlock jammed", "status values on off any", "which lock should we monitor?", "trigger when the device changes to?", "which device should we monitor?", "device id", "lock id", "trigger when the lock is?"], "actions_nn": ["garage door", "wave light", "z", "program", "arm", "dim", "state", "unlock", "integer variable", "custom value", "thermostat", "insteon iolinc", "insteon", "mode", "x10 device", "wave", "security area", "condition", "lock", "setpoint", "scene", "wave lock"], "actions_params": ["iolinc id", "which lock should mobilinc adjust?", "program values", "program id", "status values thermostat mode", "what action should mobilinc apply to the program?", "lock id", "which thermostat should mobilinc adjust?", "should mobilinc open or close the garage door?", "status values lock unlock", "status values setpoint", "what should the light be set to?", "which variable should mobilinc set?", "which scene should mobilinc adjust?", "which security area should mobilinc adjust?", "which iolinc is connected to the garage door?", "what value should mobilinc set?", "should mobilinc lock or unlock the door?", "which light should mobilinc adjust?", "which program should mobilinc adjust?", "device id", "what should the scene be set to?", "device id dim", "status values on off", "what should the switch be set to?", "when the iolinc sensor is on, is the garage door closed?", "what setpoint should the thermostat be set to?", "scene id", "variable value", "status values on off dim", "what security area mode should mobilinc set?", "which switch should mobilinc adjust?", "what mode should the thermostat be set to?", "variable id", "status values security area", "thermostat id", "area id", "answer yes no", "status values open close"]}
{"id": "664453102", "service_name": "smartnest", "triggers_nn": ["door", "value", "contact sensor", "movement sensor", "device", "doorbell", "event", "temperature"], "triggers_params": ["condition", "device", "temperature", "state"], "queries_nn": [], "queries_params": [], "actions_nn": ["doorbell ring", "lock", "unlock", "door", "device"], "actions_params": ["action", "device", "state"]}
{"id": "667760485", "service_name": "glanceclock", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["alarm", "notice", "glance clock", "trigger glance app", "segment"], "actions_params": ["app", "length", "sound", "animation color", "start hour", "duration", "message", "animation type", "subject", "text", "animation", "start", "clock", "color"]}
{"id": "672206851", "service_name": "mysa_thermostat", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["setpoint", "device", "value"], "actions_params": ["which thermostat would you like to adjust?", "setpoint", "device", "what would you like the setpoint to be?"]}
{"id": "673234968", "service_name": "hc_oven", "triggers_nn": ["clock timer", "phase", "child lock", "door", "oven"], "triggers_params": ["which oven?", "ha id"], "queries_nn": ["time", "clock timer", "door", "oven", "list", "phase", "child lock", "oven cycle"], "queries_params": ["which oven?", "ha id"], "actions_nn": ["air program", "duration", "oven", "oven program", "option", "heating mode", "temperature"], "actions_params": ["duration", "program", "which oven?", "ha id", "temperature"]}
{"id": "673452077", "service_name": "phyn", "triggers_nn": ["phyn", "alert"], "triggers_params": ["which home?", "alert type", "device id", "which type of alert?"], "queries_nn": [], "queries_params": [], "actions_nn": ["plumbing check", "water", "home"], "actions_params": ["home id", "which home?"]}
{"id": "675173508", "service_name": "surveymonkey", "triggers_nn": ["list", "contact", "survey response", "surveymonkey", "survey"], "triggers_params": ["date and time event was created.", "preview url", "summary url", "analyze url", "the url to the survey collectors page on surveymonkey.", "the url to the survey analyze page on surveymonkey.", "edit url", "which list", "which survey", "which survey?", "the name of the survey.", "collect url", "created at", "which list?", "the url to the survey preview page on surveymonkey.", "the url to the survey summary page on surveymonkey.", "the url to the survey design page on surveymonkey.", "the number of questions on the survey.", "survey name", "question count"], "queries_nn": ["list", "contact", "survey response", "surveymonkey", "survey"], "queries_params": ["date and time event was created.", "preview url", "summary url", "analyze url", "the url to the survey collectors page on surveymonkey.", "the url to the survey analyze page on surveymonkey.", "edit url", "which list", "which survey", "which survey?", "the name of the survey.", "collect url", "created at", "which list?", "the url to the survey preview page on surveymonkey.", "the url to the survey summary page on surveymonkey.", "the url to the survey design page on surveymonkey.", "the number of questions on the survey.", "survey name", "question count"], "actions_nn": ["contact", "list"], "actions_params": ["first name", "which list?", "which list", "last name", "email address"]}
{"id": "67735607", "service_name": "pryv", "triggers_nn": ["note", "photo", "pryv stream", "value"], "triggers_params": ["unit", "which stream?", "streamid", "eventtype"], "queries_nn": ["time", "note", "photo", "value", "pryv stream", "list"], "queries_params": ["unit", "which stream?", "streamid", "eventtype"], "actions_nn": ["note", "photo", "value", "stream", "file"], "actions_params": ["eventtype", "value", "file url", "photo url", "numericalvalue", "content", "attachmenturl", "unit", "which stream?", "description", "tags", "filename", "contenttext", "streamid"]}
{"id": "677360550", "service_name": "woopla", "triggers_nn": ["voice message", "phone call", "trigger hotline"], "triggers_params": ["enter a 3-digit code", "trigger code"], "queries_nn": ["query hotline", "voice message", "list", "phone call"], "queries_params": ["enter a 3-digit code", "trigger code"], "actions_nn": ["phone number", "mp3", "file", "text"], "actions_params": ["phone number", "url", "tts", "text", "language"]}
{"id": "680794858", "service_name": "hc_dishwasher", "triggers_nn": ["dishwasher cycle", "salt supply", "dishwasher door", "dishwasher", "aid supply"], "triggers_params": ["which dishwasher?", "ha id"], "queries_nn": ["dishwasher cycle", "dishwasher", "list"], "queries_params": ["which dishwasher?", "ha id"], "actions_nn": ["minute", "minimum", "noise level", "dishwasher", "dishwasher program", "demand", "silence", "appliance"], "actions_params": ["which dishwasher?", "program", "ha id"]}
{"id": "681190697", "service_name": "kaiterra", "triggers_nn": ["threshold", "location", "device", "aqi"], "triggers_params": ["device udid", "location", "what is your location?", "what is your aqi threshold?", "which device do you want to monitor?", "threshold"], "queries_nn": ["threshold", "location", "list", "aqi"], "queries_params": ["location", "what is your location?", "what is your aqi threshold?", "threshold"], "actions_nn": [], "actions_params": []}
{"id": "684729114", "service_name": "asukaiot", "triggers_nn": ["lock", "sensor", "device"], "triggers_params": ["unlock the lock list", "sensor is open list", "device is turned on list", "sensor is close list", "which device?", "which sensor?", "which lock?", "device is turned off list"], "queries_nn": ["light", "on", "sensor", "state"], "queries_params": ["my list"], "actions_nn": ["mode", "timer schedule", "press combination", "device", "switch", "set"], "actions_params": ["activate scene list", "turn on list", "which light?", "turn off list"]}
{"id": "68561686", "service_name": "NethomePlusAC", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["wind", "auto", "left", "speed", "up", "air conditioner", "air conditioner temperature setpoint", "action", "right wind", "fan", "operating mode"], "actions_params": ["command", "control your device", "please choose your device", "appliancelist"]}
{"id": "687223723", "service_name": "aquarea_smart_cloud", "triggers_nn": ["device", "error"], "triggers_params": ["deviceid", "which device?"], "queries_nn": ["device", "list", "error"], "queries_params": ["deviceid", "which device?"], "actions_nn": ["mode", "tank mode", "change operation setting", "heat mode", "eco mode", "device", "comfort mode"], "actions_params": ["operation setting for tank", "target temperature for zone1", "tank operation", "deviceid", "target temperature", "zone1 target temperature", "zone2 target temperature", "which device?", "which eco setting?", "zone2 operation", "which comfort setting?", "mode setting", "operation setting for zone1", "operation setting for zone2", "tank target temperature", "zone1 operation", "which quiet setting?", "target temperature for zone2"]}
{"id": "690473090", "service_name": "lifx", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["choice", "light", "duration", "cycle", "lixf z light", "pattern", "lifx", "scene", "color"], "actions_params": ["fade out duration", "which lights?", "brightness", "breathe if off", "number of breaths", "turn on first?", "number of moves", "blink if off", "move if off", "scene", "advanced options", "color if off", "number of blinks", "transition duration", "selector", "direction", "fade in duration", "color"]}
{"id": "695788725", "service_name": "nano_lol", "triggers_nn": ["nano", "address"], "triggers_params": ["from address", "(optional) which nano address needs to send the transaction?", "min amount", "which nano address to track?", "nano address", "(optional) what is the minimum nano required?"], "queries_nn": ["transaction", "nano address"], "queries_params": ["which nano address would you like to search?", "nano address"], "actions_nn": [], "actions_params": []}
{"id": "696562578", "service_name": "isitchristmas", "triggers_nn": ["christmas", "time zone"], "triggers_params": ["which timezone?", "timezone"], "queries_nn": [], "queries_params": [], "actions_nn": [], "actions_params": []}
{"id": "69", "service_name": "blink1", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["event", "blink"], "actions_params": ["rule name"]}
{"id": "6", "service_name": "email", "triggers_nn": ["email", "ifttt", "trigger fire", "hashtag", "subject"], "triggers_params": ["email body html, with most signatures stripped out.", "body", "email address of sender.", "from", "the url to the first file attachment, if included, that anyone can visit for 30 days.", "receivedat", "attachmenttemporaryurl", "email body, with most signatures stripped out.", "bodyhtml", "attachmenturl", "email subject line.", "the url to the first file attachment, if included.", "date and time email was received.", "subject", "tag"], "queries_nn": [], "queries_params": [], "actions_nn": ["html", "email"], "actions_params": ["body", "subject"]}
{"id": "701104889", "service_name": "android_battery", "triggers_nn": ["android device", "battery", "%"], "triggers_params": ["the time the device was unplugged.", "batterypercentage", "the time the device was plugged in.", "occurredat", "the battery percentage of the device.", "the source of the charge.", "the time the device's battery became low.", "powersource"], "queries_nn": [], "queries_params": [], "actions_nn": [], "actions_params": []}
{"id": "701262636", "service_name": "wemo_dimmer", "triggers_nn": ["press", "seconds", "wemo"], "triggers_params": ["macaddress", "which dimmer?"], "queries_nn": ["seconds", "press", "wemo dimmer", "list", "dimmer"], "queries_params": ["macaddress", "which dimmer?"], "actions_nn": ["level", "change brightness", "wemo", "percentage"], "actions_params": ["brightness level", "subtype", "macaddress", "which dimmer?"]}
{"id": "702301322", "service_name": "hc_dryer", "triggers_nn": ["dryer", "container", "dryer cycle", "drying process", "lint filter", "dryer door"], "triggers_params": ["which dryer?", "ha id"], "queries_nn": ["event", "dryer", "container", "cycle", "lint filter", "dryer door", "list"], "queries_params": ["which dryer?", "ha id"], "actions_nn": ["dryer", "duration", "program", "intelligentdry", "setting", "dryer program", "appliance", "time program"], "actions_params": ["duration", "which dryer?", "program", "drying target", "ha id"]}
{"id": "702449273", "service_name": "orro", "triggers_nn": ["scene", "light", "group", "mode", "switch"], "triggers_params": ["created at", "target", "date and time event was created.", "which scene do you want to trigger the applet?", "scene", "which switch (or group) do you want to trigger this applet?"], "queries_nn": [], "queries_params": [], "actions_nn": ["group", "home", "mode", "switch"], "actions_params": ["target", "value", "set dimmer to", "which lights do you want to set the dimmer?", "which lights do you want to turn on?", "which lights do you want to turn off?"]}
{"id": "703096546", "service_name": "who", "triggers_nn": ["disease outbreak update", "update", "world health organization"], "triggers_params": ["filter by keyword (optional)", "query"], "queries_nn": ["disease outbreak update", "update", "list"], "queries_params": ["filter by keyword", "query"], "actions_nn": [], "actions_params": []}
{"id": "709843814", "service_name": "MsmartMicrowave", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["work mode", "microwave"], "actions_params": ["command", "appliancelist", "set cook time", "which appliance?", "addtioncommand2", "preset  cook mode", "cooking status", "set power level", "addtioncommand1"]}
{"id": "709896750", "service_name": "google_docs", "triggers_nn": ["document", "google drive folder"], "triggers_params": ["path", "drive folder path"], "queries_nn": ["document", "google drive folder", "list"], "queries_params": ["path", "drive folder path"], "actions_nn": ["google document", "path", "file name", "folder path"], "actions_params": ["body", "path", "document name", "content", "filename", "drive folder path"]}
{"id": "710218389", "service_name": "delphy", "triggers_nn": [], "triggers_params": [], "queries_nn": ["device status"], "queries_params": [], "actions_nn": ["ac", "ifttt", "home", "room", "action", "box", "default home", "tv", "scene", "appliance"], "actions_params": ["switch appliance", "scene name", "switch appliance name", "room name", "ir app"]}
{"id": "712182873", "service_name": "tmt_chow", "triggers_nn": ["gate", "sensor", "safety device", "gate motor hall sensor", "protection"], "triggers_params": ["device name", "uuid"], "queries_nn": ["device operation", "day record", "day", "record", "device"], "queries_params": ["device name", "uuid"], "actions_nn": ["gate", "chow hub"], "actions_params": ["pin code", "device name", "pincode", "door name", "uuid"]}
{"id": "715397569", "service_name": "dlink_wifi_router", "triggers_nn": ["d", "name", "password", "information", "client device disconnect", "client device", "host wi", "fi status", "link router", "guest wi"], "triggers_params": ["client name", "mydlink no", "which client?", "which device?"], "queries_nn": ["d", "connection", "name", "password", "information", "list", "client device disconnect", "client device", "host wi", "fi status", "link router"], "queries_params": ["client name", "mydlink no", "which client?", "which device?"], "actions_nn": ["d", "fi network", "wi", "link router", "reboot", "guest wi", "fi"], "actions_params": ["mydlink no", "which device?"]}
{"id": "716476068", "service_name": "imwork", "triggers_nn": ["chat message"], "triggers_params": ["target chat", "chat"], "queries_nn": ["team", "list"], "queries_params": ["name of the team", "team name", "team id"], "actions_nn": ["text message", "document", "message", "image", "chat"], "actions_params": ["image url", "message text", "chat", "text", "document url", "target chat"]}
{"id": "72331922", "service_name": "zware", "triggers_nn": ["wave sensor", "carbon monoxide", "motion", "temperature", "z", "window", "luminance", "smoke", "water leak", "humidity", "wave door", "carbon dioxide", "temperature rise", "threshold"], "triggers_params": ["temperature threshold", "which carbon dioxide sensor?", "which carbon monoxide sensor?", "which luminance sensor device?", "device name", "thld value", "humidity threshold", "which contact sensor?", "humidity unit", "which motion sensor?", "which temperature sensor device?", "luminance unit", "which water sensor?", "thld unit", "which smoke sensor?", "which humidity sensor device?", "temperature unit", "luminance threshold"], "queries_nn": ["wave sensor", "carbon monoxide", "water leak", "wave door", "z", "window", "list"], "queries_params": ["which contact sensor?", "which carbon monoxide sensor?", "device name", "which water sensor?"], "actions_nn": ["auto mode", "wave switch", "z", "wave", "wave thermostat", "unlock", "level", "wave door", "mode"], "actions_params": ["device state", "which device?", "device name", "what level?"]}
{"id": "729494709", "service_name": "smartliving", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["bus door", "bus scene", "set level", "value", "switch", "sl", "bus device", "bus curtain"], "actions_params": ["device list", "scenes", "levels", "devices"]}
{"id": "73138148", "service_name": "muslim_prayer_time", "triggers_nn": ["time", "prayer"], "triggers_params": ["isha", "duhr", "location", "fajr", "calculation methods", "high latitude rules", "maghrib", "mathhab", "asr", "suhur / sehri", "asr calculation - juristic method", "iftar"], "queries_nn": [], "queries_params": [], "actions_nn": [], "actions_params": []}
{"id": "733104341", "service_name": "wifiplug", "triggers_nn": ["wifiplug"], "triggers_params": ["which switch?", "which switch"], "queries_nn": ["wifiplug", "list"], "queries_params": ["which switch?", "which switch"], "actions_nn": ["wifiplug"], "actions_params": ["which switch?", "which switch"]}
{"id": "734110872", "service_name": "nanoleaf", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["brightness", "device dropdown", "percentage", "nanoleaf light panel", "state", "nanoleaf product", "scene", "screen", "canvas", "color"], "actions_params": ["value", "which scene?", "duration", "for how many seconds?", "dim by", "which device?", "notification type", "blinking or solid color?", "which color?", "my scenes", "brightness level?", "my devices"]}
{"id": "736747042", "service_name": "salesforce", "triggers_nn": ["minute", "opportunity", "object", "sobject", "won", "fire", "stage", "salesforce", "ifttt event", "trigger", "record"], "triggers_params": ["the owner of the opportunity's name", "link to opportunity", "the name of the opportunity.", "the url to the opportunity.", "the date and time of the update.", "the amount of the opportunity.", "name", "type", "sobject", "amount", "timestamp", "owner name", "event type", "query criteria"], "queries_nn": ["salesforce", "object", "list", "record being"], "queries_params": ["query criteria", "sobject"], "actions_nn": ["field", "record", "message", "chatter", "sobject", "chatter feed", "group", "file", "link"], "actions_params": ["field name 2", "field value 4", "field value 3", "field name 4", "file url", "message", "file name", "field name 3", "sobject", "field value 2", "field value 5", "field value 1", "field name 5", "group", "link", "field name 1", "link url"]}
{"id": "739346241", "service_name": "hive_view_outdoor", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["view camera", "hive camera monitoring"], "actions_params": ["camera"]}
{"id": "746298429", "service_name": "nj_transit", "triggers_nn": ["nj transit bus advisory", "light rail advisory"], "triggers_params": ["filter by bus line (recommended)", "query", "filter by light rail line (optional)"], "queries_nn": ["nj transit bus advisory", "light rail advisory", "list"], "queries_params": ["filter by bus line (recommended)", "filter by light rail line", "query"], "actions_nn": [], "actions_params": []}
{"id": "751599729", "service_name": "hearlink", "triggers_nn": ["program change", "volume", "hearing aid", "connection", "phone", "mobile", "battery"], "triggers_params": ["device type of the hearing aid.", "programid", "program id", "battery percentage", "date and time of occurrence.", "occured at", "mute state", "hidevice type", "battery status of the hearing aid in percentage.", "volume level on the hearing aid.", "volume level", "mute state of the hearing aid."], "queries_nn": ["time", "hearing aid", "connection", "mobile", "list"], "queries_params": ["device type of the hearing aid.", "date and time of occurrence.", "occured at", "mute state", "hidevice type", "mute state of the hearing aid."], "actions_nn": ["iphone", "aid", "volume", "hearing aid", "text", "program", "speech"], "actions_params": ["program id", "volume level", "text to be played by speech", "program id to be set", "what volume level?", "text tospeech"]}
{"id": "751829170", "service_name": "simplehuman", "triggers_nn": ["mirror", "battery"], "triggers_params": ["for which mirror?", "device id"], "queries_nn": ["mirror", "batter", "list", "alert"], "queries_params": ["for which mirror?", "device id"], "actions_nn": ["timer", "brightness", "alarm", "value", "mirror", "color temperature"], "actions_params": ["for which mirror?", "timer mins", "brightness", "length of timer?", "what light setting?", "device id", "how bright?", "profile id"]}
{"id": "755240890", "service_name": "moonside", "triggers_nn": [], "triggers_params": [], "queries_nn": ["on", "off status", "light"], "queries_params": [], "actions_nn": ["party scene", "moonside light", "youtube", "percent brightness", "light", "lighting effect", "pixel mode", "music", "rainbow lighting effect", "color"], "actions_params": []}
{"id": "75634927", "service_name": "wemo_switch", "triggers_nn": ["wemo switch"], "triggers_params": ["macaddress", "which switch?", "which switch"], "queries_nn": ["time", "wemo switch", "list"], "queries_params": ["macaddress", "which switch?", "which switch"], "actions_nn": ["wemo switch"], "actions_params": ["macaddress", "which switch?"]}
{"id": "763174773", "service_name": "neosmartblinds", "triggers_nn": [], "triggers_params": [], "queries_nn": ["account", "controller", "information"], "queries_params": ["indicates by yes or no whether the smart controller is online", "name", "is online", "this represents the name of the smart controller."], "actions_nn": ["scene"], "actions_params": ["what is the name of the scene?", "scene name"]}
{"id": "765797568", "service_name": "AduroSmart", "triggers_nn": ["contact switch sensor", "motion sensor"], "triggers_params": ["whichcontactsensor", "whichmotionsensor", "which contact sensor?", "which motion sensor?", "which contact sensor ?"], "queries_nn": ["list", "motion sensor", "contact switch sensor"], "queries_params": ["whichmotionsensor", "which contact sensor?", "whichcontactsensor", "which motion sensor?"], "actions_nn": ["scene", "color loop", "light", "color loop effect", "color light", "device", "color"], "actions_params": ["colorvalue", "brightness", "which scene?", "cycletime", "which device?", "color value or name", "whichscene", "selectdevice", "cycle time"]}
{"id": "767950622", "service_name": "inoreader", "triggers_nn": ["feed", "bundle", "rss", "result", "folder", "article", "tag", "something", "web page", "subscription", "inoreader user", "search", "network", "blog", "inoreader"], "triggers_params": ["bundle name", "date and time bundle was created.", "subscription url", "the url of the bundle on inoreader.", "date subscribed", "bundle url", "creator profile url", "active search", "comma-separated list of folders for the subscription.", "filter", "creator name", "the html url of the subscription.", "created at", "the date and time of the subscription.", "bundle image", "folder", "the profile url of the user who created the bundle.", "subscription title", "the number of feeds included in this bundle.", "which folder?", "the title of the subscription.", "the description of the bundle.", "folders", "the name of the bundle.", "tag", "the image of the bundle.", "the name of the user who created the bundle.", "bundle description", "the rss url of the subscription.", "subscription rss url", "feeds count"], "queries_nn": ["feed", "bundle", "article", "folder", "list", "blog", "tag", "time", "result", "rss", "something", "web page", "inoreader user", "search", "network", "inoreader"], "queries_params": ["bundle name", "date and time bundle was created.", "subscription url", "the url of the bundle on inoreader.", "date subscribed", "bundle url", "creator profile url", "active search", "comma-separated list of folders for the subscription.", "filter", "creator name", "the html url of the subscription.", "the date and time of the subscription.", "created at", "bundle image", "folder", "the profile url of the user who created the bundle.", "subscription title", "the number of feeds included in this bundle.", "which folder?", "the title of the subscription.", "the description of the bundle.", "folders", "the name of the bundle.", "tag", "the image of the bundle.", "the name of the user who created the bundle.", "bundle description", "the rss url of the subscription.", "subscription rss url", "feeds count"], "actions_nn": ["inoreader", "rss feed", "folder", "url", "article", "web page", "subscription", "mark"], "actions_params": ["folder", "period", "page url", "subscription", "which folder?", "which subscription?", "folders", "feed rss url", "period of time", "tag"]}
{"id": "771589028", "service_name": "zohocliq_eu", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["action post", "message", "chat"], "actions_params": ["title", "card theme", "web url", "external link", "select a chat", "id", "theme", "thumbnail url", "text"]}
{"id": "771775568", "service_name": "switchur", "triggers_nn": ["automation"], "triggers_params": ["automations", "which result should it have?", "evaluation result", "which automation?"], "queries_nn": [], "queries_params": [], "actions_nn": ["word", "decrement", "increment", "action", "switchboard switch", "sentence", "switchboard keyword", "switchboard counter"], "actions_params": ["switchboard keyword item", "which switch do you want to update?", "and set it to?", "which keyword do you want to update?", "switchboard counter item", "by number?", "which counter do you want to update?", "switchboard switch item", "set it to", "set it to?", "number", "set value", "operation", "how do you want to update it?"]}
{"id": "778346255", "service_name": "sighthound", "triggers_nn": ["sighthound video rule", "rule", "event", "sighthound video camera"], "triggers_params": ["camera", "rule", "rule (only sighthound video rules that send ifttt events are shown)", "camera (only sighthound video cameras with rules that send ifttt events are shown)"], "queries_nn": ["time", "rule", "event", "sighthound video camera", "list", "sighthound video rule"], "queries_params": ["camera", "rule", "rule (only sighthound video rules that send ifttt events are shown)", "camera (only sighthound video cameras with rules that send ifttt events are shown)"], "actions_nn": [], "actions_params": []}
{"id": "779554068", "service_name": "cloud_bot", "triggers_nn": ["bot", "end", "execution"], "triggers_params": ["bot", "lang", "language"], "queries_nn": [], "queries_params": [], "actions_nn": ["bot"], "actions_params": ["data5", "data6", "data10", "data3", "api parameters", "api parameters(json)", "bot", "data7", "data4", "data8", "lang", "data9", "data1", "data2", "language"]}
{"id": "780089205", "service_name": "withingshome", "triggers_nn": ["noise", "motion", "withing home", "power outlet", "air quality alert", "internet", "withing"], "triggers_params": ["which camera?", "device"], "queries_nn": ["air quality alert", "withing home", "withing", "list"], "queries_params": ["which camera?", "device"], "actions_nn": ["camera mode", "withing"], "actions_params": ["mode", "which camera?", "which camera mode?", "device"]}
{"id": "78435604", "service_name": "thermosmart", "triggers_nn": ["thermosmart", "temperature", "program", "temperature rise", "threshold"], "triggers_params": ["temperature threshold", "date unpaused", "the target temperature in celsius", "the date and time thermosmart got paused.", "date paused", "the name of the scheduled program", "the measured temperature in celsius", "the date and time thermosmart got unpaused.", "program name", "the date and time thermosmart changed its program.", "target temperature c", "room temperature c", "date changed program"], "queries_nn": ["temperature rise", "list", "threshold"], "queries_params": ["temperature threshold"], "actions_nn": ["time", "thermosmart", "exception", "program", "temperature"], "actions_params": ["temperature"]}
{"id": "786791645", "service_name": "wemo_motion", "triggers_nn": ["motion", "wemo motion sensor", "period", "inactivity"], "triggers_params": ["which motion device?", "quiet period", "subtype", "macaddress"], "queries_nn": ["time", "motion", "inactivity", "period", "wemo motion sensor", "list"], "queries_params": ["which motion device?", "quiet period", "subtype", "macaddress"], "actions_nn": [], "actions_params": []}
{"id": "7877896", "service_name": "zubie", "triggers_nn": ["home", "dtc", "distance", "location", "zubie", "vehicle trip", "acceleration event", "battery level", "trip", "work", "ignition", "account", "brake event", "end", "place", "check engine light", "speed", "trouble code", "time frame", "vehicle", "level"], "triggers_params": ["name of the vehicle defined within zubie", "distance", "location", "which place?", "start time", "which vehicle?", "link to map of vehicle location", "a brief description of the problem resulting in the check engine light", "place", "link to map of the trip", "event time", "end hour", "reported diagnostic code for the reported issue", "date and time event was created", "miles driven", "map url", "engine code", "end time", "minimum distance", "start hour", "description", "vehicle"], "queries_nn": ["home", "dtc", "distance", "instance", "location", "zubie", "list", "vehicle trip", "acceleration event", "ignition", "work", "end", "place", "check engine light", "trouble code", "time frame", "vehicle"], "queries_params": ["name of the vehicle defined within zubie", "distance", "location", "which place?", "start time", "which vehicle?", "a brief description of the problem resulting in the check engine light", "place", "link to map of the trip", "event time", "end hour", "reported diagnostic code for the reported issue", "date and time event was created", "map url", "engine code", "end time", "start hour", "description", "vehicle"], "actions_nn": [], "actions_params": []}
{"id": "789804492", "service_name": "foxnews", "triggers_nn": ["choosing", "article", "section", "news alert", "business section"], "triggers_params": ["created at", "date and time of the alert.", "date and time event was created.", "choose a section", "header for a breaking news alert.", "category", "list name", "subject of the alert.", "date", "subject"], "queries_nn": ["choosing", "article", "section", "news alert", "business section", "list"], "queries_params": ["created at", "date and time of the alert.", "date and time event was created.", "choose a section", "header for a breaking news alert.", "category", "list name", "subject of the alert.", "date", "subject"], "actions_nn": [], "actions_params": []}
{"id": "789843246", "service_name": "powerview", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["room scene", "scene"], "actions_params": ["which device?", "scene", "select a scene", "select a multiple room scene", "scene collection", "hub"]}
{"id": "78", "service_name": "ios_photos", "triggers_nn": ["camera", "photo", "camera roll", "screenshot", "album", "area"], "triggers_params": ["a public url to the photo that anyone can visit.", "album name", "takendate", "location", "albumname", "the photo album on your phone that you saved the photo to.", "temporarypublicphotourl", "the time the photo was taken.", "publicphotourl", "a public url to the photo that anyone can visit for 30 days.", "locate an area"], "queries_nn": [], "queries_params": [], "actions_nn": ["album", "photo"], "actions_params": ["album name", "album", "photo url"]}
{"id": "792831678", "service_name": "pebblebee", "triggers_nn": ["stone"], "triggers_params": ["which stone?", "which press type?", "stone id", "stone press type"], "queries_nn": [], "queries_params": [], "actions_nn": [], "actions_params": []}
{"id": "795039964", "service_name": "beam", "triggers_nn": ["garage door", "door state", "access"], "triggers_params": ["door state", "door"], "queries_nn": [], "queries_params": [], "actions_nn": ["garage door", "controller"], "actions_params": ["door to partially open", "which door?", "door to open", "door to close"]}
{"id": "795066829", "service_name": "yeelight", "triggers_nn": [], "triggers_params": [], "queries_nn": ["on", "brightness", "device", "color temperature value", "color value", "state"], "queries_params": ["device id", "please choose your device"], "actions_nn": ["brightness", "scene", "light", "color temperature", "level", "color"], "actions_params": ["scene id", "which lights?", "brightness", "which light?", "which scene?", "which color temperature?", "bundle id", "device id", "on, off or toggle?", "which color?", "brightness level?", "on off option", "which brightness?", "color id", "ct id"]}
{"id": "799977804", "service_name": "google_sheets", "triggers_nn": ["cell", "worksheet", "row", "google drive folder", "spreadsheet"], "triggers_params": ["path", "or copy and paste the spreadsheet url", "enter the folder path...", "which cell to monitor?", "cell", "filename", "spreadsheet url", "drive folder path", "and enter the filename"], "queries_nn": ["cell", "worksheet", "spreadsheet", "value", "row", "google drive folder", "list"], "queries_params": ["path", "or copy and paste the spreadsheet url", "which cell?", "enter the folder path...", "which cell to monitor?", "copy and paste the spreadsheet url", "cell", "filename", "spreadsheet url", "which row?", "drive folder path", "and enter the filename", "row index"], "actions_nn": ["cell", "worksheet", "spreadsheet", "row", "bottom"], "actions_params": ["formatted row", "path", "spreadsheet name", "which cell?", "value", "cell", "filename", "drive folder path"]}
{"id": "79", "service_name": "ios_contacts", "triggers_nn": ["contact"], "triggers_params": ["date the contact was added to your address book.", "any notes associated with the contact.", "job title of the contact.", "address of the contact.", "phonenumber", "organization", "organization of the contact.", "name", "address", "email", "dateadded", "notes", "email of the contact.", "jobtitle", "name of the contact.", "phone number of the contact."], "queries_nn": [], "queries_params": [], "actions_nn": [], "actions_params": []}
{"id": "802465429", "service_name": "pushover", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["pushover notification", "watch", "glance datum", "device", "pushover widget"], "actions_params": ["subtext", "sound", "title", "message priority", "url", "widget", "message", "device", "priority", "percent", "text", "message sound", "count", "device or group"]}
{"id": "80260035", "service_name": "freedompro", "triggers_nn": ["occupancy sensor", "light", "contact sensor", "switch", "carbon dioxide sensor", "state", "motion sensor", "outlet", "smoke sensor", "lock", "unlock", "fan", "leak sensor"], "triggers_params": ["leakdetected", "smokedetected", "occupancydetected", "name", "uid", "state", "carbondioxidedetected", "lock", "on", "motiondetected", "contactsensorstate"], "queries_nn": [], "queries_params": [], "actions_nn": ["garage door", "rotation speed", "lightbulb", "brightness", "window", "colour", "switch", "saturation", "door", "outlet", "gate", "lock", "scene", "thermostat temperature", "fan", "change state"], "actions_params": ["hue", "rotation speed", "brightness", "saturation", "rotationspeed", "name", "uid", "lock", "on", "position", "targettemperature", "temperature"]}
{"id": "80753766", "service_name": "imf", "triggers_nn": ["time", "monitor report", "country report", "imf", "year", "outlook", "fund", "world"], "triggers_params": ["the entry's url.", "entrytitle", "query", "the entry's title.", "entrycontent", "the entry's content, may contain html.", "entrypublished", "date entry was created.", "filter by country (optional)", "entryurl"], "queries_nn": ["time", "monitor report", "country report", "imf", "year", "outlook", "list", "fund", "world"], "queries_params": ["the entry's url.", "entrytitle", "query", "the entry's title.", "entrycontent", "the entry's content, may contain html.", "entrypublished", "date entry was created.", "filter by country", "entryurl"], "actions_nn": [], "actions_params": []}
{"id": "80969973", "service_name": "typeform", "triggers_nn": ["response", "form"], "triggers_params": ["form title", "the id of the form.", "form id", "form is public", "url to access the form", "draft forms return \"false\" and public forms return \"true\".", "form url", "the title of the form"], "queries_nn": ["search term", "form", "response"], "queries_params": ["search term", "search", "form id"], "actions_nn": [], "actions_params": []}
{"id": "80", "service_name": "ios_reminders", "triggers_nn": ["list", "reminder"], "triggers_params": ["the title of the reminder.", "title", "the name of the list the reminder is in.", "completeddate", "list", "notes", "priority", "createddate", "list name", "the priority of the reminder.", "the note associated with the reminder.", "the date the reminder was created.", "the date the reminder was completed."], "queries_nn": [], "queries_params": [], "actions_nn": ["list", "reminder"], "actions_params": ["title", "list", "reminder", "priority", "list name", "alarm date"]}
{"id": "811416297", "service_name": "nest_thermostat", "triggers_nn": ["temperature rise", "home", "temperature", "threshold"], "triggers_params": ["temperature threshold", "which device?", "nest thermostat", "temperature units", "degrees in", "which home?", "home structure"], "queries_nn": ["home", "thermostat", "threshold", "list", "temperature"], "queries_params": ["temperature threshold", "which device?", "nest thermostat", "temperature units", "degrees in", "which home?", "home structure"], "actions_nn": ["time", "minute", "nest fan timer setting", "default", "nest thermostat", "amount", "heat", "hvac system fan", "mode", "temperature"], "actions_params": ["temperature value", "low temperature", "temperature high", "which device?", "nest thermostat", "temperature units", "degrees in", "high temperature", "temperature low", "temperature"]}
{"id": "811875152", "service_name": "cityofbeverlyhills", "triggers_nn": ["hill", "video", "viewing", "city"], "triggers_params": ["select video category", "video category"], "queries_nn": ["video", "viewing", "city", "hill", "list"], "queries_params": ["select video category", "video category"], "actions_nn": ["email"], "actions_params": ["body", "subject"]}
{"id": "81243970", "service_name": "linkdesk", "triggers_nn": ["room"], "triggers_params": ["which room?", "room"], "queries_nn": [], "queries_params": [], "actions_nn": [], "actions_params": []}
{"id": "814071005", "service_name": "sec", "triggers_nn": ["press release", "filing", "investor alert", "sec"], "triggers_params": ["filter by keyword (optional)", "filter by keyword (recommended)", "query"], "queries_nn": ["filing", "sec", "list", "investor alert"], "queries_params": ["filter by keyword", "filter by keyword (recommended)", "query"], "actions_nn": [], "actions_params": []}
{"id": "815887723", "service_name": "bocco_emo", "triggers_nn": [], "triggers_params": [], "queries_nn": ["bocco emo room"], "queries_params": ["name of bocco emo rooms", "label"], "actions_nn": ["bocco emo", "message"], "actions_params": ["text", "stamp", "room", "uuid"]}
{"id": "829526899", "service_name": "warmup_smart_thermostat", "triggers_nn": ["house", "sleep mode", "home", "somebody", "nobody", "temperature rise", "temperature"], "triggers_params": ["room", "rises above what temperature?", "location", "drops below what temperature?", "which room?", "temperature"], "queries_nn": ["sleep mode", "home", "somebody", "list", "temperature"], "queries_params": ["room", "rises above what temperature?", "location", "which room?", "temperature"], "actions_nn": ["heating", "thermostat", "frost", "set", "mode", "temperature"], "actions_params": ["set temperature to?", "which device?", "temperature", "device identifier"]}
{"id": "82", "service_name": "smartthings", "triggers_nn": ["smartthing device", "brightness", "temperature", "value", "humidity", "presence", "moisture", "smartthing device sens motion"], "triggers_params": ["threshold units", "temperature value", "brightness value", "which device?", "device", "switch", "temperature units", "humidity value", "threshold value"], "queries_nn": [], "queries_params": [], "actions_nn": ["locking", "smartthing device", "strobe", "siren", "smartthing", "device"], "actions_params": ["alert type", "which device?", "device", "switch"]}
{"id": "832369883", "service_name": "do_camera", "triggers_nn": ["camera", "photo"], "triggers_params": ["a public url to the photo that anyone can visit.", "shareurl", "longitude", "the date and time the photo was taken.", "the link to the map of the location of the tap.", "occurredat", "caption", "the link to the share page for the photo.", "the text you write on top of a photo.", "temporarypublicphotourl", "latitude", "locationmapurl", "publicphotourl", "a public url to the photo that anyone can visit for 30 days.", "locationmapimageurl", "the image of the map of the location of the tap."], "queries_nn": [], "queries_params": [], "actions_nn": [], "actions_params": []}
{"id": "832416721", "service_name": "voicemonkey", "triggers_nn": [], "triggers_params": [], "queries_nn": ["monkey", "list"], "queries_params": ["monkey name", "the name of the monkey.", "monkey id", "the monkey's id used in the api url "], "actions_nn": ["video", "echo device", "image", "monkey", "text", "alexa", "screen", "announcement", "parameter"], "actions_params": ["video", "image url", "announcement text", "image", "video url", "monkey", "announcement", "monkey to trigger"]}
{"id": "832585650", "service_name": "omninewlab", "triggers_nn": ["switch", "light"], "triggers_params": ["light name"], "queries_nn": ["status"], "queries_params": ["light status", "the light status"], "actions_nn": ["light"], "actions_params": ["light name", "brightness value"]}
{"id": "834031647", "service_name": "coresmarthome", "triggers_nn": ["scene"], "triggers_params": ["scene"], "queries_nn": ["scene", "list"], "queries_params": ["scene"], "actions_nn": ["scene"], "actions_params": ["scene"]}
{"id": "83628074", "service_name": "logitech_circle", "triggers_nn": ["recording"], "triggers_params": ["which camera?", "within zone", "contains person", "which camera", "was a person detected? [circle safe premium only]", "within motion zone? [circle safe premium only]"], "queries_nn": ["list", "recording"], "queries_params": ["which camera?", "within zone", "contains person", "which camera", "was a person detected? [circle safe premium only]", "within motion zone? [circle safe premium only]"], "actions_nn": ["camera", "view", "recording"], "actions_params": ["which camera?", "how long?", "which camera", "how long"]}
{"id": "837874704", "service_name": "wemo_outdoor_plug", "triggers_nn": ["wemo", "plug"], "triggers_params": ["macaddress", "which switch?", "which switch"], "queries_nn": [], "queries_params": [], "actions_nn": ["wemo", "plug"], "actions_params": ["macaddress", "which switch?"]}
{"id": "842774717", "service_name": "hella_onyx", "triggers_nn": ["sun brightness", "wind peak value", "threshold"], "triggers_params": ["above or below", "above or below value?", "weather station", "value"], "queries_nn": [], "queries_params": [], "actions_nn": ["off", "brightness", "angle", "position", "group", "device", "blind"], "actions_params": ["brightness", "device or group with lights", "action", "angle", "position", "device or group", "device or group with shadings"]}
{"id": "851621020", "service_name": "wiz", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["choice", "light", "vice versa", "dim", "step", "scene", "pulse", "setting", "wiz light", "brighten"], "actions_params": ["which lights?", "entity", "which light(s)?", "which scene?", "dimming delta", "mode", "what brightness?", "dim or brighten?", "by how much?", "intent", "what light mode / color?", "dimming"]}
{"id": "852404741", "service_name": "lightwaverf_power", "triggers_nn": ["socket"], "triggers_params": ["which socket"], "queries_nn": ["socket", "list"], "queries_params": ["which socket"], "actions_nn": ["relay", "use", "button", "device", "switch", "radio control", "unlock", "socket"], "actions_params": ["which device", "which relay", "which socket", "which device?", "which socket?", "which relay?"]}
{"id": "860829124", "service_name": "oval_smart_home", "triggers_nn": ["sensor", "alert"], "triggers_params": ["parameters", "trigger drop", "select parameter", "select sensor"], "queries_nn": [], "queries_params": [], "actions_nn": [], "actions_params": []}
{"id": "869231464", "service_name": "dondeesta", "triggers_nn": ["school", "kid", "home", "panic button"], "triggers_params": ["time", "name of the kid leaving home.", "date and time your kid arrived at school.", "name of the kid arriving at home.", "date and time your kid left school.", "date and time event was created.", "name", "location", "location where your kid pressed the panic button.", "date and time your kid pressed the panic button.", "name of the kid leaving school.", "date and time your kid left home.", "name of the kid arriving at school.", "name of the kid that pressed the panic button."], "queries_nn": ["school", "kid", "list"], "queries_params": ["name of the kid leaving school.", "name", "date and time your kid left school.", "time"], "actions_nn": ["family", "message", "notification"], "actions_params": []}
{"id": "875314180", "service_name": "gewiss_home", "triggers_nn": ["home", "thermostat device", "something"], "triggers_params": ["what should we check?", "property element", "threshold logic", "how should we compare the value?", "what is the threshold?", "threshold"], "queries_nn": ["status", "shutter", "home", "light", "device", "gewiss"], "queries_params": ["property element", "what should we retrieve?", "what should we check?"], "actions_nn": ["command", "home", "shutter", "light", "switch", "scenario", "venetian", "gewiss"], "actions_params": ["method param", "what scenario would you like to execute in the smart home?", "[if needed] how much?", "method functional channel", "what command would you like to execute in the smart home?"]}
{"id": "878667465", "service_name": "graspio", "triggers_nn": ["analog sensor value", "sensor value", "condition"], "triggers_params": ["trigger list"], "queries_nn": [], "queries_params": [], "actions_nn": ["board", "photo", "capture", "frequency", "camera", "speaker", "delay", "text", "project", "output port", "servo motor angle", "duration", "speed", "gif", "rgb", "studio account", "buzzer", "color"], "actions_params": ["text", "repeat", "port", "led color 2", "led color 1", "led color", "speed", "font name", "state", "delay", "angle", "board name", "board id", "operation", "project"]}
{"id": "884002062", "service_name": "Aqara_Home", "triggers_nn": ["motion", "drop", "cube", "window sensor", "water", "brightness", "value", "minute inactivity", "sound", "switch", "curtain", "camera", "press", "vibration", "humidity", "relay controller", "plug", "temperature", "darkness", "light", "door", "rocker switch", "water leak", "tvoc", "tilt"], "triggers_params": ["humidity drops to", "humidity reaches up to", "tvoc drop to", "light status", "curtain status", "temperature reaches up to", "which trigger event?", "which trigger event", "which device?", "motion is detected and brightness is below", "click status", "tvoc drops to", "temperature drops to", "flip status", "switch status", "brightness status", "plug status", "motion is detected and brightness is above", "tvoc reaches up to", "subject id", "channel status"], "queries_nn": ["humidity", "temperature"], "queries_params": ["which device", "subject id"], "actions_nn": ["detection", "motion detection", "choosing", "wake", "light", "rocker switch", "curtain", "relay controller", "camera", "wake up", "sleep", "position", "close", "sound detection", "plug"], "actions_params": ["which action event?", "which status", "whith device?", "which device?", "subject id", "open to"]}
{"id": "884846416", "service_name": "econnect", "triggers_nn": ["panel", "sector", "device"], "triggers_params": ["created at", "date and time event was created.", "which device?", "device index", "which sector?"], "queries_nn": [], "queries_params": [], "actions_nn": ["device", "panel", "chronothermostat", "temperature"], "actions_params": ["device index", "user code", "what temperature (\u00b0c)?", "which device?", "what user code?", "temperature"]}
{"id": "88497112", "service_name": "idevices", "triggers_nn": ["value", "product", "device", "thermostat target temperature", "change", "target thermostat mode change", "mode", "night light", "temperature"], "triggers_params": ["what mode", "which product's night light?", "above or below?", "what mode?", "above or below", "what temperature", "what device?", "what ambient temperature?", "what temperature?", "which product?", "what device"], "queries_nn": ["mode", "thermostat change", "product", "list", "night light", "change"], "queries_params": ["what mode", "what device", "what mode?", "which product's night light?"], "actions_nn": ["brightness", "night light", "percentage", "mode", "thermostat", "target temperature", "product", "color"], "actions_params": ["what mode", "what mode?", "what color?", "what temperature", "what device?", "what temperature?", "which product?", "what percent", "what percentage of brightness?", "what device", "what color", "what product's night light?"]}
{"id": "887672198", "service_name": "seitronsmart", "triggers_nn": ["threshold", "thermostat", "temperature"], "triggers_params": ["which termostat?", "what is the minimum temperature?", "which temperature unit?", "what is the maximum temperature?", "thermostat name", "which thermostat?", "falls below temperature", "rise over temperature", "temperature unit"], "queries_nn": [], "queries_params": [], "actions_nn": ["setpoint", "mode", "auto", "thermostat"], "actions_params": ["which setpoint temperature?", "thermostat name", "which temperature unit? \u00b0c or \u00b0f?", "which thermostat?", "temperature target", "temperature unit"]}
{"id": "889595378", "service_name": "unforgettable_me", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["upload datum"], "actions_params": ["body", "augmenter name"]}
{"id": "891279159", "service_name": "square", "triggers_nn": ["payment", "post", "payment post", "settlement", "refund post", "merchant account", "amount", "refund"], "triggers_params": ["refund threshold", "the reason for the refund", "totalmoney", "the name of the merchant", "tipcollectedmoney", "paymentrecordurl", "refundedmoneyamount", "total collected money amount of the purchase.", "initiatedat", "the url of the receipt", "the amount of money in the new settlement", "reason", "amountcollectedmoney", "the id of the payment object", "the id of the payment.", "paymentat", "amount of the purchase.", "the id of the settlement", "a link to the detailed view of the refund", "a link to a detailed view of the payment.", "receipturl", "payment threshold", "customerid", "the status of the refund.", "the id of the order object", "the status of the settlement", "id", "refundat", "the name of the merchant.", "totalcollectedmoney", "locationid", "orderid", "the id of the location object", "status", "date and time when the payment occurred.", "the id of the refund", "the amount of money refunded", "date and time when the refund occured", "when the settlement was initiated", "merchantname", "paymentid", "amount threshold", "tip collected money amount of the purchase.", "refundrecordurl", "the id of the customer object"], "queries_nn": ["time", "payment", "post", "list", "payment post", "settlement", "refund post", "merchant account", "amount", "refund"], "queries_params": ["devicename", "refund threshold", "the reason for the refund", "totalmoney", "the name of the merchant", "paymentrecordurl", "total collected money amount of the purchase.", "refundedmoneyamount", "initiatedat", "the amount of money in the new settlement", "reason", "the id of the payment.", "paymentat", "the id of the settlement", "a link to the detailed view of the refund", "a link to a detailed view of the payment.", "the name of the device where the payment occured.", "the type of refund given", "payment threshold", "refundtype", "the status of the settlement", "id", "the name of the merchant.", "refundat", "totalcollectedmoney", "status", "date and time when the payment occurred.", "the id of the refund", "the amount of money refunded", "date and time when the refund occured", "when the settlement was initiated", "merchantname", "amount threshold", "refundrecordurl"], "actions_nn": [], "actions_params": []}
{"id": "899280027", "service_name": "sengled", "triggers_nn": ["motion", "device", "door sensor"], "triggers_params": ["which door sensor?", "deviceid", "which motion sensor?"], "queries_nn": ["list", "door sensor"], "queries_params": ["which door sensor?", "deviceid"], "actions_nn": ["brightness", "light", "color temperature", "plug", "color"], "actions_params": ["which lights?", "deviceid", "brightness", "which color temperature?", "which plug?", "which color?", "brightness level?", "colortemperature", "color"]}
{"id": "89", "service_name": "nytimes", "triggers_nn": ["seller", "book", "york time", "article", "pick movie", "section", "blog post", "search query", "critic"], "triggers_params": ["reviewheadline", "reviewurl", "date the movie opened", "list", "url to the movie thumbnail image.", "movietitle", "the headline of the review", "best sellers list", "search for", "a the rating, if any, given to this movie by the mpaa", "term", "movieopeningdate", "mpaarating", "the author of the review", "url to the article", "author", "date the review was published.", "publicationdate", "section", "moviethumbnailurl"], "queries_nn": ["time", "seller", "book", "york time", "article", "pick movie", "section", "list", "blog post", "search query", "critic"], "queries_params": ["reviewheadline", "reviewurl", "date the movie opened", "list", "url to the movie thumbnail image.", "movietitle", "the headline of the review", "best sellers list", "search for", "a the rating, if any, given to this movie by the mpaa", "term", "movieopeningdate", "mpaarating", "the author of the review", "url to the article", "author", "date the review was published.", "publicationdate", "section", "moviethumbnailurl"], "actions_nn": [], "actions_params": []}
{"id": "8", "service_name": "phone_call", "triggers_nn": ["ifttt phone number", "voicemail"], "triggers_params": ["the transcribed message.", "temporarymp3url", "the date and time you called ifttt.", "from", "receivedat", "message", "the phone number you called ifttt from.", "mp3url", "a public url to the voicemail audio in mp3 format.", "a public url to the voicemail audio in mp3 format that anyone can visit for 30 days."], "queries_nn": [], "queries_params": [], "actions_nn": ["message", "phone number"], "actions_params": ["message", "message to say"]}
{"id": "904594236", "service_name": "air_q", "triggers_nn": ["threshold", "sensor", "device", "value"], "triggers_params": ["sensor", "deviceid", "value", "select the sensor on the device", "set the threshold", "compare", "select your air-q device", "set the comparator"], "queries_nn": ["sensor", "value"], "queries_params": ["sensor", "deviceid", "retrieve the latest measured value of the provided sensor."], "actions_nn": [], "actions_params": []}
{"id": "906187472", "service_name": "garageio", "triggers_nn": ["garage door", "smartphone app", "garageio website"], "triggers_params": ["which door?", "door"], "queries_nn": ["garage door", "event", "smartphone app", "garageio website", "list"], "queries_params": ["which door?", "door"], "actions_nn": ["garage door"], "actions_params": ["door to open", "which door?", "door to close"]}
{"id": "907114078", "service_name": "eia", "triggers_nn": ["petroleum report", "week", "energy report", "today"], "triggers_params": ["the entry's url.", "the first paragraph of the entry's content.", "entrytitle", "the entry's title.", "entrycontent", "entrypublished", "date entry was created.", "the entry's content.", "entryurl"], "queries_nn": ["week", "history", "petroleum report publication", "energy report", "list", "today"], "queries_params": ["the entry's url.", "the first paragraph of the entry's content.", "entrytitle", "the entry's title.", "entrycontent", "entrypublished", "date entry was created.", "the entry's content.", "entryurl"], "actions_nn": [], "actions_params": []}
{"id": "913016026", "service_name": "iot_podcast", "triggers_nn": ["iot", "stacey", "article", "iot podcast episode"], "triggers_params": ["the entry's url.", "entryimageurl", "entrytitle", "url for the first image in the entry. if the entry doesn't have an image will point to a placeholder image.", "the entry's title.", "entrycontent", "the entry's content, may contain html.", "entrypublished", "url for the first image in the entry. ", "date entry was created.", "entryauthor", "the entry's author name.", "entryurl"], "queries_nn": ["iot", "article", "stacey", "list", "iot podcast episode"], "queries_params": ["the entry's url.", "entryimageurl", "entrytitle", "url for the first image in the entry. if the entry doesn't have an image will point to a placeholder image.", "the entry's title.", "entrycontent", "the entry's content, may contain html.", "entrypublished", "url for the first image in the entry. ", "date entry was created.", "entryauthor", "the entry's author name.", "entryurl"], "actions_nn": [], "actions_params": []}
{"id": "913031112", "service_name": "zoom", "triggers_nn": ["meeting start", "meeting end", "meeting"], "triggers_params": ["join url", "meeting id", "topic", "this is the url at which participants can join the meeting", "meeting agenda", "duration", "duration of the meeting in minutes", "this is the id of the meeting created", "the time at which the meeting is scheduled", "start time", "the timezone of the created meeting", "this is the topic of the meeting.", "end time", "time zone", "the time at which the meeting is scheduled to end", "agenda"], "queries_nn": ["list", "detail", "meeting"], "queries_params": ["join url", "meeting id", "topic", "end time", "duration", "webinar duration in minutes", "the time zone of the meeting.", "endtime", "start time", "the url at which participants can join the meeting.", "this is the topic of the meeting.", "the agenda of the meeting.", "this is the start time of the meeting", "agenda", "time zone", "the id of the meeting.", "meetingid"], "actions_nn": ["meeting"], "actions_params": ["meeting duration", "how long is the meeting?", "meeting agenda", "meeting topic", "what is the meeting agenda?", "what is the name of the meeting?", "meeting datetime", "when is the meeting?"]}
{"id": "913276507", "service_name": "fujitsu_general_limited", "triggers_nn": ["fujitsu air conditioner"], "triggers_params": ["device name", "dsn"], "queries_nn": ["instance", "fujitsu air conditioner", "list"], "queries_params": ["device name", "dsn"], "actions_nn": ["30c", "ac", "auto", "user", "64f", "88f", "operation_mode", "18c", "heat", "fan", "temperature"], "actions_params": ["which operation mode you want to set?", "device name", "dsn", "what is the temperature you want to set?", "operation mode", "adjust temperature"]}
{"id": "914409341", "service_name": "qualitytime", "triggers_nn": ["smartphone usage", "number", "smartphone screen", "limit", "time limit"], "triggers_params": ["threshold minutes", "number of daily screen unlocks exceeds", "threshold times", "daily usage time exceeds"], "queries_nn": ["list", "smartphone usage", "number", "smartphone screen", "limit", "time limit"], "queries_params": ["daily usage time exceeds", "number of daily screen unlocks exceeds", "threshold minutes", "threshold times"], "actions_nn": [], "actions_params": []}
{"id": "915701997", "service_name": "govee", "triggers_nn": ["sensor", "motion sensor", "contact sensor", "battery", "device", "water leakage", "alert"], "triggers_params": ["on/off", "device name", "which device?", "turned on off", "arm state", "alert  status", "alarm status"], "queries_nn": ["server health check ping"], "queries_params": [], "actions_nn": ["brightness", "choosing", "light", "device", "oscillation", "action", "mode", "night light", "color"], "actions_params": ["night light action", "light color", "which mode?", "brightness", "device name", "on/off", "which device?", "arm/disarm", "light on off", "light brightness", "action", "oscillation on off", "arming state", "mode name", "color"]}
{"id": "915819888", "service_name": "pushsafer", "triggers_nn": ["notification title", "notification sound id", "notification priority", "notification icon", "device id match", "message", "priority", "notification icon id", "phrase", "notification message", "notification icon color", "push", "icon color"], "triggers_params": ["sound", "title", "message", "iconcolor", "device", "priority", "icon", "title contains", "icon color", "message contains"], "queries_nn": ["notification title", "notification sound id", "device id match", "instance", "list", "notification icon id", "priority", "device id", "event", "phrase", "notification message", "push"], "queries_params": ["sound", "title", "message", "device", "priority", "icon", "title contains", "message contains"], "actions_nn": ["pushsafer.com notification"], "actions_params": ["title", "message", "giphy", "time2live", "urltitle", "giphy gif", "iconcolor", "url / link", "icon", "icon color", "retry", "sound", "expire", "time 2 live", "answer", "device", "priority", "vibration", "url", "url title", "retry / resend"]}
{"id": "91606685", "service_name": "smartlouisville", "triggers_nn": ["feed", "emergency notification", "sound recording", "news", "louisville metro council chamber", "louisville", "ema", "event", "challenge", "louisville metro council", "louisville metro air sensor", "agenda", "metrosafe city agency", "job", "book", "louisville metro council meeting", "video", "city", "print item", "potential", "mayor greg fischer", "area", "episode", "public library", "host graham shelby", "louisville area", "ky", "air quality", "louisville metro government", "meeting", "minute", "ky."], "triggers_params": ["this is when the emergency alert duration will expire", "air quality index color (green, yellow, orange etc) for the current reading.", "this is the urgency level of the emergency alert", "this is the certainty of the event.", "date and time event was created.", "event type for emergency alert", "the entry's title.", "the episode's summary.", "the event's author name.", "this is the issuing government body for this alert", "date episode was released.", "event", "the news story url.", "this is a summary of the emergency alert", "this is the label description (good, moderate, hazardous etc) that the air quality is currently reading.", "air quality level from louisville metro sensors", "this is the effective date and timestamp of the emergency alert", "air quality level", "the podcast author name.", "expires", "the event's url.", "the news article author name.", "the news article content, may contain html.", "entrytitle", "certainty", "entrypublished", "this is when the emergency alert was issued", "the status of the emergency alert", "created at", "entryimageurl", "headline", "air quality color", "this is a long text description of the emergency alert", "sender", "date entry was created.", "entryauthor", "sent", "the title of the news story.", "entryurl", "the url for the podcast's image.", "status", "the entry's url.", "effective", "urgency", "url for the first image in the entry. if the entry doesn't have an image will point to a placeholder image.", "the entry's content, may contain html.", "entrycontent", "the event's title.", "severity", "this is the severity of the event", "description", "the episode title of this podcast.", "the entry's author name.", "the event's description.", "this episode's url.", "air quality label"], "queries_nn": ["public library", "emergency notification", "sound recording", "news", "louisville metro council chamber", "louisville", "ema", "list", "ky", "louisville metro government", "metrosafe city agency", "time", "book", "video", "print item", "area"], "queries_params": ["this is when the emergency alert duration will expire", "this is the urgency level of the emergency alert", "this is the certainty of the event.", "date and time event was created.", "event type for emergency alert", "the entry's title.", "this is the issuing government body for this alert", "the news story url.", "event", "this is a summary of the emergency alert", "this is the effective date and timestamp of the emergency alert", "expires", "the news article author name.", "the news article content, may contain html.", "entrytitle", "certainty", "entrypublished", "this is when the emergency alert was issued", "the status of the emergency alert", "created at", "entryimageurl", "headline", "this is a long text description of the emergency alert", "sender", "date entry was created.", "entryauthor", "sent", "the title of the news story.", "entryurl", "status", "the entry's url.", "effective", "urgency", "url for the first image in the entry. if the entry doesn't have an image will point to a placeholder image.", "the entry's content, may contain html.", "entrycontent", "severity", "this is the severity of the event", "description", "the entry's author name."], "actions_nn": [], "actions_params": []}
{"id": "927145764", "service_name": "tantiv4", "triggers_nn": ["wave sensor", "motion", "window sensor", "door", "z", "button", "water leak", "thingao"], "triggers_params": ["select device ", "select button event ", "button event id", "device id", "select door window event", "select door/window event", "fetchit device id", "select device"], "queries_nn": ["wave sensor", "motion", "water leak", "thingao", "z", "list"], "queries_params": ["device id", "select device"], "actions_nn": ["siren", "night mode", "thingao", "thigao device", "light", "device"], "actions_params": ["device name", "turn device on/off", "turn on off", "select hub id", "hub id", "select device"]}
{"id": "928408234", "service_name": "texas_legislature", "triggers_nn": ["appointment", "member house", "press release", "office issue", "texa legislature", "note", "governor", "representative", "bill", "member senate"], "triggers_params": ["filter by keyword (optional)", "query"], "queries_nn": [], "queries_params": [], "actions_nn": [], "actions_params": []}
{"id": "928889220", "service_name": "planex", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["off", "alert function", "action", "smacame"], "actions_params": ["record mode", "motion detection", "device", "sw", "sd recording mode"]}
{"id": "929280260", "service_name": "slide_by_iim", "triggers_nn": [], "triggers_params": [], "queries_nn": ["device", "list", "user"], "queries_params": ["device name"], "actions_nn": ["curtain"], "actions_params": ["device"]}
{"id": "930715622", "service_name": "IQAir", "triggers_nn": ["co2 level", "humidity level", "temperature", "value", "pm2 .5 concentration", "device", "aqi"], "triggers_params": ["share code", "temperature scale", "unit", "sharing code", "threshold"], "queries_nn": ["value", "pm2 .5 concentration", "instance", "device", "list", "aqi", "alert", "co2 level", "temperature"], "queries_params": ["share code", "temperature scale", "unit", "sharing code", "threshold"], "actions_nn": [], "actions_params": []}
{"id": "933516246", "service_name": "dailymotion", "triggers_nn": ["dailymotion", "video", "playlist", "search query"], "triggers_params": ["matches verified videos only", "title", "playlist", "the date the video was uploaded to the site.", "videoid", "original title of the video.", "the date the video was favorited.", "language", "matches a particular language", "the url of the video on dailymotion site.", "dailymotion video id", "matches a particular channel", "matches a particular user", "channel", "verified", "matches a particular keyword or simple phrase", "the html embed code.", "favoritedat", "the user\u2019s fullname of username depending on user\u2019s preference.", "embedcode", "which playlist?", "authorname", "uploadedat", "playlist id", "url", "the user\u2019s full name or username depending on user\u2019s preference.", "playlist description", "user", "description", "the description of the video.", "search"], "queries_nn": ["time", "dailymotion", "video", "playlist", "list", "search query"], "queries_params": ["matches verified videos only", "playlist", "title", "the date the video was uploaded to the site.", "videoid", "original title of the video.", "the date the video was favorited.", "language", "the url of the video on dailymotion site.", "matches a particular language", "dailymotion video id", "matches a particular channel", "matches a particular user", "channel", "verified", "matches a particular keyword or simple phrase", "the html embed code.", "favoritedat", "the user\u2019s fullname of username depending on user\u2019s preference.", "embedcode", "which playlist?", "authorname", "uploadedat", "playlist id", "url", "the user\u2019s full name or username depending on user\u2019s preference.", "playlist description", "user", "description", "the description of the video.", "search"], "actions_nn": [], "actions_params": []}
{"id": "933696188", "service_name": "fiverr", "triggers_nn": ["seller", "message", "inbox", "gig", "image order", "order", "buyer rate", "video order", "buyer order", "fiverr"], "triggers_params": ["the title of the gig.", "imageurl", "the seller's username.", "the username of the buyer.", "ratingvalue", "gigtitle", "the estimated delivery date and time.", "conversationurl", "the video source url to your delivered order.", "message body", "the seller you bought from.", "the title of the gig ordered.", "orderprice", "messagebody", "thumbs up or thumbs down.", "the rating's comment.", "buyerusername", "sellerusername", "the date and time of expected delivery.", "the gig's title.", "the image source url for your order.", "the order url.", "the title of the gig you bought", "the link to the message.", "orderurl", "url of the relevant order", "sender", "ratingcomment", "a link to the order.", "estimateddeliverytime", "the link to the order.", "deliverytime", "the price of the order.", "time when message was sent", "deliveredat", "sentat", "the date and time the message was sent.", "videourl", "the date and time of delivery.", "sender username", "the gig title.", "the title of the gig you bought.", "reviewerusername", "the username of who sent the message.", "the content of the message.", "only thumbs up for positive ratings.", "the price of the gig."], "queries_nn": ["time", "seller", "message", "inbox", "gig", "list", "image order", "order", "buyer", "video order", "fiverr"], "queries_params": ["imageurl", "the seller's username.", "the content of the message.", "the username of the buyer.", "ratingvalue", "gigtitle", "the estimated delivery date and time.", "conversationurl", "the video source url to your delivered order.", "message body", "the seller you bought from.", "the title of the gig ordered.", "orderprice", "messagebody", "thumbs up or thumbs down.", "the rating's comment.", "buyerusername", "sellerusername", "the date and time of expected delivery.", "the image source url for your order.", "the gig's title.", "the order url.", "the title of the gig you bought", "url of the relevant order", "orderurl", "the link to the message.", "sender", "ratingcomment", "a link to the order.", "estimateddeliverytime", "the link to the order.", "deliverytime", "the price of the order.", "time when message was sent", "deliveredat", "sentat", "only thumbs up for positive ratings.", "the date and time the message was sent.", "videourl", "sender username", "the gig title.", "the title of the gig you bought.", "reviewerusername", "the username of who sent the message.", "the date and time of delivery.", "the title of the gig.", "the price of the gig."], "actions_nn": [], "actions_params": []}
{"id": "93577782", "service_name": "somfy_tahoma", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["tahoma scenario", "launch"], "actions_params": ["action group", "which scenario ?"]}
{"id": "936661741", "service_name": "zohocliq_cn", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["action post", "message", "chat"], "actions_params": ["title", "card theme", "web url", "external link", "select a chat", "id", "theme", "thumbnail url", "text"]}
{"id": "938770979", "service_name": "daikin_online_controller", "triggers_nn": ["detection", "minute", "temperature threshold", "unit", "temperature", "device", "unit notification"], "triggers_params": ["the time when the daikin unit was triggered.", "what temperature?", "tells you which of your daikin units wants to notify you.", "which device?", "device", "time stamp", "notification", "gives the notification generated by the unit.", "temperature"], "queries_nn": ["time", "minute", "detection", "temperature threshold", "threshold", "list", "device", "unit", "event", "temperature rise", "temperature"], "queries_params": ["the time when the daikin unit was triggered.", "what temperature?", "tells you which of your daikin units wants to notify you.", "which device?", "device", "time stamp", "notification", "gives the notification generated by the unit.", "temperature"], "actions_nn": ["daikin ac unit", "econo mode", "holiday mode", "setting"], "actions_params": ["which fan speed?", "which setpoint?", "fan speed", "holiday setting", "fan direction", "which device?", "device", "which econo setting?", "operation mode", "setpoint", "which fan direction?", "econo setting", "which operation mode?", "which holiday setting?"]}
{"id": "941030000", "service_name": "location", "triggers_nn": ["area"], "triggers_params": ["location", "locate an area"], "queries_nn": [], "queries_params": [], "actions_nn": [], "actions_params": []}
{"id": "946168322", "service_name": "raindrop", "triggers_nn": ["document", "item", "article", "video", "collection", "copy", "image", "highlight", "file", "link", "tag"], "triggers_params": ["highlight color", "title", "thumbnail url of bookmark or file", "text", "excerpt", "link", "url of highlighted page", "highlighted text", "type", "note", "domain", "url of bookmark or file", "date and time event was created", "name of bookmark or file", "which type?", "when bookmark or file is created", "annotation", "cover", "collectionid", "which tag or tags?", "created", "hostname", "which collection?", "when highlight is created", "url of permanent copy", "color", "note or description", "tags", "cache link"], "queries_nn": ["item", "list", "highlight"], "queries_params": ["cache", "which collection?", "marked as favorite?", "marked as broken?", "get only items with permanent copy", "type", "which type?", "important", "tags", "file", "broken", "collectionid", "which tag or tags?", "get only files"], "actions_nn": ["bookmark"], "actions_params": ["title", "url", "collection", "creation date", "thumbnail url", "description", "tags", "excerpt", "cover", "collectionid", "link", "created"]}
{"id": "946171353", "service_name": "smartlife", "triggers_nn": ["motion", "fingerprint identification", "sound", "password", "sensor shake", "device", "camera", "card", "group", "light", "water sound", "person", "someone input", "lock", "water leak", "user", "door sensor", "pir", "electricity", "threshold"], "triggers_params": ["which device/group?", "which device"], "queries_nn": ["motion", "fingerprint identification", "sound", "password", "list", "device", "camera", "card", "group", "shake", "time", "sensor", "light", "water sound", "person", "someone input", "lock", "water leak", "user", "door sensor", "pir", "electricity", "threshold"], "queries_params": ["which device/group?", "which device"], "actions_nn": ["ac", "brightness", "choosing", "temperature", "light", "controller", "ir", "device", "scene", "heat mode", "oscillation function", "fan", "group", "mode", "color"], "actions_params": ["light color", "which device", "brightness", "temperature", "turn on first?", "turn on first", "light brightness", "scene", "ac temperature", "which device/group?", "which scene", "color"]}
{"id": "952707718", "service_name": "pushbullet", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["address", "note", "pushbullet inbox", "google", "file", "link"], "actions_params": ["body", "title", "url", "message", "name", "file url", "address", "link url"]}
{"id": "955135381", "service_name": "rememberthemilk", "triggers_nn": ["contact", "tag", "location", "task", "list", "inbox"], "triggers_params": ["created at", "link to task", "date and time event was created.", "the priority of the task.", "name", "location", "list", "the name of the task.", "priority", "the name of the list.", "comma-separated list of task tags.", "tags", "contact", "the url of the task.", "tag"], "queries_nn": ["contact", "tag", "location", "task", "list", "inbox"], "queries_params": ["created at", "link to task", "date and time event was created.", "the priority of the task.", "location", "name", "list", "the name of the task.", "priority", "the name of the list.", "comma-separated list of task tags.", "tags", "contact", "the url of the task.", "tag"], "actions_nn": ["task", "script"], "actions_params": ["task name", "task", "script"]}
{"id": "961459459", "service_name": "netro", "triggers_nn": ["schedule", "datum", "event", "moisture value", "whisperer sensor"], "triggers_params": ["sensor", "event", "device", "zone"], "queries_nn": [], "queries_params": [], "actions_nn": ["time", "water", "period", "default weather datum", "netro device", "day", "zone", "weather datum", "moisture level", "netro", "watering schedule", "action", "yard"], "actions_params": ["temp", "minimum temperature", "wind speed", "start time", "rain prob", "duration", "summary", "sunset", "moisture", "t max", "days", "sunrise", "pressure", "device", "t min", "dew point", "humidity", "temperature", "t dew", "status", "rain", "zone", "condition", "maximum temperature", "date", "rain probability"]}
{"id": "964585221", "service_name": "flic", "triggers_nn": ["recipe", "tag", "flic"], "triggers_params": ["click type", "flic name", "button uuid", "flic click type", "tag"], "queries_nn": ["flic", "list", "tag"], "queries_params": ["click type", "flic name", "button uuid", "flic click type", "tag"], "actions_nn": [], "actions_params": []}
{"id": "966713785", "service_name": "beseye", "triggers_nn": ["motion", "human", "camera"], "triggers_params": ["which camera?", "vcam id"], "queries_nn": [], "queries_params": [], "actions_nn": ["camera"], "actions_params": ["which camera?", "vcam id"]}
{"id": "969439368", "service_name": "Lytmi", "triggers_nn": ["motion", "fingerprint identification", "sound", "password", "sensor shake", "device", "camera", "card", "group", "light", "water sound", "person", "someone input", "lock", "water leak", "user", "door sensor", "pir", "electricity", "threshold"], "triggers_params": ["which device/group?", "which device"], "queries_nn": ["time", "sensor", "water leak", "list"], "queries_params": ["which device/group?", "which device"], "actions_nn": ["ac", "choosing", "brightness", "light", "controller", "ir", "color", "device", "scene", "heat mode", "oscillation function", "fan", "group", "mode", "temperature"], "actions_params": ["light scene?", "light color", "which device", "brightness", "turn on first?", "turn on first", "light scene", "color", "light brightness", "scene", "ac temperature", "which device/group?", "which scene", "temperature"]}
{"id": "973404314", "service_name": "MagicLight", "triggers_nn": [], "triggers_params": [], "queries_nn": [], "queries_params": [], "actions_nn": ["choice", "strobe", "brightness", "light", "change", "mode", "level", "color"], "actions_params": ["keep after blink", "which lights?", "brightness", "change new status after blink? ", "speed", "which function?", "which function", "number of blinks", "which lights", "brightness level?", "color"]}
{"id": "974035867", "service_name": "nexia", "triggers_nn": ["motion", "lock", "camera", "door", "nexia automation run", "motion sensor"], "triggers_params": ["which camera?", "sensor", "which door?", "which sensor?", "which lock?", "camera", "lock", "door sensor", "nexia automation", "which automation?"], "queries_nn": ["motion", "camera", "door", "list", "alert"], "queries_params": ["camera", "which door?", "which camera?", "door sensor"], "actions_nn": ["nexia automation", "switch"], "actions_params": ["which switch?", "which dimmer?", "value", "switch", "dimmer", "how bright?", "nexia automation", "which automation?"]}
{"id": "975060169", "service_name": "remotelync", "triggers_nn": ["motion", "monitor", "video", "connection", "carbon monoxide alarm", "remotelync place", "camera", "smoke alarm", "remotelync location", "battery", "remotelync camera"], "triggers_params": ["camera", "location", "which location?", "which camera?"], "queries_nn": [], "queries_params": [], "actions_nn": ["remotelync crew", "video", "entry", "remotelync location timeline", "remotelync location", "record", "remotelync camera"], "actions_params": ["which camera?", "location", "message", "camera", "message to send", "which location?"]}
{"id": "976301119", "service_name": "maestro_by_stelpro", "triggers_nn": ["problem", "maestro", "limit", "mode change", "room temperature"], "triggers_params": ["temperature limit", "residence", "residence state", "device id", "temperature format", "thermostat", "notification language", "direction", "mode", "language"], "queries_nn": ["problem", "maestro", "limit", "list", "room temperature"], "queries_params": ["temperature limit", "residence", "device id", "temperature format", "thermostat", "notification language", "direction", "language"], "actions_nn": ["status", "home", "maestro activity", "residence", "x \u00b0", "setpoint", "action", "thermostat"], "actions_params": ["residence", "residence state", "modifier", "device id", "new setpoint", "temperature format", "thermostat", "setpoint modifier", "activity list"]}
{"id": "980802559", "service_name": "caavo", "triggers_nn": ["sleep", "search query", "content", "caavo control center"], "triggers_params": ["created at", "title", "date and time event was created.", "title of the content launched with caavo", "full text from caavo control center voice search.", "text"], "queries_nn": [], "queries_params": [], "actions_nn": ["game", "device", "launch", "sound system", "play", "sleep", "caavo", "tv", "holiday movie", "minute", "app", "throne", "content", "set sleep timer", "action", "espn", "caavo control center", "notification", "channel", "tune"], "actions_params": ["item", "query", "text"]}
{"id": "985190030", "service_name": "ge_appliances_wac", "triggers_nn": ["energy", "target temperature", "ge window ac unit", "air filter", "saver mode", "fan", "mode"], "triggers_params": ["which appliance?", "applianceid"], "queries_nn": ["mode", "list", "ge window ac unit", "air filter", "fan", "target temperature"], "queries_params": ["which appliance?", "applianceid"], "actions_nn": ["mode", "fan mode", "air conditioner unit", "target temperature", "window ac unit"], "actions_params": ["set-fan", "set-mode", "what temperature?", "which appliance?", "applianceid", "fan mode", "set-target-temp", "operating mode"]}
{"id": "991483516", "service_name": "TickTick", "triggers_nn": ["ticktick", "task"], "triggers_params": ["priority", "list", "tag"], "queries_nn": ["time", "ticktick", "task", "list"], "queries_params": ["priority", "list", "tag"], "actions_nn": ["ticktick", "task", "list"], "actions_params": ["due date", "list", "priority", "task name", "task content"]}
{"id": "994711458", "service_name": "yardian", "triggers_nn": ["watering event"], "triggers_params": ["which profile", "what profile"], "queries_nn": [], "queries_params": [], "actions_nn": ["zone", "duration"], "actions_params": ["which profile zone", "which profile: zone", "duration"]}
{"id": "996886751", "service_name": "mesh", "triggers_nn": ["mesh app", "ifttt tag", "input signal", "tag"], "triggers_params": ["event id", "eventid"], "queries_nn": ["time", "mesh app", "tag", "input signal", "list", "ifttt tag"], "queries_params": ["event id", "eventid"], "actions_nn": ["mesh app", "event"], "actions_params": ["event id", "eventid"]}
{"id": "9", "service_name": "delicious", "triggers_nn": ["bookmark", "tag"], "triggers_params": ["time", "single tag", "title", "url", "the bookmark title, usually the page title at that url.", "date and time you created bookmark.", "notes", "tags", "the url that you bookmarked.", "the notes you leave on bookmark, blank otherwise.", "tags comma seperated.", "tag"], "queries_nn": [], "queries_params": [], "actions_nn": ["account", "bookmark"], "actions_params": ["notes", "tags", "url"]}
